{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerUpgradeHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"text":"This handler behaves a bit differently from its Netty counterpart because it does not allow upgrade","type":"text"},{"text":" ","type":"text"},{"text":"on any request but the first on a connection. This is primarily to handle clients that pipeline: itâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"sufficiently difficult to ensure that the upgrade happens at a safe time while dealing with pipelined","type":"text"},{"text":" ","type":"text"},{"text":"requests that we choose to punt on it entirely and not allow it. As it happens this is mostly fine:","type":"text"},{"text":" ","type":"text"},{"text":"the odds of someone needing to upgrade midway through the lifetime of a connection are very low.","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"title":"Conforms To"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"abstract":[{"type":"text","text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade."},{"type":"text","text":" "},{"type":"text","text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of"},{"type":"text","text":" "},{"type":"text","text":"whether the upgrade succeeded or not."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/httpserverupgradehandler"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:8NIOHTTP124HTTPServerUpgradeHandlerC","modules":[{"name":"NIOHTTP1"}],"role":"symbol","symbolKind":"class","roleHeading":"Class","title":"HTTPServerUpgradeHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","type":"topic","role":"symbol","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)","kind":"symbol","title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPServerUpgradeHandler"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgraders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTPServerProtocolUpgrader","preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"httpEncoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseEncoder","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"extraHTTPHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelinboundhandler-implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/OutboundOut":{"title":"HTTPServerUpgradeHandler.OutboundOut","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut","type":"topic","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/outboundout","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundOut":{"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"title":"HTTPServerUpgradeHandler.InboundOut","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundout","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelHandler-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelhandler-implementations","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/channelRead(context:data:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","title":"channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","title":"NIOHTTP1"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","type":"topic","role":"symbol","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundin","kind":"symbol","title":"HTTPServerUpgradeHandler.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler","navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","title":"HTTPServerUpgradeHandler","abstract":[{"text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of"},{"type":"text","text":" "},{"text":"whether the upgrade succeeded or not.","type":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/removeHandler(context:removalToken:)":{"title":"removeHandler(context:removalToken:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removalToken"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC12RemovalTokenV","kind":"typeIdentifier","text":"RemovalToken"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"text":"Ask the receiving ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" to remove itself from the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" as soon as possible.","type":"text"},{"text":" ","type":"text"},{"text":"The receiving ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"text":" may elect to remove itself sometime after this method call, rather than","type":"text"},{"type":"text","text":" "},{"type":"text","text":"immediately, but if it does so it must take the necessary precautions to handle events arriving between the"},{"type":"text","text":" "},{"type":"text","text":"invocation of this method and the call to "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":" that triggers the actual"},{"type":"text","text":" "},{"type":"text","text":"removal."}],"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/removehandler(context:removaltoken:)","kind":"symbol"}}}