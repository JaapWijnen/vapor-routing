{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"},"metadata":{"navigatorTitle":[{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}],"modules":[{"name":"NIOHTTP1"}],"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","title":"NIOHTTPClientProtocolUpgrader","externalID":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPClientProtocolUpgrader","kind":"identifier"}]},"kind":"symbol","sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader"]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)"]}],"variants":[{"paths":["\/documentation\/niohttp1\/niohttpclientprotocolupgrader"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"An object that implements "},{"code":"NIOHTTPClientProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/supportedProtocol":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/supportedprotocol","kind":"symbol","title":"supportedProtocol","abstract":[{"type":"text","text":"The protocol this upgrader knows how to support."}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/requiredUpgradeHeaders":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/requiredupgradeheaders","kind":"symbol","title":"requiredUpgradeHeaders","abstract":[{"type":"text","text":"All the header fields the protocol requires in the request to successfully upgrade."},{"type":"text","text":" "},{"type":"text","text":"These header fields will be added to the outbound request’s “Connection” header field."},{"type":"text","text":" "},{"type":"text","text":"It is the responsibility of the custom headers call to actually add these required headers."}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niohttp1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","title":"NIOHTTP1"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"required":true,"title":"shouldAllowUpgrade(upgradeResponse:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldAllowUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/shouldallowupgrade(upgraderesponse:)","abstract":[{"type":"text","text":"Gives the receiving upgrader the chance to deny the upgrade based on the upgrade HTTP response."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","title":"NIOHTTPClientProtocolUpgrader","kind":"symbol","abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/addCustom(upgradeRequestHeaders:)":{"type":"topic","abstract":[{"type":"text","text":"Additional headers to be added to the request, beyond the “Upgrade” and “Connection” headers."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","title":"addCustom(upgradeRequestHeaders:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeRequestHeaders"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":")"}],"required":true,"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/addcustom(upgraderequestheaders:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/upgrade(context:upgradeResponse:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","kind":"symbol","title":"upgrade(context:upgradeResponse:)","abstract":[{"type":"text","text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel"},{"text":" ","type":"text"},{"text":"pipeline to add whatever channel handlers are required.","type":"text"},{"text":" ","type":"text"},{"text":"Until the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" succeeds, all received data will be buffered.","type":"text"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"title":"NIOWebSocketClientUpgrader","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"}}}