{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"CoreMetrics","role":"collection","roleHeading":"Framework","externalID":"CoreMetrics","modules":[{"name":"CoreMetrics"}],"symbolKind":"module"},"hierarchy":{"paths":[[]]},"kind":"symbol","variants":[{"paths":["\/documentation\/coremetrics"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"],"title":"Enumerations"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit","navigatorTitle":[{"kind":"identifier","text":"TimeUnit"}],"kind":"symbol","abstract":[],"title":"TimeUnit","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeUnit"}],"type":"topic","url":"\/documentation\/coremetrics\/timeunit","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","navigatorTitle":[{"text":"RecorderHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RecorderHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":"."}],"title":"RecorderHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RecorderHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/recorderhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","navigatorTitle":[{"text":"MetricsFactory","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"MetricsFactory"},{"type":"text","text":" is the bridge between the "},{"type":"codeVoice","code":"MetricsSystem"},{"type":"text","text":" and the metrics backend implementation."},{"type":"text","text":" "},{"code":"MetricsFactory","type":"codeVoice"},{"text":"’s role is to initialize concrete implementations of the various metric types:","type":"text"}],"title":"MetricsFactory","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsFactory","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/metricsfactory","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","navigatorTitle":[{"text":"Recorder","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A recorder collects observations within a time window (usually things like response sizes) and "},{"type":"emphasis","inlineContent":[{"text":"can","type":"text"}]},{"type":"text","text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles."}],"title":"Recorder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Recorder","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/recorder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","navigatorTitle":[{"text":"TimerHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"TimerHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"Timer","type":"codeVoice"},{"text":".","type":"text"}],"title":"TimerHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimerHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/timerhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Ships with the metrics module, used for initial bootstrapping.","type":"text"}],"title":"NOOPMetricsHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NOOPMetricsHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/noopmetricshandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","navigatorTitle":[{"text":"MultiplexMetricsHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers.","type":"text"}],"title":"MultiplexMetricsHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MultiplexMetricsHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/multiplexmetricshandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","navigatorTitle":[{"text":"Gauge","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads.","type":"text"},{"text":" ","type":"text"},{"text":"Gauges are modeled as ","type":"text"},{"code":"Recorder","type":"codeVoice"},{"text":" with a sample size of 1 and that does not perform any aggregation.","type":"text"}],"title":"Gauge","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Gauge","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/gauge","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","navigatorTitle":[{"text":"FloatingPointCounterHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"FloatingPointCounter","type":"codeVoice"},{"type":"text","text":"."}],"title":"FloatingPointCounterHandler","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/floatingpointcounterhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"Counter","type":"codeVoice"},{"type":"text","text":"."}],"title":"CounterHandler","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/counterhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"url":"\/documentation\/coremetrics\/counter","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","role":"symbol","type":"topic","navigatorTitle":[{"text":"Counter","kind":"identifier"}],"title":"Counter","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Counter","kind":"identifier"}],"abstract":[{"type":"text","text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero."},{"type":"text","text":" "},{"type":"text","text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem","navigatorTitle":[{"text":"MetricsSystem","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" is a global facility where the default metrics backend implementation ("},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":") can be"},{"type":"text","text":" "},{"text":"configured. ","type":"text"},{"code":"MetricsSystem","type":"codeVoice"},{"text":" is set up just once in a given program to set up the desired metrics backend","type":"text"},{"text":" ","type":"text"},{"text":"implementation.","type":"text"}],"title":"MetricsSystem","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsSystem","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/metricssystem","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"url":"\/documentation\/coremetrics","type":"topic","role":"collection","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","title":"CoreMetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"url":"\/documentation\/coremetrics\/timer","title":"Timer","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,"},{"type":"text","text":" "},{"type":"text","text":"for example, min, max and various quantiles. It is similar to a "},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":" but specialized for values that represent durations."}],"navigatorTitle":[{"kind":"identifier","text":"Timer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounter"}],"kind":"symbol","abstract":[{"type":"text","text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero."},{"type":"text","text":" "},{"type":"text","text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors."},{"type":"text","text":" "},{"type":"text","text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries."}],"title":"FloatingPointCounter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounter"}],"type":"topic","url":"\/documentation\/coremetrics\/floatingpointcounter","role":"symbol"}}}