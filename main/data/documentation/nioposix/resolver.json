{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"metadata":{"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"Resolver"}],"externalID":"s:8NIOPosix8ResolverP","modules":[{"name":"NIOPosix"}],"title":"Resolver","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resolver"}]},"abstract":[{"text":"A protocol that covers an object that does DNS lookups.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/cancelQueries()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAAAAQuery(host:port:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAQuery(host:port:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/resolver"]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolver","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"In general the rules for the resolver are relatively broad: there are no specific requirements on how","type":"text"},{"text":" ","type":"text"},{"text":"it operates. However, the rest of the code assumes that it obeys RFC 6724, particularly section 6 on","type":"text"},{"text":" ","type":"text"},{"text":"ordering returned addresses. That is, the IPv6 and IPv4 responses should be ordered by the destination","type":"text"},{"text":" ","type":"text"},{"text":"address ordering rules from that RFC. This specification is widely implemented by getaddrinfo","type":"text"},{"text":" ","type":"text"},{"text":"implementations, so any implementation based on getaddrinfo will work just fine. In the future, a custom","type":"text"},{"text":" ","type":"text"},{"text":"resolver will need also to implement these sorting rules.","type":"text"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/cancelQueries()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/cancelQueries()","title":"cancelQueries()","url":"\/documentation\/nioposix\/resolver\/cancelqueries()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cancelQueries","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[{"text":"Cancel all outstanding DNS queries.","type":"text"}],"required":true,"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/initiateAAAAQuery(host:port:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAAAAQuery(host:port:)","title":"initiateAAAAQuery(host:port:)","url":"\/documentation\/nioposix\/resolver\/initiateaaaaquery(host:port:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"initiateAAAAQuery","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"kind":"symbol","abstract":[{"text":"Initiate a DNS AAAA query for a given host.","type":"text"}],"required":true,"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver":{"url":"\/documentation\/nioposix\/resolver","abstract":[{"text":"A protocol that covers an object that does DNS lookups.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolver","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Resolver","kind":"identifier"}],"title":"Resolver","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"role":"collection","title":"NIOPosix","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/Resolver/initiateAQuery(host:port:)":{"url":"\/documentation\/nioposix\/resolver\/initiateaquery(host:port:)","abstract":[{"text":"Initiate a DNS A query for a given host.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initiateAQuery","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"kind":"symbol","required":true,"title":"initiateAQuery(host:port:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/Resolver\/initiateAQuery(host:port:)","role":"symbol"}}}