{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPipeBootstrap","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Example bootstrapping a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" using "},{"type":"codeVoice","code":"stdin"},{"type":"text","text":" and "},{"type":"codeVoice","code":"stdout"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"code":["let channel = try NIOPipeBootstrap(group: group)","                  .channelInitializer { channel in","                      channel.pipeline.addHandler(MyChannelHandler())","                  }","                  .withPipes(inputDescriptor: STDIN_FILENO, outputDescriptor: STDOUT_FILENO)"],"type":"codeListing"}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niopipebootstrap"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(group:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(validatingGroup:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelInitializer(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelOption(_:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withInputOutputDescriptor(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)"],"title":"Instance Methods"}],"metadata":{"navigatorTitle":[{"text":"NIOPipeBootstrap","kind":"identifier"}],"symbolKind":"class","role":"symbol","externalID":"s:8NIOPosix16NIOPipeBootstrapC","modules":[{"name":"NIOPosix"}],"roleHeading":"Class","title":"NIOPipeBootstrap","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPipeBootstrap","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":" which uses two (uni-directional) UNIX pipes","type":"text"},{"text":" ","type":"text"},{"text":"and makes a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" out of them.","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/channelInitializer(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelInitializer(_:)","role":"symbol","abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"title":"channelInitializer(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nioposix\/niopipebootstrap\/channelinitializer(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/init(validatingGroup:)":{"kind":"symbol","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":", validating that "},{"type":"codeVoice","code":"group"},{"type":"text","text":" is compatible."}],"title":"init(validatingGroup:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(validatingGroup:)","url":"\/documentation\/nioposix\/niopipebootstrap\/init(validatinggroup:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"validatingGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withPipes(inputDescriptor:outputDescriptor:)":{"kind":"symbol","abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided input and output file descriptors."}],"title":"withPipes(inputDescriptor:outputDescriptor:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","url":"\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withPipes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withInputOutputDescriptor(_:)":{"title":"withInputOutputDescriptor(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withInputOutputDescriptor(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/nioposix\/niopipebootstrap\/withinputoutputdescriptor(_:)","abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided file descriptor which is used for both input & output."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withInputOutputDescriptor"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"role":"collection","title":"NIOPosix","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/channelOption(_:value:)":{"abstract":[{"type":"text","text":"Specifies a "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" to be applied to the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/nioposix\/niopipebootstrap\/channeloption(_:value:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelOption(_:value:)","title":"channelOption(_:value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap":{"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOPipeBootstrap"}],"title":"NIOPipeBootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" which uses two (uni-directional) UNIX pipes"},{"type":"text","text":" "},{"type":"text","text":"and makes a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" out of them."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPipeBootstrap"}],"url":"\/documentation\/nioposix\/niopipebootstrap"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/init(group:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(group:)","title":"init(group:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/init(group:)","role":"symbol","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":"."}]}}}