{"metadata":{"externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC","title":"MultiThreadedEventLoopGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"role":"symbol","symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"modules":[{"name":"NIOPosix"}]},"variants":[{"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"The effect of initializing a ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" is to spawn ","type":"text"},{"code":"numberOfThreads","type":"codeVoice"},{"text":" fresh threads which will","type":"text"},{"text":" ","type":"text"},{"text":"all run their own ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". Those threads will not be shut down until ","type":"text"},{"code":"shutdownGracefully","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"code":"syncShutdownGracefully","type":"codeVoice"},{"text":" is called.","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"inlineContent":[{"text":"It’s good style to call ","type":"text"},{"code":"MultiThreadedEventLoopGroup.shutdownGracefully","type":"codeVoice"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup.syncShutdownGracefully"},{"type":"text","text":" when you no longer need this "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". In"},{"type":"text","text":" "},{"type":"text","text":"many cases that is just before your program exits."}],"type":"paragraph"}],"style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unit tests often spawn one "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" per unit test to force isolation between the"},{"type":"text","text":" "},{"type":"text","text":"tests. In those cases it’s important to shut the "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down at the end of the"},{"type":"text","text":" "},{"type":"text","text":"test. A good place to start a "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"setUp"},{"type":"text","text":" method of your "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":" "},{"type":"text","text":"subclass, a good place to shut it down is the "},{"type":"codeVoice","code":"tearDown"},{"type":"text","text":" method."}]}],"style":"warning"}]}],"abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/next()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"abstract":[{"text":"Returns the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" from this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/next()","title":"next()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/next()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/init(numberOfThreads:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/init(numberOfThreads:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"numberOfThreads","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/init(numberofthreads:)","type":"topic","role":"symbol","title":"init(numberOfThreads:)","abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" instance which uses "},{"type":"codeVoice","code":"numberOfThreads"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/makeIterator()":{"title":"makeIterator()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore17EventLoopIteratorV","kind":"typeIdentifier","text":"EventLoopIterator"}],"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/makeiterator()","role":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"code":"EventLoopIterator","type":"codeVoice"},{"text":" over the ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s in this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/makeIterator()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","type":"topic","title":"EventLoopGroup","role":"symbol","url":"\/documentation\/niocore\/eventloopgroup"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/CustomStringConvertible-Implementations":{"title":"CustomStringConvertible Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/CustomStringConvertible-Implementations","role":"collectionGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/customstringconvertible-implementations","type":"topic","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/currentEventLoop":{"kind":"symbol","role":"symbol","abstract":[{"text":"Returns the ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" for the calling thread.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/currentEventLoop","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/currenteventloop","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentEventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":"?"}],"title":"currentEventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/shutdownGracefully(queue:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Shut this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" down which causes the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s and their associated threads to be","type":"text"},{"text":" ","type":"text"},{"text":"shut down and release their resources.","type":"text"}],"kind":"symbol","title":"shutdownGracefully(queue:_:)","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/withCurrentThreadAsEventLoop(_:)":{"abstract":[{"type":"text","text":"Convert the calling thread into an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/withcurrentthreadaseventloop(_:)","title":"withCurrentThreadAsEventLoop(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withCurrentThreadAsEventLoop","kind":"identifier"},{"text":"((","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/withCurrentThreadAsEventLoop(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/any()":{"url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/any()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"title":"any()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/any()","type":"topic","role":"symbol","abstract":[{"text":"Returns the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" if we are on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" of this ","type":"text"},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"text":" instance.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"title":"MultiThreadedEventLoopGroup","role":"symbol","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","abstract":[{"text":"An ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":" which will create multiple ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s, each tied to its own ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"navigatorTitle":[{"text":"MultiThreadedEventLoopGroup","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/EventLoopGroup-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/EventLoopGroup-Implementations","type":"topic","title":"EventLoopGroup Implementations","role":"collectionGroup","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/eventloopgroup-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"role":"collection","title":"NIOPosix","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"}}}