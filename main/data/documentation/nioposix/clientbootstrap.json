{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(group:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(validatingGroup:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/bind(to:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelOption(_:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(host:port:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(to:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(unixDomainSocketPath:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connectTimeout(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/resolver(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(descriptor:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol"],"title":"Conforms To"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientBootstrap"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Usually you re-use a ","type":"text"},{"type":"codeVoice","code":"ClientBootstrap"},{"text":" once you set it up and called ","type":"text"},{"type":"codeVoice","code":"connect"},{"text":" multiple times on it.","type":"text"},{"text":" ","type":"text"},{"text":"This way you ensure that the same ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":"s will be shared across all your connections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"syntax":"swift","code":["    let group = MultiThreadedEventLoopGroup(numberOfThreads: 1)","    defer {","        try! group.syncShutdownGracefully()","    }","    let bootstrap = ClientBootstrap(group: group)","        \/\/ Enable SO_REUSEADDR.","        .channelOption(ChannelOptions.socketOption(.so_reuseaddr), value: 1)","        .channelInitializer { channel in","            \/\/ always instantiate the handler _within_ the closure as","            \/\/ it may be called multiple times (for example if the hostname","            \/\/ resolves to both IPv4 and IPv6 addresses, cf. Happy Eyeballs).","            channel.pipeline.addHandler(MyChannelHandler())","        }","    try! bootstrap.connect(host: \"example.org\", port: 12345).wait()","    \/* the Channel is now connected *\/"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The connected ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" will operate on ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" as inbound and on ","type":"text"},{"type":"codeVoice","code":"IOData"},{"text":" as outbound messages.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/nioposix\/clientbootstrap"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"},"metadata":{"navigatorTitle":[{"text":"ClientBootstrap","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOPosix"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}],"externalID":"s:8NIOPosix15ClientBootstrapC","symbolKind":"class","roleHeading":"Class","title":"ClientBootstrap"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" is an easy way to bootstrap a "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" when creating network clients."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(host:port:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Specify the ","type":"text"},{"code":"host","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"port","type":"codeVoice"},{"text":" to connect to for the TCP ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" that will be established.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"url":"\/documentation\/nioposix\/clientbootstrap\/connect(host:port:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(host:port:)","title":"connect(host:port:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/protocolHandlers(_:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)","title":"protocolHandlers(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"(() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","type":"topic","abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"channelInitializer"},{"text":" has been called.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/channelOption(_:value:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/channeloption(_:value:)","title":"channelOption(_:value:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelOption","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelOption(_:value:)","type":"topic","abstract":[{"text":"Specifies a ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"text":" to be applied to the ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/bind(to:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/bind(to:)","title":"bind(to:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix15ClientBootstrapC","text":"ClientBootstrap"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/bind(to:)","type":"topic","abstract":[{"text":"Bind the ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"address"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol":{"navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"title":"NIOClientTCPBootstrapProtocol","abstract":[{"code":"NIOClientTCPBootstrapProtocol","type":"codeVoice"},{"type":"text","text":" is implemented by various underlying transport mechanisms. Typically,"},{"type":"text","text":" "},{"type":"text","text":"this will be the BSD Sockets API implemented by "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol","type":"topic","role":"symbol","url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"url":"\/documentation\/nioposix\/clientbootstrap","navigatorTitle":[{"kind":"identifier","text":"ClientBootstrap"}],"title":"ClientBootstrap","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientBootstrap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ClientBootstrap"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" when creating network clients.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/init(group:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/init(group:)","title":"init(group:)","role":"symbol","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(group:)","type":"topic","abstract":[{"text":"Create a ","type":"text"},{"type":"codeVoice","code":"ClientBootstrap"},{"text":" on the ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" ","type":"text"},{"type":"codeVoice","code":"group"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connectTimeout(_:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/connecttimeout(_:)","title":"connectTimeout(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connectTimeout","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connectTimeout(_:)","type":"topic","abstract":[{"text":"Specifies a timeout to apply to a connection attempt.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(to:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/connect(to:)","title":"connect(to:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(to:)","type":"topic","abstract":[{"text":"Specify the ","type":"text"},{"type":"codeVoice","code":"address"},{"text":" to connect to for the TCP ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will be established.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/connect(unixDomainSocketPath:)":{"url":"\/documentation\/nioposix\/clientbootstrap\/connect(unixdomainsocketpath:)","title":"connect(unixDomainSocketPath:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unixDomainSocketPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/connect(unixDomainSocketPath:)","type":"topic","abstract":[{"text":"Specify the ","type":"text"},{"type":"codeVoice","code":"unixDomainSocket"},{"text":" path to connect to for the UDS ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will be established.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"role":"collection","title":"NIOPosix","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/resolver(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"resolver"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix8ResolverP","text":"Resolver"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"resolver(_:)","abstract":[{"text":"Specifies the ","type":"text"},{"type":"codeVoice","code":"Resolver"},{"text":" to use or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the default should be used.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/resolver(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/resolver(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/channelInitializer(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"channelInitializer(_:)","abstract":[{"text":"Initialize the connected ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"initializer"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix\/clientbootstrap\/channelinitializer(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/channelInitializer(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/withConnectedSocket(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(_:)","abstract":[{"type":"text","text":"Use the existing connected socket file descriptor."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withConnectedSocket","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOBSDSocket","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Handle","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO6Handlea","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"withConnectedSocket(_:)","url":"\/documentation\/nioposix\/clientbootstrap\/withconnectedsocket(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/init(validatingGroup:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/init(validatingGroup:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"ClientBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":", validating that "},{"type":"codeVoice","code":"group"},{"type":"text","text":" is compatible."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"validatingGroup","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(validatingGroup:)","url":"\/documentation\/nioposix\/clientbootstrap\/init(validatinggroup:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/withConnectedSocket(descriptor:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/withConnectedSocket(descriptor:)","abstract":[{"type":"text","text":"Use the existing connected socket file descriptor."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withConnectedSocket","kind":"identifier"},{"text":"(","kind":"text"},{"text":"descriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"deprecated":true,"kind":"symbol","title":"withConnectedSocket(descriptor:)","url":"\/documentation\/nioposix\/clientbootstrap\/withconnectedsocket(descriptor:)"}}}