{"kind":"symbol","abstract":[{"text":"A thread pool that should be used if some (kernel thread) blocking work","type":"text"},{"text":" ","type":"text"},{"text":"needs to be performed for which no non-blocking API exists.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"When using NIO it is crucial not to block any of the "},{"code":"EventLoop","type":"codeVoice"},{"text":"s as that","type":"text"},{"text":" ","type":"text"},{"text":"leads to slow downs or stalls of arbitrary other work. Unfortunately though","type":"text"},{"text":" ","type":"text"},{"text":"there are tasks that applications need to achieve for which no non-blocking","type":"text"},{"text":" ","type":"text"},{"text":"APIs exist. In those cases ","type":"text"},{"type":"codeVoice","code":"NIOThreadPool"},{"text":" can be used but should be","type":"text"},{"text":" ","type":"text"},{"text":"treated as a last resort.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"The prime example for missing non-blocking APIs is file IO on UNIX.","type":"text"},{"text":" ","type":"text"},{"text":"The OS does not provide a usable and truly non-blocking API but with","type":"text"},{"text":" ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" NIO provides a high-level API for file IO that should","type":"text"},{"text":" ","type":"text"},{"text":"be preferred to running blocking file IO system calls directly on","type":"text"},{"text":" ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":". Under the covers ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" will use","type":"text"},{"text":" ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" on all currently supported platforms though.","type":"text"}]}],"type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niothreadpool"]}],"metadata":{"modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix13NIOThreadPoolC","role":"symbol","roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"NIOThreadPool"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"title":"NIOThreadPool"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool":{"navigatorTitle":[{"text":"NIOThreadPool","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool","title":"NIOThreadPool","url":"\/documentation\/nioposix\/niothreadpool","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOThreadPool","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A thread pool that should be used if some (kernel thread) blocking work"},{"text":" ","type":"text"},{"text":"needs to be performed for which no non-blocking API exists.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItem":{"abstract":[{"text":"The work that should be done by the ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"WorkItem","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/workitem","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WorkItem","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem","type":"topic","title":"NIOThreadPool.WorkItem"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"shutdownGracefully","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(_:)","kind":"symbol","title":"shutdownGracefully(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"role":"collection","title":"NIOPosix","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/runIfActive(eventLoop:_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","title":"runIfActive(eventLoop:_:)","url":"\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"type":"text","text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise."},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/start()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","title":"start()","kind":"symbol","role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Start the "},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":" if not already started."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/syncShutdownGracefully()":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()","url":"\/documentation\/nioposix\/niothreadpool\/syncshutdowngracefully()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncShutdownGracefully"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[],"kind":"symbol","role":"symbol","title":"syncShutdownGracefully()"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(queue:_:)":{"abstract":[{"text":"Gracefully shutdown this ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":". All tasks will be run before shutdown will take place.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(queue:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","type":"topic","title":"shutdownGracefully(queue:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItemState":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState","navigatorTitle":[{"text":"WorkItemState","kind":"identifier"}],"url":"\/documentation\/nioposix\/niothreadpool\/workitemstate","role":"symbol","kind":"symbol","title":"NIOThreadPool.WorkItemState","abstract":[{"text":"The state of the ","type":"text"},{"code":"WorkItem","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WorkItemState","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/init(numberOfThreads:)":{"abstract":[{"text":"Initialize a ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" thread pool with ","type":"text"},{"type":"codeVoice","code":"numberOfThreads"},{"type":"text","text":" threads."}],"kind":"symbol","role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/init(numberofthreads:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"numberOfThreads","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)","type":"topic","title":"init(numberOfThreads:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/submit(_:)":{"abstract":[{"text":"Submit a ","type":"text"},{"code":"WorkItem","type":"codeVoice"},{"text":" to process.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/submit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","text":"NIOThreadPool","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC8WorkItema","text":"WorkItem","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","type":"topic","title":"submit(_:)"}}}