{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = 1 << 14)"}]}]},{"kind":"parameters","parameters":[{"name":"maxFrameSize","content":[{"inlineContent":[{"type":"text","text":"The maximum frame size the decoder is willing to tolerate from the"},{"type":"text","text":" "},{"type":"text","text":"remote peer. WebSockets in principle allows frame sizes up to "},{"code":"2**64","type":"codeVoice"},{"type":"text","text":" bytes, but"},{"type":"text","text":" "},{"type":"text","text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not"},{"type":"text","text":" "},{"type":"text","text":"possible to even allocate a buffer large enough to handle this size), so we"},{"type":"text","text":" "},{"type":"text","text":"set a lower one. The default value is the same as the default HTTP\/2 max frame"},{"type":"text","text":" "},{"type":"text","text":"size, "},{"code":"2**14","type":"codeVoice"},{"type":"text","text":" bytes. Users may override this to any value up to "},{"code":"UInt32.max","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Users are strongly encouraged not to increase this value unless they absolutely"},{"type":"text","text":" "},{"type":"text","text":"must, as the decoder will not produce partial frames, meaning that it will hold"},{"type":"text","text":" "},{"type":"text","text":"on to data until the "},{"type":"emphasis","inlineContent":[{"text":"entire","type":"text"}]},{"type":"text","text":" body is received."}],"type":"paragraph"}]},{"name":"automaticErrorHandling","content":[{"inlineContent":[{"type":"text","text":"Whether this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" should automatically handle"},{"type":"text","text":" "},{"type":"text","text":"protocol errors in frame serialization, or whether it should allow the pipeline"},{"type":"text","text":" "},{"type":"text","text":"to handle them."}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)"]}],"abstract":[{"text":"Construct a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrameDecoder"}],"kind":"symbol","metadata":{"externalID":"s:12NIOWebSocket03WebB12FrameDecoderC03maxD4SizeACSi_tcfc","roleHeading":"Initializer","role":"symbol","title":"init(maxFrameSize:)","modules":[{"name":"NIOWebSocket"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"symbolKind":"init"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niowebsocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameDecoder","kind":"identifier"}],"url":"\/documentation\/niowebsocket\/websocketframedecoder","title":"WebSocketFrameDecoder","abstract":[{"text":"An inbound ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that deserializes websocket frames into a structured","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"format for further processing."}],"navigatorTitle":[{"text":"WebSocketFrameDecoder","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder/init(maxFrameSize:)":{"abstract":[{"text":"Construct a new ","type":"text"},{"type":"codeVoice","code":"WebSocketFrameDecoder"}],"title":"init(maxFrameSize:)","url":"\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","role":"symbol","type":"topic"}}}