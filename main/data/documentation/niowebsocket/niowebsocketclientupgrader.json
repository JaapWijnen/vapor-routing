{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This upgrader assumes that the ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":" will create and send the upgrade request.","type":"text"},{"text":" ","type":"text"},{"text":"This upgrader also assumes that the ","type":"text"},{"code":"HTTPClientUpgradeHandler","type":"codeVoice"},{"text":" will appropriately mutate the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to remove the HTTP ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketclientupgrader"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"sections":[],"abstract":[{"text":"A ","type":"text"},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"],"title":"Type Methods"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"externalID":"s:12NIOWebSocket0aB14ClientUpgraderC","title":"NIOWebSocketClientUpgrader","modules":[{"name":"NIOWebSocket"}],"navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"roleHeading":"Class"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey(using:)":{"title":"randomRequestKey(using:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomRequestKey"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Generator"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Generator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey(using:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/shouldallowupgrade(upgraderesponse:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldAllowUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"shouldAllowUpgrade(upgradeResponse:)","abstract":[{"text":"Allow or deny the upgrade based on the upgrade HTTP response","type":"text"},{"text":" ","type":"text"},{"text":"headers containing the correct accept key.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/requiredUpgradeHeaders":{"type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/requiredupgradeheaders","abstract":[{"text":"None of the websocket headers are actually defined as ‘required’.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","role":"symbol","title":"requiredUpgradeHeaders","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niowebsocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"title":"NIOWebSocketClientUpgrader","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HTTPClientProtocolUpgrader"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)":{"title":"init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/init(requestkey:maxframesize:automaticerrorhandling:upgradepipelinehandler:)","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"requestKey","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">)"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/upgrade(context:upgradeResponse:)":{"abstract":[{"type":"text","text":"Called when the upgrade response has been flushed and it is safe to mutate the channel"},{"type":"text","text":" "},{"type":"text","text":"pipeline. Adds channel handlers for websocket frame encoding, decoding and errors."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"kind":"symbol","title":"upgrade(context:upgradeResponse:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/upgrade(context:upgraderesponse:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","abstract":[{"text":"Generates a random WebSocket Request Key by generating 16 bytes randomly using the ","type":"text"},{"type":"codeVoice","code":"SystemRandomNumberGenerator"},{"text":" and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1.","type":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey()","type":"topic","kind":"symbol","role":"symbol","title":"randomRequestKey()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomRequestKey","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/addCustom(upgradeRequestHeaders:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","type":"topic","abstract":[{"type":"text","text":"Add additional headers that are needed for a WebSocket upgrade request."}],"role":"symbol","title":"addCustom(upgradeRequestHeaders:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addCustom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeRequestHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/addcustom(upgraderequestheaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/supportedProtocol":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"supportedProtocol","abstract":[{"type":"text","text":"RFC 6455 specs this as the required entry in the Upgrade header."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/supportedprotocol","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","title":"NIOHTTPClientProtocolUpgrader","kind":"symbol","abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"text":" knows how to handle HTTP upgrade to","type":"text"},{"text":" ","type":"text"},{"text":"a protocol on a client-side channel.","type":"text"},{"text":" ","type":"text"},{"text":"It has the option of denying this upgrade based upon the server response.","type":"text"}]}}}