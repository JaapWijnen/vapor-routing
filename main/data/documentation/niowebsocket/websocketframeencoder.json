{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"An inbound "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that serializes structured websocket frames into a byte stream"},{"type":"text","text":" "},{"type":"text","text":"for sending on the network."}],"variants":[{"paths":["\/documentation\/niowebsocket\/websocketframeencoder"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameEncoder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This encoder has limited enforcement of compliance to RFC 6455. In particular, to guarantee","type":"text"},{"text":" ","type":"text"},{"text":"that the encoder can handle arbitrary extensions, only normative MUST\/MUST NOTs that do not","type":"text"},{"text":" ","type":"text"},{"text":"relate to extensions (e.g. the requirement that control frames not have lengths larger than","type":"text"},{"text":" ","type":"text"},{"text":"125 bytes) are enforced by this encoder.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This encoder does not have any support for encoder extensions. If you wish to support"},{"type":"text","text":" "},{"type":"text","text":"extensions, you should implement a message-to-message encoder that performs the appropriate"},{"type":"text","text":" "},{"type":"text","text":"frame transformation as needed."}]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameEncoder","kind":"identifier"}],"roleHeading":"Class","externalID":"s:12NIOWebSocket03WebB12FrameEncoderC","role":"symbol","symbolKind":"class","modules":[{"name":"NIOWebSocket"}],"title":"WebSocketFrameEncoder","navigatorTitle":[{"text":"WebSocketFrameEncoder","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder","interfaceLanguage":"swift"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerRemoved(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder\/handlerremoved(context:)","title":"handlerRemoved(context:)","abstract":[{"text":"Called when this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" is removed from the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/init()":{"url":"\/documentation\/niowebsocket\/websocketframeencoder\/init()","role":"symbol","title":"init()","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations","type":"topic","abstract":[],"title":"ChannelOutboundHandler Implementations","kind":"article","url":"\/documentation\/niowebsocket\/websocketframeencoder\/channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder":{"title":"WebSocketFrameEncoder","role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder","abstract":[{"text":"An inbound ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that serializes structured websocket frames into a byte stream","type":"text"},{"text":" ","type":"text"},{"text":"for sending on the network.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"WebSocketFrameEncoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerAdded(context:)":{"abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is added to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"handlerAdded(context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder\/handleradded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niowebsocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/write(context:data:promise:)":{"title":"write(context:data:promise:)","kind":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/websocketframeencoder\/write(context:data:promise:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)","abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundIn":{"url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundin","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"type":"topic","title":"WebSocketFrameEncoder.OutboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundOut":{"type":"topic","url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","title":"WebSocketFrameEncoder.OutboundOut","role":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut"}}}