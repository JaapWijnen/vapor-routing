{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketProtocolErrorHandler"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" provides default error handling for basic errors in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"WebSocket protocol, and can be used by users when custom behaviour is not required."}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"roleHeading":"Class","title":"WebSocketProtocolErrorHandler","modules":[{"name":"NIOWebSocket"}],"navigatorTitle":[{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"symbolKind":"class","externalID":"s:12NIOWebSocket03WebB20ProtocolErrorHandlerC","role":"symbol"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","interfaceLanguage":"swift"},"abstract":[{"text":"A simple ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that catches protocol errors emitted by the","type":"text"},{"text":" ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"text":" and automatically generates protocol error responses.","type":"text"}],"variants":[{"paths":["\/documentation\/niowebsocket\/websocketprotocolerrorhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations"],"generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelHandler-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler","abstract":[{"text":"A simple ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that catches protocol errors emitted by the","type":"text"},{"text":" ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"},{"text":" and automatically generates protocol error responses.","type":"text"}],"title":"WebSocketProtocolErrorHandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelinboundhandler-implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/init()":{"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/init()","title":"init()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"kind":"symbol","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niowebsocket","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/OutboundOut":{"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"role":"symbol","title":"WebSocketProtocolErrorHandler.OutboundOut","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/OutboundOut","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/outboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/errorCaught(context:error:)":{"title":"errorCaught(context:error:)","kind":"symbol","role":"symbol","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/errorcaught(context:error:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)","abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/InboundIn":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"type":"topic","title":"WebSocketProtocolErrorHandler.InboundIn","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/InboundIn","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/inboundin"}}}