{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"role":"collectionGroup","modules":[{"name":"NIOHTTPCompression"}],"title":"ChannelInboundHandler Implementations"},"kind":"article","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor\/unwrapInboundIn(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor\/wrapInboundOut(_:)"],"generated":true,"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/niohttpcompression\/httpresponsecompressor\/channelinboundhandler-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor\/ChannelInboundHandler-Implementations"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression":{"abstract":[],"role":"collection","title":"NIOHTTPCompression","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression","url":"\/documentation\/niohttpcompression","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/HTTPResponseCompressor/wrapInboundOut(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor\/wrapInboundOut(_:)","abstract":[{"text":"Wrap the provided ","type":"text"},{"type":"codeVoice","code":"InboundOut"},{"text":" that will be passed to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" by calling ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.fireChannelRead"},{"text":".","type":"text"}],"type":"topic","title":"wrapInboundOut(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/niohttpcompression\/httpresponsecompressor\/wrapinboundout(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/HTTPResponseCompressor/unwrapInboundIn(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor\/unwrapInboundIn(_:)","title":"unwrapInboundIn(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}],"abstract":[{"text":"Unwrap the provided ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" that was passed to ","type":"text"},{"type":"codeVoice","code":"channelRead"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/niohttpcompression\/httpresponsecompressor\/unwrapinboundin(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTPCompression/HTTPResponseCompressor":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseCompressor","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A HTTPResponseCompressor is a duplex channel handler that handles automatic streaming compression of","type":"text"},{"text":" ","type":"text"},{"text":"HTTP responses. It respects the clientâ€™s Accept-Encoding preferences, including q-values if present,","type":"text"},{"text":" ","type":"text"},{"text":"and ensures that clients are served the compression algorithm that works best for them.","type":"text"}],"title":"HTTPResponseCompressor","navigatorTitle":[{"text":"HTTPResponseCompressor","kind":"identifier"}],"url":"\/documentation\/niohttpcompression\/httpresponsecompressor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTPCompression\/HTTPResponseCompressor","role":"symbol"}}}