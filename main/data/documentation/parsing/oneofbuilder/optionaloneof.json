{"sections":[],"abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/oneofbuilder\/optionaloneof"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"You won’t typically construct this parser directly, but instead will use standard ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" ","type":"text"},{"text":"statements in a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","type":"reference"},{"text":" block to automatically build optional parsers:","type":"text"}],"type":"paragraph"},{"code":["let whitespace = OneOf {","  if shouldParseNewlines {","    \"\\r\\n\"","    \"\\r\"","    \"\\n\"","  }","","  \" \"","  \"\\t\"","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"role":"symbol","title":"OneOfBuilder.OptionalOneOf","navigatorTitle":[{"text":"OptionalOneOf","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:7Parsing12OneOfBuilderO08OptionalbC0V","modules":[{"name":"Parsing"}],"symbolKind":"struct"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/ParserPrinter-Implementations":{"abstract":[],"title":"ParserPrinter Implementations","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parserprinter-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalOneOf"}],"abstract":[{"type":"text","text":"A parser that parses output from an optional parser."}],"type":"topic","title":"OneOfBuilder.OptionalOneOf","navigatorTitle":[{"kind":"identifier","text":"OptionalOneOf"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parser-implementations","abstract":[],"type":"topic","title":"Parser Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/parse(_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)","title":"parse(_:)","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder":{"title":"OneOfBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfBuilder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","navigatorTitle":[{"kind":"identifier","text":"OneOfBuilder"}],"type":"topic","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs each parser in the closure, one after another, till one succeeds with an output.","type":"text"}],"url":"\/documentation\/parsing\/oneofbuilder","kind":"symbol","role":"symbol"}}}