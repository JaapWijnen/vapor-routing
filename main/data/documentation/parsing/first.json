{"metadata":{"symbolKind":"struct","title":"First","navigatorTitle":[{"text":"First","kind":"identifier"}],"modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","externalID":"s:7Parsing5FirstV"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/parsing\/first"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is named after "},{"code":"Sequence.first","type":"codeVoice"},{"type":"text","text":", and attempts to parse the first element from a"},{"type":"text","text":" "},{"type":"text","text":"collection of input by calling this property under the hood."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, it can parse the leading character off a substring:"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello\"[...]","try First().parse(&input)  \/\/ \"H\"","input                      \/\/ \"ello\""]},{"type":"paragraph","inlineContent":[{"text":"This parser fails if the input collection is empty:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["input = \"\"","try First().parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 |","\/\/   | ^ expected element"]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/First/parse(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/first\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-9rmtu":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"init()","url":"\/documentation\/parsing\/first\/init()-9rmtu","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-9rmtu","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/ParserPrinter-Implementations":{"role":"collectionGroup","title":"ParserPrinter Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/first\/parserprinter-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","title":"ParserPrinter","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-1y770":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"title":"init()","url":"\/documentation\/parsing\/first\/init()-1y770","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-1y770","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/Parser-Implementations":{"kind":"article","role":"collectionGroup","title":"Parser Implementations","url":"\/documentation\/parsing\/first\/parser-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/Parser-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First/init()-7nnzb":{"abstract":[],"title":"init()","url":"\/documentation\/parsing\/first\/init()-7nnzb","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First\/init()-7nnzb","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/First":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"kind":"symbol","role":"symbol","title":"First","url":"\/documentation\/parsing\/first","type":"topic","navigatorTitle":[{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/First","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]}}}