{"metadata":{"title":"ParsePrint","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"}],"externalID":"s:7Parsing10ParsePrintV","navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo"}],"abstract":[{"text":"An entry to ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParserPrinters","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ParserPrinter","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","preciseIdentifier":"s:7Parsing13ParserPrinterP"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Although you can build printers with the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","isActive":true},{"type":"text","text":" entry point, as long as everything in the"},{"type":"text","text":" "},{"type":"text","text":"builder context is a printer, it doesn’t proper connote its intentions. By using "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","isActive":true},{"type":"text","text":" "},{"type":"text","text":"you can make your intentions clearer:"}],"type":"paragraph"},{"syntax":"swift","code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint"},{"type":"text","text":" entry point can also help you catch errors earlier if you accidentally use"},{"type":"text","text":" "},{"type":"text","text":"an operator that is not printer-friendly:"}],"type":"paragraph"},{"syntax":"swift","code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"],"type":"codeListing"},{"content":[{"inlineContent":[{"text":"Generic struct ","type":"text"},{"type":"codeVoice","code":"ParsePrint"},{"text":" requires that ","type":"text"},{"type":"codeVoice","code":"Parsers.Map<Prefix<Substring>, String>"},{"text":" conform","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"}],"type":"paragraph"}],"style":"note","type":"aside"},{"inlineContent":[{"code":"ParsePrint","type":"codeVoice"},{"text":" is a type alias for the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","type":"reference"},{"text":" parser with its underlying parser constrained to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(with:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parserPrinters"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/parsing\/parseprint"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","title":"init(_:with:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/Parser-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","title":"Parser Implementations","url":"\/documentation\/parsing\/parseprint\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"title":"init(_:with:)","role":"symbol","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/parse(_:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parseprint\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/parserPrinters":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/parserPrinters","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parserPrinters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parseprint\/parserprinters","title":"parserPrinters"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","url":"\/documentation\/parsing\/parserprinter","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","type":"topic","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint":{"type":"topic","title":"ParsePrint","abstract":[{"text":"An entry to ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","isActive":true,"type":"reference"},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parseprint","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint","navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parse":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parse","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"role":"symbol","title":"Parse","type":"topic","url":"\/documentation\/parsing\/parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/init(with:)":{"abstract":[],"role":"symbol","title":"init(with:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parseprint\/init(with:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/init(with:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParsePrint/print(_:into:)":{"url":"\/documentation\/parsing\/parseprint\/print(_:into:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParsePrint\/print(_:into:)","title":"print(_:into:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}]}}}