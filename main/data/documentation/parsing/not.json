{"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","text":"Parser"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, to parse a line from an input that does not start with “\/\/” one can do:"}]},{"code":["let uncommentedLine = Parse {","  Not { \"\/\/\" }","  PrefixUpTo(\"\\n\")","}","","try uncommentedLine.parse(\"let x = 1\") \/\/ ✅ \"let x = 1\"","","try uncommentedLine.parse(\"\/\/ let x = 1\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1-2","\/\/ 1 | \/\/ let x = 1","\/\/   | ^^ expected not to be processed"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/not"]}],"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"Not","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Parsing"}],"title":"Not","roleHeading":"Structure","externalID":"s:7Parsing3NotV"},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","type":"topic","title":"Parser Implementations","abstract":[],"kind":"article","url":"\/documentation\/parsing\/not\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"url":"\/documentation\/parsing\/not","title":"Not","abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"navigatorTitle":[{"text":"Not","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations","role":"collectionGroup","title":"ParserPrinter Implementations","kind":"article","type":"topic","url":"\/documentation\/parsing\/not\/parserprinter-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","url":"\/documentation\/parsing\/parserprinter","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/print(_:into:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/parsing\/not\/print(_:into:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)","role":"symbol","kind":"symbol","title":"print(_:into:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/parse(_:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/parsing\/not\/parse(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)","title":"init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"type":"text","text":"Creates a parser that succeeds if the given parser fails, and does not consume any input."}],"url":"\/documentation\/parsing\/not\/init(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/upstream":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream","title":"upstream","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"role":"symbol","abstract":[],"url":"\/documentation\/parsing\/not\/upstream","kind":"symbol"}}}