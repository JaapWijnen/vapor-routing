{"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/Conversion-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","text":"AnyConversion","preciseIdentifier":"s:7Parsing13AnyConversionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}]}],"kind":"content"},{"parameters":[{"name":"apply","content":[{"inlineContent":[{"text":"A closure that attempts to convert an input into an output. ","type":"text"},{"type":"codeVoice","code":"apply"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/apply(_:)","isActive":true,"type":"reference"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}],"type":"paragraph"}]},{"name":"unapply","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to convert an output into an input. ","type":"text"},{"type":"codeVoice","code":"unapply"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/unapply(_:)"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of"},{"type":"text","text":" "},{"type":"text","text":"defining a dedicated type."}]},{"syntax":"swift","code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If performance is a concern, you should define a custom type that conforms to "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to"},{"type":"text","text":" "},{"type":"text","text":"better optimize, and puts your in a better position to test the conversion."}]},{"syntax":"swift","code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/convert(apply:unapply:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","title":"convert(apply:unapply:)","roleHeading":"Type Method","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO11BytesToDataV","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Parsing","symbolKind":"method"},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/conversions\/bytestodata\/convert(apply:unapply:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"title":"PrependableCollection","role":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","url":"\/documentation\/parsing\/prependablecollection","abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData/convert(apply:unapply:)":{"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/convert(apply:unapply:)","title":"convert(apply:unapply:)","type":"topic","url":"\/documentation\/parsing\/conversions\/bytestodata\/convert(apply:unapply:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData/apply(_:)":{"kind":"symbol","type":"topic","title":"apply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/apply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/apply(_:)","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/conversion","role":"symbol","title":"Conversion","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData":{"kind":"symbol","type":"topic","title":"Conversions.BytesToData","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesToData"}],"url":"\/documentation\/parsing\/conversions\/bytestodata","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData","abstract":[{"text":"A conversion from a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","type":"reference","isActive":true},{"text":" of UTF-8 bytes to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BytesToData"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData/Conversion-Implementations":{"kind":"article","type":"topic","title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/bytestodata\/conversion-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/Conversion-Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyConversion":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","role":"symbol","url":"\/documentation\/parsing\/anyconversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyConversion"}],"abstract":[{"text":"A type-erased ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","type":"reference"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"title":"AnyConversion"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/BytesToData/unapply(_:)":{"kind":"symbol","type":"topic","title":"unapply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/unapply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/BytesToData\/unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"title":"Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","kind":"symbol","url":"\/documentation\/parsing\/conversions","role":"symbol"}}}