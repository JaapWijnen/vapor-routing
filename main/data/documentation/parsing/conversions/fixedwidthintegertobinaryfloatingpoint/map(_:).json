{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/map(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/map(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"downstream","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","preciseIdentifier":"s:7Parsing10ConversionP","text":"Conversion","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A conversion that transforms the input of this conversion into the output of the"},{"type":"text","text":" "},{"type":"text","text":"given conversion."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"downstream","content":[{"type":"paragraph","inlineContent":[{"text":"A conversion that transforms the output of this conversion into some","type":"text"},{"text":" ","type":"text"},{"text":"new output.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"When provided with a conversion from this conversion’s output type to some new output type,","type":"text"},{"text":" ","type":"text"},{"text":"this method can return a new conversion from this conversion’s input type to the given","type":"text"},{"text":" ","type":"text"},{"text":"conversion’s output type by calling their ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)","isActive":true,"type":"reference"},{"text":" functions and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/unapply(_:)","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"functions one after the other.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.map","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Optional.map","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Result.map","type":"codeVoice"},{"text":" in the Swift","type":"text"},{"text":" ","type":"text"},{"text":"standard library, as well as ","type":"text"},{"code":"Publisher.map","type":"codeVoice"},{"text":" in the Combine framework. This method is also","type":"text"},{"text":" ","type":"text"},{"text":"similar to the ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" functions on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","type":"reference"},{"text":", especially","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/map(_:)-18m9d","type":"reference"},{"text":", which takes a conversion.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Returns a conversion that transforms the output of this conversion with a given downstream"},{"type":"text","text":" "},{"type":"text","text":"conversion."}],"sections":[],"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"title":"map(_:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7Parsing10ConversionPAAE3mapyAA11ConversionsO3MapVy_xqd__Gqd__AaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","extendedModule":"Parsing","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser/map(_:)-18m9d":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","text":"MapConversion","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser\/map(_:)-18m9d","type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","role":"symbol","title":"map(_:)","abstract":[{"text":"Returns a parser-printer that transforms the output of this parser with a given conversion.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/Map":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/Map","role":"symbol","url":"\/documentation\/parsing\/conversions\/map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"abstract":[{"text":"A conversion that composes two conversions together by composing their","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/apply(_:)","type":"reference"},{"text":" functions and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/unapply(_:)","type":"reference"},{"type":"text","text":" functions together."}],"navigatorTitle":[{"kind":"identifier","text":"Map"}],"title":"Conversions.Map"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/apply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"kind":"symbol","role":"symbol","title":"apply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/apply(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/conversion","role":"symbol","title":"Conversion","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value back into an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","url":"\/documentation\/parsing\/parserprinter","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","role":"symbol","title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint","navigatorTitle":[{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/unapply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"kind":"symbol","role":"symbol","title":"unapply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/unapply(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/unapply(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/map(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/map(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/map(_:)","role":"symbol","title":"map(_:)","abstract":[{"type":"text","text":"Returns a conversion that transforms the output of this conversion with a given downstream"},{"type":"text","text":" "},{"type":"text","text":"conversion."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"title":"Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","kind":"symbol","url":"\/documentation\/parsing\/conversions","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion/apply(_:)":{"url":"\/documentation\/parsing\/conversion\/apply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/apply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"apply(_:)","required":true,"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/Conversion-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations","role":"collectionGroup","title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/conversion-implementations","abstract":[],"kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion/unapply(_:)":{"kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion\/unapply(_:)","role":"symbol","url":"\/documentation\/parsing\/conversion\/unapply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"title":"unapply(_:)"}}}