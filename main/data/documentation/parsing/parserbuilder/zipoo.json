{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/init(_:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/p0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/p1"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"navigatorTitle":[{"text":"ZipOO","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","externalID":"s:7Parsing13ParserBuilderO5ZipOOV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOO","kind":"identifier"}],"title":"ParserBuilder.ZipOO","extendedModule":"Parsing","modules":[{"name":"Parsing"}]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipoo"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOO","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P1","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/parse(_:)":{"title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoo\/parse(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/init(_:_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/init(_:_:)","title":"init(_:_:)","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoo\/init(_:_:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/p1":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P1"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/p1","title":"p1","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoo\/p1","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO":{"title":"ParserBuilder.ZipOO","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOO","kind":"identifier"}],"navigatorTitle":[{"text":"ZipOO","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoo","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/Parser-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/Parser-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipoo\/parser-implementations","title":"Parser Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/p0":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P0"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/p0","title":"p0","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoo\/p0","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"type":"topic","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","role":"symbol","conformance":{"constraints":[{"code":"P0","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P1","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", and "},{"code":"P0.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOO/ParserPrinter-Implementations":{"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipoo\/parserprinter-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOO\/ParserPrinter-Implementations","role":"collectionGroup","title":"ParserPrinter Implementations","abstract":[]}}}