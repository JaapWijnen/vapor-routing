{"metadata":{"title":"ParserBuilder.ZipVVO","extendedModule":"Parsing","navigatorTitle":[{"kind":"identifier","text":"ZipVVO"}],"modules":[{"name":"Parsing"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVVO"}],"role":"symbol","roleHeading":"Structure","externalID":"s:7Parsing13ParserBuilderO6ZipVVOV"},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvvo"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVO","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P2","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/init(_:_:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p1","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p2"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/ParserPrinter-Implementations"],"generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"P0"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P2"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"P0.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"P1.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"P2.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"P1.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO":{"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVO","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO","title":"ParserBuilder.ZipVVO","type":"topic","kind":"symbol","navigatorTitle":[{"text":"ZipVVO","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/init(_:_:_:)":{"title":"init(_:_:_:)","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/init(_:_:_:)","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/init(_:_:_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/parse(_:)":{"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/parse(_:)","title":"parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/ParserPrinter-Implementations":{"kind":"article","title":"ParserPrinter Implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/parserprinter-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/p1":{"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/p1","abstract":[],"title":"p1","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p1","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P1","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p1","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/p2":{"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/p2","abstract":[],"title":"p2","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p2","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P2","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p2","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/p0":{"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/p0","abstract":[],"title":"p0","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"p0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P0"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/p0","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","role":"symbol","kind":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipVVO/Parser-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/parsing\/parserbuilder\/zipvvo\/parser-implementations","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipVVO\/Parser-Implementations","abstract":[]}}}