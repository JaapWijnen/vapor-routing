{"metadata":{"modules":[{"name":"Parsing"}],"title":"print()","role":"symbol","extendedModule":"Parsing","symbolKind":"method","externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzyt6OutputRtzrlE5printAFyKF::SYNTHESIZED::s:7Parsing13ParserBuilderO6ZipOVVV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV\/print()","interfaceLanguage":"swift"},"abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A nebulous value."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV\/ParserPrinter-Implementations"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipovv\/print()"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVV":{"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipovv","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOVV"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ZipOVV"}],"title":"ParserBuilder.ZipOVV"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVV/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parserbuilder\/zipovv\/parserprinter-implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"ParserPrinter Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV\/ParserPrinter-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOVV/print()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOVV\/print()","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder\/zipovv\/print()","kind":"symbol","title":"print()","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}