{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipoooovo\/print(_:)"]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"Parsing","title":"print(_:)","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"symbolKind":"method","externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzrlE5printyAF6OutputQzKF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipOOOOVOV"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/ParserPrinter-Implementations"]]},"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A more nebulous value printed from the given output."}]}]},{"kind":"parameters","parameters":[{"name":"output","content":[{"type":"paragraph","inlineContent":[{"text":"A well-structured piece of data to be printed.","type":"text"}]}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder":{"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO/print(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/print(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"role":"symbol","kind":"symbol","title":"print(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parserbuilder\/zipoooovo\/print(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo\/parserprinter-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserBuilder/ZipOOOOVO":{"role":"symbol","abstract":[],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOOVO","kind":"identifier"}],"navigatorTitle":[{"text":"ZipOOOOVO","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOVO","title":"ParserBuilder.ZipOOOOVO","url":"\/documentation\/parsing\/parserbuilder\/zipoooovo"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"}}}