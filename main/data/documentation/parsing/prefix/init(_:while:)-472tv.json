{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")? = nil) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13CountingRangeP","kind":"typeIdentifier","text":"CountingRange","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/CountingRange"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A length that provides a minimum number and maximum of elements to consume for"},{"type":"text","text":" "},{"type":"text","text":"parsing to be considered successful."}],"type":"paragraph"}],"name":"length"},{"content":[{"inlineContent":[{"type":"text","text":"An optional closure that takes an element of the input sequence as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the element should be included or "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be excluded."},{"type":"text","text":" "},{"type":"text","text":"Once the predicate returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}],"name":"predicate"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"syntax":"swift","code":["try Prefix(1...) { $0.isNumber }.parse(\"123456\")  \/\/ \"123456\"","","try Prefix(1...) { $0.isNumber }.parse(\"\")","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 |","\/\/   | ^ expected 1 more element satisfying predicate"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-472tv"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","metadata":{"externalID":"s:7Parsing6PrefixV_5whileACyxGqd___Sb7ElementQzcSgtcAA13CountingRangeRd__lufc","title":"init(_:while:)","roleHeading":"Initializer","symbolKind":"init","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-472tv":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","title":"init(_:while:)","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-472tv","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"role":"collection","abstract":[],"title":"Parsing","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix":{"url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"kind":"symbol","title":"Prefix","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/CountingRange":{"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/CountingRange","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CountingRange"}],"role":"symbol","title":"CountingRange","url":"\/documentation\/parsing\/countingrange","navigatorTitle":[{"kind":"identifier","text":"CountingRange"}]}}}