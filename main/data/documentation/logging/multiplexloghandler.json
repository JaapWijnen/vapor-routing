{"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Effective Logger.Level","type":"heading","level":3,"anchor":"Effective-Logger.Level"},{"type":"paragraph","inlineContent":[{"text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the","type":"text"},{"text":" ","type":"text"},{"text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level","type":"text"},{"text":" ","type":"text"},{"text":"any log events they might be interested in.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"},{"text":" ","type":"text"},{"text":"If log handler ","type":"text"},{"type":"codeVoice","code":"A"},{"type":"text","text":" is logging at "},{"type":"codeVoice","code":".debug"},{"type":"text","text":" level, and log handler "},{"type":"codeVoice","code":"B"},{"type":"text","text":" is logging at "},{"type":"codeVoice","code":".info"},{"type":"text","text":" level, the constructed"},{"type":"text","text":" "},{"type":"codeVoice","code":"MultiplexLogHandler([A, B])"},{"type":"text","text":"’s effective log level will be set to "},{"type":"codeVoice","code":".debug"},{"type":"text","text":", meaning that debug messages will be"},{"type":"text","text":" "},{"type":"text","text":"handled by this handler, while only logged by the underlying "},{"type":"codeVoice","code":"A"},{"type":"text","text":" log handler (since "},{"type":"codeVoice","code":"B"},{"type":"text","text":"’s log level is "},{"type":"codeVoice","code":".info"},{"type":"text","text":" "},{"type":"text","text":"and thus it would not actually log that log message)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the log level is "},{"type":"emphasis","inlineContent":[{"text":"set","type":"text"}]},{"type":"text","text":" on a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" backed by an "},{"type":"codeVoice","code":"MultiplexLogHandler"},{"type":"text","text":" the log level will apply to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" "},{"type":"text","text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying"},{"type":"text","text":" "},{"type":"text","text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific"},{"type":"text","text":" "},{"type":"text","text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes."}]},{"text":"Effective Logger.Metadata","type":"heading","level":3,"anchor":"Effective-Logger.Metadata"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since a "},{"code":"MultiplexLogHandler","type":"codeVoice"},{"type":"text","text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious."},{"type":"text","text":" "},{"type":"text","text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler."}]},{"type":"paragraph","inlineContent":[{"text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than","type":"text"},{"text":" ","type":"text"},{"text":"proxying writes that users made on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" instance backed by this handler.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Setting metadata is always proxied through to ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" underlying handlers, meaning that if a modification like","type":"text"},{"text":" ","type":"text"},{"code":"logger[metadataKey: \"x\"] = \"y\"","type":"codeVoice"},{"text":" is made, all underlying log handlers that this multiplex handler was initiated with","type":"text"},{"text":" ","type":"text"},{"text":"will observe this change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers"},{"type":"text","text":" "},{"type":"text","text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses"},{"type":"text","text":" "},{"type":"text","text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s"},{"type":"text","text":" "},{"type":"text","text":"values are more important than the next handlers values, etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"code":"MultiplexLogHandler([handler1, handler2])","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"code":"handler1","type":"codeVoice"},{"type":"text","text":" has metadata values for keys "},{"code":"one","type":"codeVoice"},{"type":"text","text":" and "},{"code":"all","type":"codeVoice"},{"type":"text","text":", and "},{"code":"handler2","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"code":"two","type":"codeVoice"},{"type":"text","text":" and "},{"code":"all","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"A query through the multiplex log handler the key ","type":"text"},{"code":"one","type":"codeVoice"},{"text":" naturally returns ","type":"text"},{"code":"handler1","type":"codeVoice"},{"text":"’s value, and a query for ","type":"text"},{"code":"two","type":"codeVoice"},{"text":" ","type":"text"},{"text":"naturally returns ","type":"text"},{"code":"handler2","type":"codeVoice"},{"text":"’s value. Querying for the key ","type":"text"},{"code":"all","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"handler1","type":"codeVoice"},{"text":"’s value, as that handler was indicated","type":"text"},{"text":" ","type":"text"},{"text":"“more important” than the second handler. The same rule applies when querying for the ","type":"text"},{"code":"metadata","type":"codeVoice"},{"text":" property of the","type":"text"},{"text":" ","type":"text"},{"text":"multiplex log handler - it constructs ","type":"text"},{"code":"Metadata","type":"codeVoice"},{"text":" uniquing values.","type":"text"}]}]}],"metadata":{"symbolKind":"struct","modules":[{"name":"Logging"}],"title":"MultiplexLogHandler","externalID":"s:7Logging19MultiplexLogHandlerV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"roleHeading":"Structure","role":"symbol"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"title":"Default Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/logging\/multiplexloghandler"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"kind":"symbol","role":"symbol","type":"topic","title":"logLevel","url":"\/documentation\/logging\/multiplexloghandler\/loglevel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","abstract":[{"type":"text","text":"Get or set the configured log level."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logLevel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier","text":"Level"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","type":"topic","title":"log(level:message:metadata:source:file:function:line:)","abstract":[{"text":"This method is called when a ","type":"text"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" must emit a log message. There is no need for the "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"type":"codeVoice","code":"level"},{"type":"text","text":" is above or below the configured "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"log"},{"kind":"text","text":"("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier","text":"Level"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV7MessageV","kind":"typeIdentifier","text":"Message"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier","text":"Metadata"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"title":"MultiplexLogHandler","url":"\/documentation\/logging\/multiplexloghandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"title":"LogHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogHandler","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler","url":"\/documentation\/logging\/loghandler","type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LogHandler"},{"text":" is an implementation of a logging backend.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LogHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:7Logging10LogHandlerP","text":"LogHandler","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"type":"topic","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","url":"\/documentation\/logging\/multiplexloghandler\/init(_:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"MultiplexLogHandler"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"type":"topic","title":"subscript(metadataKey:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"metadataKey"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SD3Keya","text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SD5Valuea","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Add, remove, or change the logging metadata.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations","role":"collectionGroup","url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","kind":"article","title":"LogHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata","type":"topic","url":"\/documentation\/logging\/multiplexloghandler\/metadata","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"metadata"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"}],"title":"metadata","role":"symbol","abstract":[{"text":"Get or set the entire metadata storage as a dictionary.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Logging":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging","url":"\/documentation\/logging","role":"collection","abstract":[],"title":"Logging"}}}