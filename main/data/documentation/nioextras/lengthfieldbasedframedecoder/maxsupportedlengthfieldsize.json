{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/maxSupportedLengthFieldSize"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/lengthfieldbasedframedecoder\/maxsupportedlengthfieldsize"]}],"metadata":{"externalID":"s:9NIOExtras28LengthFieldBasedFrameDecoderC012maxSupportedbC4SizeSivpZ","symbolKind":"property","role":"symbol","title":"maxSupportedLengthFieldSize","modules":[{"name":"NIOExtras"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxSupportedLengthFieldSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"roleHeading":"Type Property"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxSupportedLengthFieldSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Maximum supported length field size in bytes of "},{"code":"LengthFieldBasedFrameDecoder","type":"codeVoice"},{"type":"text","text":" and is currently "},{"code":"Int32.max","type":"codeVoice"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","title":"NIOExtras","kind":"symbol","type":"topic","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder/maxSupportedLengthFieldSize":{"title":"maxSupportedLengthFieldSize","abstract":[{"type":"text","text":"Maximum supported length field size in bytes of "},{"type":"codeVoice","code":"LengthFieldBasedFrameDecoder"},{"type":"text","text":" and is currently "},{"code":"Int32.max","type":"codeVoice"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder\/maxSupportedLengthFieldSize","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxSupportedLengthFieldSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol","url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder\/maxsupportedlengthfieldsize","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldBasedFrameDecoder"}],"title":"LengthFieldBasedFrameDecoder","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"A decoder that splits the received "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" by the number of bytes specified in a fixed length header"},{"type":"text","text":" "},{"type":"text","text":"contained within the buffer."},{"type":"text","text":" "},{"type":"text","text":"For example, if you received the following four fragmented packets:"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"},{"type":"text","text":" "},{"type":"text","text":"| A | BC | DEFG | HI |"},{"type":"text","text":" "},{"type":"text","text":"+—+––+——+––+"}],"navigatorTitle":[{"kind":"identifier","text":"LengthFieldBasedFrameDecoder"}]}}}