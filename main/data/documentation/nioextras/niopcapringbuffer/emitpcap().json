{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/niopcapringbuffer\/emitpcap()"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"emitPCAP","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircularBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A ciruclar buffer of captured fragments."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"NIOExtras"}],"externalID":"s:9NIOExtras17NIOPCAPRingBufferC8emitPCAP7NIOCore08CircularC0VyAE04ByteC0VGyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emitPCAP"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier","text":"CircularBuffer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"emitPCAP()","roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"type":"text","text":"Emit the captured data to a consuming function; then clear the captured data."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer/emitPCAP()":{"url":"\/documentation\/nioextras\/niopcapringbuffer\/emitpcap()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()","title":"emitPCAP()","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Emit the captured data to a consuming function; then clear the captured data."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emitPCAP"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier","text":"CircularBuffer"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","title":"NIOExtras","kind":"symbol","type":"topic","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/niopcapringbuffer","title":"NIOPCAPRingBuffer","role":"symbol","navigatorTitle":[{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPCAPRingBuffer","kind":"identifier"}],"abstract":[{"text":"Storage for the most recent set of packets captured subject to constraints.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Use "},{"code":"addFragment","type":"codeVoice"},{"type":"text","text":" as the sink to a "},{"type":"codeVoice","code":"NIOWritePCAPHandler"},{"text":" and call ","type":"text"},{"type":"codeVoice","code":"emitPCAP"},{"text":" ","type":"text"},{"type":"text","text":"when you wish to get the recorded data."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer"}}}