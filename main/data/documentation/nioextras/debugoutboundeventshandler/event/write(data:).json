{"metadata":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"modules":[{"name":"NIOExtras"}],"externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC5EventO5writeyAE7NIOCore6NIOAnyV_tcAEmF","role":"symbol","title":"DebugOutboundEventsHandler.Event.write(data:)","roleHeading":"Case","symbolKind":"case"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/write(data:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event"]]},"variants":[{"paths":["\/documentation\/nioextras\/debugoutboundeventshandler\/event\/write(data:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"title":"DebugOutboundEventsHandler","abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See DebugInboundEventsHandler for inbound events."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event":{"title":"DebugOutboundEventsHandler.Event","type":"topic","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event","navigatorTitle":[{"text":"Event","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event/write(data:)":{"type":"topic","title":"DebugOutboundEventsHandler.Event.write(data:)","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event\/write(data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event\/write(data:)","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","title":"NIOExtras","kind":"symbol","type":"topic","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"title":"NIOAny","type":"topic","url":"\/documentation\/niocore\/nioany","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"kind":"symbol"}}}