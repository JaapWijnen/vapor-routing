{"abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" and all the child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"},"variants":[{"paths":["\/documentation\/nioextras\/serverquiescinghelper"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"externalID":"s:9NIOExtras21ServerQuiescingHelperC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerQuiescingHelper"}],"title":"ServerQuiescingHelper","modules":[{"name":"NIOExtras"}],"role":"symbol","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ServerQuiescingHelper"}],"roleHeading":"Class"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerQuiescingHelper","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"codeVoice","code":"ServerQuiescingHelper"},{"text":" makes it easy to collect all child ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s that a given server ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" accepts. When","type":"text"},{"text":" ","type":"text"},{"text":"the quiescing period starts (that is when ","type":"text"},{"type":"codeVoice","code":"ServerQuiescingHelper.initiateShutdown"},{"text":" is invoked), it will perform the","type":"text"},{"text":" ","type":"text"},{"text":"following actions:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"close the server ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" so no further connections get accepted","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"send a "},{"code":"ChannelShouldQuiesceEvent","type":"codeVoice"},{"type":"text","text":" user event to all currently still open child "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"after all previously open child ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s have closed, notify the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that was passed to ","type":"text"},{"code":"shutdown","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"Example use:"}],"type":"paragraph"},{"syntax":null,"code":["let group = MultiThreadedEventLoopGroup(numThreads: [...])","let quiesce = ServerQuiescingHelper(group: group)","let serverChannel = try ServerBootstrap(group: group)","    .serverChannelInitializer { channel in","        \/\/ add the collection handler so all accepted child channels get collected","        channel.pipeline.add(handler: quiesce.makeServerChannelHandler(channel: channel))","    }","    \/\/ further bootstrap configuration","    .bind([...])","    .wait()","\/\/ [...]","let fullyShutdownPromise: EventLoopPromise<Void> = group.next().newPromise()","\/\/ initiate the shutdown","quiesce.initiateShutdown(promise: fullyShutdownPromise)","\/\/ wait for the shutdown to complete","try fullyShutdownPromise.futureResult.wait()"],"type":"codeListing"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/makeServerChannelHandler(channel:)":{"url":"\/documentation\/nioextras\/serverquiescinghelper\/makeserverchannelhandler(channel:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/makeServerChannelHandler(channel:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeServerChannelHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"}],"title":"makeServerChannelHandler(channel:)","abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" for the server "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" to collect all accepted child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/init(group:)":{"type":"topic","url":"\/documentation\/nioextras\/serverquiescinghelper\/init(group:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"group"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize with a given "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"title":"init(group:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/init(group:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","title":"NIOExtras","kind":"symbol","type":"topic","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper/initiateShutdown(promise:)":{"type":"topic","url":"\/documentation\/nioextras\/serverquiescinghelper\/initiateshutdown(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initiateShutdown"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Initiate the shutdown. The following actions will be performed:"}],"title":"initiateShutdown(promise:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper\/initiateShutdown(promise:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper","navigatorTitle":[{"text":"ServerQuiescingHelper","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerQuiescingHelper","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Helper that can be used to orchestrate the quiescing of a server "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and all the child "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s that are"},{"type":"text","text":" "},{"type":"text","text":"open at a given point in time."}],"title":"ServerQuiescingHelper","kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/serverquiescinghelper"}}}