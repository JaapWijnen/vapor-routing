{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" receives a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":" alongside an ","type":"text"},{"code":"EventLoopPromise<Response>","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"‘s","type":"text"},{"text":" ","type":"text"},{"text":"outbound side. It will fulfill the promise with the ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" once it’s received from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s inbound","type":"text"},{"text":" ","type":"text"},{"text":"side.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/requestresponsehandler"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Request"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Response"},{"kind":"text","text":">"}]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"codeVoice","code":"RequestResponseHandler"},{"text":" does support pipelining ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":"s and it will send them pipelined further down the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". Should ","type":"text"},{"type":"codeVoice","code":"RequestResponseHandler"},{"text":" receive an error from the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", it will fail all promises meant for","type":"text"},{"text":" ","type":"text"},{"text":"the outstanding ","type":"text"},{"type":"codeVoice","code":"Reponse"},{"text":"s and close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":". All requests enqueued after an error occured will be immediately","type":"text"},{"text":" ","type":"text"},{"text":"failed with the first error the channel received.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"RequestResponseHandler"},{"text":" requires that the ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":"s arrive on ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" in the same order as the ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"were submitted.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"kind":"relationships","type":"conformsTo"}],"metadata":{"title":"RequestResponseHandler","externalID":"s:9NIOExtras22RequestResponseHandlerC","navigatorTitle":[{"kind":"identifier","text":"RequestResponseHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"}],"role":"symbol","modules":[{"name":"NIOExtras"}],"symbolKind":"class","roleHeading":"Class"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundOut":{"url":"\/documentation\/nioextras\/requestresponsehandler\/outboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"title":"RequestResponseHandler.OutboundOut","role":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelOutboundHandler-Implementations":{"url":"\/documentation\/nioextras\/requestresponsehandler\/channeloutboundhandler-implementations","type":"topic","role":"collectionGroup","title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelOutboundHandler-Implementations","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/init(initialBufferCapacity:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/init(initialBufferCapacity:)","type":"topic","title":"init(initialBufferCapacity:)","abstract":[{"text":"Create a new ","type":"text"},{"code":"RequestResponseHandler","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/nioextras\/requestresponsehandler\/init(initialbuffercapacity:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialBufferCapacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundIn":{"title":"RequestResponseHandler.InboundIn","url":"\/documentation\/nioextras\/requestresponsehandler\/inboundin","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundIn","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelInactive(context:)":{"title":"channelInactive(context:)","url":"\/documentation\/nioextras\/requestresponsehandler\/channelinactive(context:)","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInactive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelInactive(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/errorCaught(context:error:)":{"title":"errorCaught(context:error:)","url":"\/documentation\/nioextras\/requestresponsehandler\/errorcaught(context:error:)","abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/errorCaught(context:error:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","title":"NIOExtras","kind":"symbol","type":"topic","role":"collection","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","navigatorTitle":[{"kind":"identifier","text":"RequestResponseHandler"}],"role":"symbol","title":"RequestResponseHandler","type":"topic","url":"\/documentation\/nioextras\/requestresponsehandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"}],"abstract":[{"code":"RequestResponseHandler","type":"codeVoice"},{"text":" receives a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":" alongside an ","type":"text"},{"code":"EventLoopPromise<Response>","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"‘s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outbound side. It will fulfill the promise with the "},{"code":"Response","type":"codeVoice"},{"type":"text","text":" once it’s received from the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"’s inbound"},{"type":"text","text":" "},{"type":"text","text":"side."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","url":"\/documentation\/nioextras\/requestresponsehandler\/channelhandler-implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelHandler-Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","url":"\/documentation\/nioextras\/requestresponsehandler\/channelread(context:data:)","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/channelRead(context:data:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/write(context:data:promise:)":{"title":"write(context:data:promise:)","url":"\/documentation\/nioextras\/requestresponsehandler\/write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel.flush"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"type":"text","text":" is called."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/write(context:data:promise:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/OutboundIn":{"title":"RequestResponseHandler.OutboundIn","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/nioextras\/requestresponsehandler\/outboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/OutboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/InboundOut":{"title":"RequestResponseHandler.InboundOut","url":"\/documentation\/nioextras\/requestresponsehandler\/inboundout","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/InboundOut","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","url":"\/documentation\/nioextras\/requestresponsehandler\/channelinboundhandler-implementations","abstract":[],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler\/ChannelInboundHandler-Implementations","type":"topic"}}}