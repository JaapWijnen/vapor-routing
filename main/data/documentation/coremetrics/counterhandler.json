{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CounterHandler"},{"kind":"text","text":" : AnyObject"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This type is an implementation detail and should not be used directly, unless implementing your own metrics backend.","type":"text"},{"text":" ","type":"text"},{"text":"To use the SwiftMetrics API, please refer to the documentation of ","type":"text"},{"code":"Counter","type":"codeVoice"},{"text":".","type":"text"}]},{"level":1,"type":"heading","text":"Implementation requirements","anchor":"Implementation-requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To implement your own "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" you should respect a few requirements that are necessary so applications work"},{"type":"text","text":" "},{"type":"text","text":"as expected regardless of the selected "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" implementation."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CounterHandler"},{"type":"text","text":" must be a "},{"type":"codeVoice","code":"class"},{"type":"text","text":"."}],"type":"paragraph"}]}]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/increment(by:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/reset()"],"title":"Instance Methods"}],"kind":"symbol","metadata":{"externalID":"s:11CoreMetrics14CounterHandlerP","navigatorTitle":[{"kind":"identifier","text":"CounterHandler"}],"modules":[{"name":"CoreMetrics"}],"role":"symbol","title":"CounterHandler","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CounterHandler"}],"symbolKind":"protocol"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/coremetrics\/counterhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"CounterHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Counter"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler/reset()":{"kind":"symbol","role":"symbol","url":"\/documentation\/coremetrics\/counterhandler\/reset()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/reset()","title":"reset()","abstract":[{"type":"text","text":"Reset the counter back to zero."}],"required":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"url":"\/documentation\/coremetrics","type":"topic","role":"collection","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","title":"CoreMetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","navigatorTitle":[{"text":"CounterHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"CounterHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"Counter","type":"codeVoice"},{"type":"text","text":"."}],"title":"CounterHandler","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CounterHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/counterhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Ships with the metrics module, used for initial bootstrapping.","type":"text"}],"title":"NOOPMetricsHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NOOPMetricsHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/noopmetricshandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler/increment(by:)":{"kind":"symbol","url":"\/documentation\/coremetrics\/counterhandler\/increment(by:)","title":"increment(by:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"increment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"kind":"text","text":")"}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler\/increment(by:)","abstract":[{"text":"Increment the counter.","type":"text"}]}}}