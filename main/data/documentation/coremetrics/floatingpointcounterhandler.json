{"metadata":{"modules":[{"name":"CoreMetrics"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FloatingPointCounterHandler"}],"role":"symbol","roleHeading":"Protocol","title":"FloatingPointCounterHandler","externalID":"s:11CoreMetrics27FloatingPointCounterHandlerP","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounterHandler"}]},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"]]},"relationshipsSections":[{"type":"conformingTypes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler"],"kind":"relationships","title":"Conforming Types"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"This type is an implementation detail and should not be used directly, unless implementing your own metrics backend.","type":"text"},{"text":" ","type":"text"},{"text":"To use the SwiftMetrics API, please refer to the documentation of ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Implementation-requirements","text":"Implementation requirements","level":1,"type":"heading"},{"inlineContent":[{"text":"To implement your own ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" you should respect a few requirements that are necessary so applications work","type":"text"},{"text":" ","type":"text"},{"text":"as expected regardless of the selected ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" implementation.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"type":"text","text":" must be a "},{"code":"class","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/coremetrics\/floatingpointcounterhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A ","type":"text"},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"text":" represents a backend implementation of a ","type":"text"},{"code":"FloatingPointCounter","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/increment(by:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/reset()"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","navigatorTitle":[{"text":"NOOPMetricsHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Ships with the metrics module, used for initial bootstrapping.","type":"text"}],"title":"NOOPMetricsHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NOOPMetricsHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/noopmetricshandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"url":"\/documentation\/coremetrics","type":"topic","role":"collection","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","title":"CoreMetrics","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","navigatorTitle":[{"text":"FloatingPointCounterHandler","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"FloatingPointCounter","type":"codeVoice"},{"type":"text","text":"."}],"title":"FloatingPointCounterHandler","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FloatingPointCounterHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/coremetrics\/floatingpointcounterhandler","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler/reset()":{"url":"\/documentation\/coremetrics\/floatingpointcounterhandler\/reset()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/reset()","type":"topic","abstract":[{"type":"text","text":"Reset the counter back to zero."}],"title":"reset()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler/increment(by:)":{"url":"\/documentation\/coremetrics\/floatingpointcounterhandler\/increment(by:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"increment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":")"}],"required":true,"type":"topic","role":"symbol","abstract":[{"text":"Increment the counter.","type":"text"}],"title":"increment(by:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler\/increment(by:)"}}}