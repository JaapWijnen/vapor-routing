{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" wrapping this parser.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/urlrouting\/pathzipoovovv\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV\/eraseToAnyParser()","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"URLRouting"}],"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting13PathZipOOVOVVV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"extendedModule":"Parsing","role":"symbol","title":"eraseToAnyParser()"},"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"kind":"symbol","role":"collection","url":"\/documentation\/urlrouting","title":"URLRouting","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"role":"symbol","title":"AnyParser","type":"topic","url":"\/documentation\/parsing\/anyparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOOVOVV/eraseToAnyParser()":{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"url":"\/documentation\/urlrouting\/pathzipoovovv\/erasetoanyparser()","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV\/eraseToAnyParser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOOVOVV/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathzipoovovv\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV\/Parser-Implementations","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathZipOOVOVV":{"navigatorTitle":[{"kind":"identifier","text":"PathZipOOVOVV"}],"role":"symbol","url":"\/documentation\/urlrouting\/pathzipoovovv","kind":"symbol","title":"PathZipOOVOVV","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathZipOOVOVV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOOVOVV"}],"type":"topic"}}}