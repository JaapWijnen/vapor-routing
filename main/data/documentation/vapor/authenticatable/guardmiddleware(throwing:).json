{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"]]},"kind":"symbol","abstract":[{"text":"This middleware ensures that an ","type":"text"},{"code":"Authenticatable","type":"codeVoice"},{"text":" type ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" or throws an ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"text":"authentication will ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" throw errors if they fail to authenticate the user (except in","type":"text"},{"text":" ","type":"text"},{"text":"some exceptional cases like malformed data). This allows the middlewares to be composed","type":"text"},{"text":" ","type":"text"},{"text":"together to create chains of authentication for multiple user types.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware"}],"extendedModule":"Vapor","symbolKind":"method","roleHeading":"Type Method","role":"symbol","modules":[{"name":"Vapor"}],"externalID":"s:5Vapor15AuthenticatablePAAE15guardMiddleware8throwingAA0D0_ps5Error_p_tFZ","title":"guardMiddleware(throwing:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"guardMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"throwing","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":" = Abort(.unauthorized, reason: \"\\(Self.self) not authenticated.\")) -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","text":"Middleware","preciseIdentifier":"s:5Vapor10MiddlewareP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"throwing","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Error"},{"text":" to throw if the type is not authed.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this middleware to protect routes that might not otherwise attempt to access the"},{"type":"text","text":" "},{"type":"text","text":"authenticated user (which always requires prior authentication)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"Authenticatable.guardMiddleware(...)"},{"type":"text","text":" to create an instance."}]},{"type":"paragraph","inlineContent":[{"text":"Use this middleware in conjunction with other middleware such as ","type":"text"},{"type":"codeVoice","code":"BearerAuthenticator"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"BasicAuthenticator"},{"text":" to do the actual authentication.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"code":"Middleware","type":"codeVoice"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"text":"to pass requests on to the next ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" in a chain, or they can short circuit and","type":"text"},{"text":" ","type":"text"},{"text":"return a custom ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":" if desired.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","title":"Middleware","url":"\/documentation\/vapor\/middleware","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable":{"title":"Authenticatable","url":"\/documentation\/vapor\/authenticatable","abstract":[{"text":"Capable of being authenticated.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authenticatable"}],"navigatorTitle":[{"kind":"identifier","text":"Authenticatable"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticatable/guardMiddleware(throwing:)":{"title":"guardMiddleware(throwing:)","url":"\/documentation\/vapor\/authenticatable\/guardmiddleware(throwing:)","abstract":[{"text":"This middleware ensures that an ","type":"text"},{"code":"Authenticatable","type":"codeVoice"},{"text":" type ","type":"text"},{"code":"A","type":"codeVoice"},{"text":" has been authenticated","type":"text"},{"text":" ","type":"text"},{"text":"by a previous ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" or throws an ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":". The middlewares that actually perform","type":"text"},{"text":" ","type":"text"},{"text":"authentication will ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" throw errors if they fail to authenticate the user (except in","type":"text"},{"text":" ","type":"text"},{"text":"some exceptional cases like malformed data). This allows the middlewares to be composed","type":"text"},{"text":" ","type":"text"},{"text":"together to create chains of authentication for multiple user types.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"guardMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10MiddlewareP","text":"Middleware"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticatable\/guardMiddleware(throwing:)"}}}