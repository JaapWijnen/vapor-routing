{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/FileIO\/streamFile(at:chunkSize:mediaType:onCompleted:)"},"abstract":[{"text":"Generates a chunked ","type":"text"},{"code":"HTTPResponse","type":"codeVoice"},{"text":" for the specified file. This method respects values in","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"\"ETag\"","type":"codeVoice"},{"text":" header and is capable of responding ","type":"text"},{"code":"304 Not Modified","type":"codeVoice"},{"text":" if the file in question","type":"text"},{"text":" ","type":"text"},{"text":"has not been modified since last served. This method will also set the ","type":"text"},{"code":"\"Content-Type\"","type":"codeVoice"},{"text":" header","type":"text"},{"text":" ","type":"text"},{"text":"automatically if an appropriate ","type":"text"},{"code":"MediaType","type":"codeVoice"},{"text":" can be found for the file’s suffix.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/vapor\/fileio\/streamfile(at:chunksize:mediatype:oncompleted:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"chunkSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = NonBlockingFileIO.defaultChunkSize, "},{"kind":"externalParam","text":"mediaType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/HTTPMediaType","preciseIdentifier":"s:5Vapor13HTTPMediaTypeV","text":"HTTPMediaType"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> () = { _ in }) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Response","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"200 OK"},{"type":"text","text":" response containing the file stream and appropriate headers."}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"path","content":[{"inlineContent":[{"text":"Path to file on the disk.","type":"text"}],"type":"paragraph"}]},{"name":"req","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"HTTPRequest","type":"codeVoice"},{"type":"text","text":" to parse "},{"code":"\"If-None-Match\"","type":"codeVoice"},{"type":"text","text":" header from."}]}]},{"name":"chunkSize","content":[{"inlineContent":[{"text":"Maximum size for the file data chunks.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"codeListing","syntax":null,"code":["router.get(\"file-stream\") { req -> HTTPResponse in","    return try req.fileio().chunkedResponse(file: \"\/path\/to\/file.txt\")","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/FileIO"]]},"metadata":{"role":"symbol","title":"streamFile(at:chunkSize:mediaType:onCompleted:)","modules":[{"name":"Vapor"}],"roleHeading":"Instance Method","externalID":"s:5Vapor6FileIOV06streamB02at9chunkSize9mediaType11onCompletedAA8ResponseCSS_SiAA09HTTPMediaI0VSgys6ResultOyyts5Error_pGctF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"chunkSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"mediaType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMediaType","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor13HTTPMediaTypeV"},{"text":"?, ","kind":"text"},{"text":"onCompleted","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> ()) -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"symbolKind":"method"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Response":{"type":"topic","abstract":[{"type":"text","text":"An HTTP response from a server back to the client."}],"url":"\/documentation\/vapor\/response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Response","kind":"symbol","title":"Response","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/FileIO/streamFile(at:chunkSize:mediaType:onCompleted:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mediaType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPMediaType","preciseIdentifier":"s:5Vapor13HTTPMediaTypeV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> ()) -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/FileIO\/streamFile(at:chunkSize:mediaType:onCompleted:)","abstract":[{"text":"Generates a chunked ","type":"text"},{"code":"HTTPResponse","type":"codeVoice"},{"text":" for the specified file. This method respects values in","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"\"ETag\""},{"type":"text","text":" header and is capable of responding "},{"type":"codeVoice","code":"304 Not Modified"},{"type":"text","text":" if the file in question"},{"type":"text","text":" "},{"type":"text","text":"has not been modified since last served. This method will also set the "},{"type":"codeVoice","code":"\"Content-Type\""},{"type":"text","text":" header"},{"type":"text","text":" "},{"type":"text","text":"automatically if an appropriate "},{"type":"codeVoice","code":"MediaType"},{"type":"text","text":" can be found for the file’s suffix."}],"url":"\/documentation\/vapor\/fileio\/streamfile(at:chunksize:mediatype:oncompleted:)","type":"topic","kind":"symbol","title":"streamFile(at:chunkSize:mediaType:onCompleted:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/FileIO":{"title":"FileIO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/FileIO","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"FileIO"},{"text":" is a convenience wrapper around SwiftNIO’s ","type":"text"},{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"url":"\/documentation\/vapor\/fileio","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Vapor/HTTPMediaType":{"kind":"symbol","url":"\/documentation\/vapor\/httpmediatype","role":"symbol","abstract":[{"type":"text","text":"Represents an encoded data-format, used in HTTP, HTML, email, and elsewhere."}],"title":"HTTPMediaType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPMediaType"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPMediaType"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/HTTPMediaType","type":"topic"}}}