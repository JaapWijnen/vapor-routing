{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BearerAuthenticator\/authenticate(bearer:for:)"]}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticator","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestAuthenticator"]}],"metadata":{"title":"BearerAuthenticator","externalID":"s:5Vapor19BearerAuthenticatorP","roleHeading":"Protocol","role":"symbol","modules":[{"name":"Vapor"}],"navigatorTitle":[{"kind":"identifier","text":"BearerAuthenticator"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BearerAuthenticator"}]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Helper for creating authentication middleware using the Bearer authorization header."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/bearerauthenticator"]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BearerAuthenticator","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BearerAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"RequestAuthenticator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestAuthenticator","preciseIdentifier":"s:5Vapor20RequestAuthenticatorP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/RequestAuthenticator":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/RequestAuthenticator","title":"RequestAuthenticator","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RequestAuthenticator","kind":"identifier"}],"abstract":[{"text":"Help for creating authentication middleware based on ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestAuthenticator","kind":"identifier"}],"url":"\/documentation\/vapor\/requestauthenticator"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"code":"Middleware","type":"codeVoice"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"text":"to pass requests on to the next ","type":"text"},{"code":"Middleware","type":"codeVoice"},{"text":" in a chain, or they can short circuit and","type":"text"},{"text":" ","type":"text"},{"text":"return a custom ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":" if desired.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","title":"Middleware","url":"\/documentation\/vapor\/middleware","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/BearerAuthenticator":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BearerAuthenticator"}],"abstract":[{"type":"text","text":"Helper for creating authentication middleware using the Bearer authorization header."}],"role":"symbol","type":"topic","url":"\/documentation\/vapor\/bearerauthenticator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BearerAuthenticator","navigatorTitle":[{"kind":"identifier","text":"BearerAuthenticator"}],"title":"BearerAuthenticator"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Authenticator":{"role":"symbol","navigatorTitle":[{"text":"Authenticator","kind":"identifier"}],"url":"\/documentation\/vapor\/authenticator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Authenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Authenticator","kind":"identifier"}],"abstract":[{"text":"Helper for creating authentication middleware.","type":"text"}],"type":"topic","title":"Authenticator","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/BearerAuthenticator/authenticate(bearer:for:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bearer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor19BearerAuthorizationV","kind":"typeIdentifier","text":"BearerAuthorization"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[],"required":true,"role":"symbol","type":"topic","url":"\/documentation\/vapor\/bearerauthenticator\/authenticate(bearer:for:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/BearerAuthenticator\/authenticate(bearer:for:)","title":"authenticate(bearer:for:)"}}}