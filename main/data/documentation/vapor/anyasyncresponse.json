{"abstract":[{"type":"text","text":"A type erased response useful for routes that can return more than one type."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/encodeResponse(for:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/AsyncResponseEncodable-Implementations"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncResponse","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"code":["router.get(\"foo\") { req -> AnyAsyncResponse in","    if \/* something *\/ {","        return AnyAsyncResponse(42)","    } else {","        return AnyAsyncResponse(\"string\")","    }","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"This can also be done using a ","type":"text"},{"type":"codeVoice","code":"AsyncResponseEncodable"},{"text":" enum.","type":"text"}],"type":"paragraph"},{"code":["enum IntOrString: AsyncResponseEncodable {","    case int(Int)","    case string(String)","","    func encode(for req: Request) throws -> EventLoopFuture<Response> {","        switch self {","        case .int(let i): return try i.encode(for: req)","        case .string(let s): return try s.encode(for: req)","        }","    }","}","","router.get(\"foo\") { req -> IntOrString in","    if \/* something *\/ {","        return .int(42)","    } else {","        return .string(\"string\")","    }","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse"},"metadata":{"title":"AnyAsyncResponse","platforms":[{"unavailable":false,"beta":false,"introducedAt":"15.0","deprecated":false,"name":"iOS"},{"unavailable":false,"beta":false,"introducedAt":"12.0","deprecated":false,"name":"macOS"},{"unavailable":false,"beta":false,"introducedAt":"15.0","deprecated":false,"name":"tvOS"},{"unavailable":false,"beta":false,"introducedAt":"8.0","deprecated":false,"name":"watchOS"}],"navigatorTitle":[{"text":"AnyAsyncResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncResponse","kind":"identifier"}],"modules":[{"name":"Vapor"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","externalID":"s:5Vapor16AnyAsyncResponseV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/anyasyncresponse"]}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncResponseEncodable"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/AsyncResponseEncodable":{"navigatorTitle":[{"kind":"identifier","text":"AsyncResponseEncodable"}],"title":"AsyncResponseEncodable","abstract":[{"text":"Can convert ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncResponseEncodable","role":"symbol","kind":"symbol","url":"\/documentation\/vapor\/asyncresponseencodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncResponseEncodable"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyAsyncResponse":{"abstract":[{"text":"A type erased response useful for routes that can return more than one type.","type":"text"}],"type":"topic","role":"symbol","title":"AnyAsyncResponse","kind":"symbol","url":"\/documentation\/vapor\/anyasyncresponse","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse","navigatorTitle":[{"text":"AnyAsyncResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAsyncResponse","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyAsyncResponse/AsyncResponseEncodable-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","title":"AsyncResponseEncodable Implementations","kind":"article","url":"\/documentation\/vapor\/anyasyncresponse\/asyncresponseencodable-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/AsyncResponseEncodable-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyAsyncResponse/encodeResponse(for:)":{"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/encodeResponse(for:)","title":"encodeResponse(for:)","kind":"symbol","role":"symbol","url":"\/documentation\/vapor\/anyasyncresponse\/encoderesponse(for:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encodeResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyAsyncResponse/init(_:)":{"abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyAsyncResponse","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyAsyncResponse\/init(_:)","title":"init(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/vapor\/anyasyncresponse\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:5Vapor22AsyncResponseEncodableP","text":"AsyncResponseEncodable","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}