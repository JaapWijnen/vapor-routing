{"abstract":[{"text":"A type erased response useful for routes that can return more than one type.","type":"text"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations"],"generated":true}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/vapor\/anyresponse"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyResponse"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"codeListing","syntax":null,"code":["router.get(\"foo\") { req -> AnyResponse in","    if \/* something *\/ {","        return AnyResponse(42)","    } else {","        return AnyResponse(\"string\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can also be done using a "},{"type":"codeVoice","code":"ResponseEncodable"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":null,"code":["enum IntOrString: ResponseEncodable {","    case int(Int)","    case string(String)","","    func encode(for req: Request) throws -> EventLoopFuture<Response> {","        switch self {","        case .int(let i): return try i.encode(for: req)","        case .string(let s): return try s.encode(for: req)","        }","    }","}","","router.get(\"foo\") { req -> IntOrString in","    if \/* something *\/ {","        return .int(42)","    } else {","        return .string(\"string\")","    }","}"]}],"kind":"content"}],"metadata":{"role":"symbol","roleHeading":"Structure","navigatorTitle":[{"text":"AnyResponse","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Vapor"}],"title":"AnyResponse","externalID":"s:5Vapor11AnyResponseV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyResponse","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/init(_:)":{"abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"AnyResponse"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/init(_:)","type":"topic","role":"symbol","title":"init(_:)","url":"\/documentation\/vapor\/anyresponse\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ResponseEncodable","preciseIdentifier":"s:5Vapor17ResponseEncodableP"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/encodeResponse(for:)":{"abstract":[{"text":"Encodes an instance of ","type":"text"},{"type":"codeVoice","code":"Self"},{"text":" to a ","type":"text"},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/encodeResponse(for:)","type":"topic","role":"symbol","title":"encodeResponse(for:)","url":"\/documentation\/vapor\/anyresponse\/encoderesponse(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/ResponseEncodable":{"url":"\/documentation\/vapor\/responseencodable","role":"symbol","kind":"symbol","title":"ResponseEncodable","navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Can convert "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/ResponseEncodable"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse/ResponseEncodable-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/vapor\/anyresponse\/responseencodable-implementations","title":"ResponseEncodable Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse\/ResponseEncodable-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyResponse":{"abstract":[{"type":"text","text":"A type erased response useful for routes that can return more than one type."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyResponse"}],"url":"\/documentation\/vapor\/anyresponse","title":"AnyResponse","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyResponse"}]}}}