{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"anyWrappedType"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vapor\/anyoptionaltype\/anywrappedtype-9rm7y"]}],"abstract":[{"type":"text","text":"Returns the wrapped type, if it exists."}],"sections":[],"metadata":{"role":"symbol","required":true,"title":"anyWrappedType","roleHeading":"Type Property","modules":[{"name":"Vapor"}],"externalID":"s:5Vapor15AnyOptionalTypeP010anyWrappedD0ypXpvpZ","symbolKind":"property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"anyWrappedType"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType\/anyWrappedType-9rm7y","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType"]]},"defaultImplementationsSections":[{"title":"AnyOptionalType Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType\/anyWrappedType-9u1em"]}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyOptionalType":{"url":"\/documentation\/vapor\/anyoptionaltype","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyOptionalType"}],"type":"topic","abstract":[{"type":"text","text":"Type-erased "},{"type":"codeVoice","code":"OptionalType"}],"role":"symbol","title":"AnyOptionalType","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType","navigatorTitle":[{"kind":"identifier","text":"AnyOptionalType"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","role":"collection","kind":"symbol","title":"Vapor","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyOptionalType/anyWrappedType-9rm7y":{"defaultImplementations":1,"kind":"symbol","required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"anyWrappedType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type","kind":"text"}],"role":"symbol","title":"anyWrappedType","url":"\/documentation\/vapor\/anyoptionaltype\/anywrappedtype-9rm7y","abstract":[{"text":"Returns the wrapped type, if it exists.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType\/anyWrappedType-9rm7y"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AnyOptionalType/anyWrappedType-9u1em":{"role":"symbol","title":"anyWrappedType","kind":"symbol","abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"AnyOptionalType.anyWrappedType"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"anyWrappedType"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AnyOptionalType\/anyWrappedType-9u1em","url":"\/documentation\/vapor\/anyoptionaltype\/anywrappedtype-9u1em","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"OptionalType"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic"}}}