{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec"]]},"abstract":[{"text":"Initializes a ","type":"text"},{"code":"HTTP2PayloadToHTTP1ClientCodec","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC"},{"text":".","kind":"text"},{"text":"HTTPProtocol","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO"},{"text":", ","kind":"text"},{"text":"normalizeHTTPHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The protocol (usually "},{"code":"\"http\"","type":"codeVoice"},{"type":"text","text":" or "},{"code":"\"https\"","type":"codeVoice"},{"type":"text","text":" that is used)."}]}],"name":"httpProtocol"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Whether to automatically normalize the HTTP headers to be suitable for HTTP\/2.","type":"text"},{"text":" ","type":"text"},{"text":"The normalization will for example lower-case all header names (as required by the","type":"text"},{"text":" ","type":"text"},{"text":"HTTP\/2 spec) and remove headers that are unsuitable for HTTP\/2 such as","type":"text"},{"text":" ","type":"text"},{"text":"headers related to HTTP\/1â€™s keep-alive behaviour. Unless you are sure that all your","type":"text"},{"text":" ","type":"text"},{"text":"headers conform to the HTTP\/2 spec, you should leave this parameter set to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"normalizeHTTPHeaders"}]}],"sections":[],"metadata":{"role":"symbol","symbolKind":"init","title":"init(httpProtocol:normalizeHTTPHeaders:)","modules":[{"name":"NIOHTTP2"}],"roleHeading":"Initializer","externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12httpProtocol20normalizeHTTPHeadersA2C12HTTPProtocolO_Sbtcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC","kind":"typeIdentifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO","kind":"typeIdentifier","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/init(httpProtocol:normalizeHTTPHeaders:)":{"abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"HTTP2PayloadToHTTP1ClientCodec"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/init(httpprotocol:normalizehttpheaders:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"text":"HTTP2FramePayloadToHTTP1ClientCodec","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC"},{"text":".","kind":"text"},{"text":"HTTPProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ClientCodecC12HTTPProtocolO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","title":"init(httpProtocol:normalizeHTTPHeaders:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/init(httpProtocol:normalizeHTTPHeaders:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","role":"collection","title":"NIOHTTP2","url":"\/documentation\/niohttp2","abstract":[],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec/HTTPProtocol":{"abstract":[{"type":"text","text":"The HTTP protocol scheme being used on this connection."}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec\/httpprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPProtocol"}],"type":"topic","title":"HTTP2FramePayloadToHTTP1ClientCodec.HTTPProtocol","navigatorTitle":[{"kind":"identifier","text":"HTTPProtocol"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec\/HTTPProtocol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ClientCodec":{"abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1clientcodec","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}],"type":"topic","title":"HTTP2FramePayloadToHTTP1ClientCodec","navigatorTitle":[{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ClientCodec"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ClientCodec"}}}