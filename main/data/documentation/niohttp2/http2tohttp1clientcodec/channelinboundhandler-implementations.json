{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"NIOHTTP2"}],"title":"ChannelInboundHandler Implementations","role":"collectionGroup"},"kind":"article","sections":[],"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/unwrapInboundIn(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/wrapInboundOut(_:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelinboundhandler-implementations"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec":{"title":"HTTP2ToHTTP1ClientCodec","deprecated":true,"kind":"symbol","abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and vice versa, for use on the client side."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","type":"topic","navigatorTitle":[{"text":"HTTP2ToHTTP1ClientCodec","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/unwrapInboundIn(_:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"code":"channelRead","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/unwrapinboundin(_:)","title":"unwrapInboundIn(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/unwrapInboundIn(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/wrapInboundOut(_:)":{"type":"topic","title":"wrapInboundOut(_:)","abstract":[{"type":"text","text":"Wrap the provided "},{"code":"InboundOut","type":"codeVoice"},{"type":"text","text":" that will be passed to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" by calling "},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/wrapinboundout(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/wrapInboundOut(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","role":"collection","title":"NIOHTTP2","url":"\/documentation\/niohttp2","abstract":[],"kind":"symbol","type":"topic"}}}