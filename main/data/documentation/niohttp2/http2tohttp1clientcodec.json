{"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"symbolKind":"class","modules":[{"name":"NIOHTTP2"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"role":"symbol","title":"HTTP2ToHTTP1ClientCodec","roleHeading":"Class","platforms":[],"externalID":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This channel handler should be used alongside the ","type":"text"},{"code":"HTTP2StreamMultiplexer","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed","type":"text"},{"text":" ","type":"text"},{"text":"connection.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/niohttp2\/http2tohttp1clientcodec"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/channelRead(context:data:)":{"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"title":"channelRead(context:data:)","role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelread(context:data:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelOutboundHandler-Implementations":{"title":"ChannelOutboundHandler Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations","type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channeloutboundhandler-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/HTTPProtocol":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPProtocol","kind":"identifier"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","type":"topic","navigatorTitle":[{"text":"HTTPProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"The HTTP protocol scheme being used on this connection."}],"title":"HTTP2ToHTTP1ClientCodec.HTTPProtocol","role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/httpprotocol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:normalizeHTTPHeaders:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)","title":"init(streamID:httpProtocol:normalizeHTTPHeaders:)","abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"HTTP2ToHTTP1ClientCodec"},{"type":"text","text":" for the given "},{"type":"codeVoice","code":"HTTP2StreamID"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:normalizehttpheaders:)","type":"topic","role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","text":"HTTP2ToHTTP1ClientCodec"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola","text":"HTTPProtocol"},{"kind":"text","text":", "},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundIn":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundin","kind":"symbol","title":"HTTP2ToHTTP1ClientCodec.InboundIn","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundOut":{"kind":"symbol","deprecated":true,"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundout","type":"topic","title":"HTTP2ToHTTP1ClientCodec.OutboundOut","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelHandler-Implementations":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","abstract":[],"type":"topic","kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","role":"collection","title":"NIOHTTP2","url":"\/documentation\/niohttp2","abstract":[],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"streamID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","text":"HTTP2ToHTTP1ClientCodec","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola","text":"HTTPProtocol","kind":"typeIdentifier"},{"text":")","kind":"text"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","type":"topic","abstract":[{"type":"text","text":"Initializes a "},{"type":"codeVoice","code":"HTTP2ToHTTP1ClientCodec"},{"text":" for the given ","type":"text"},{"type":"codeVoice","code":"HTTP2StreamID"},{"text":".","type":"text"}],"title":"init(streamID:httpProtocol:)","role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec":{"title":"HTTP2ToHTTP1ClientCodec","deprecated":true,"kind":"symbol","abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and vice versa, for use on the client side."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","type":"topic","navigatorTitle":[{"text":"HTTP2ToHTTP1ClientCodec","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelInboundHandler-Implementations":{"type":"topic","title":"ChannelInboundHandler Implementations","abstract":[],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelinboundhandler-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundOut":{"kind":"symbol","type":"topic","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"role":"symbol","title":"HTTP2ToHTTP1ClientCodec.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/write(context:data:promise:)":{"role":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/write(context:data:promise:)","type":"topic","deprecated":true,"kind":"symbol","title":"write(context:data:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundIn":{"title":"HTTP2ToHTTP1ClientCodec.OutboundIn","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"role":"symbol","deprecated":true,"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","type":"topic","kind":"symbol","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}]}}}