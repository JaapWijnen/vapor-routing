{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"AtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before using "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":", please consider whether your needs can be met by "},{"type":"codeVoice","code":"Atomic"},{"type":"text","text":" instead."},{"type":"text","text":" "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":" is a value type, but atomics are heap-allocated. Thus, it is only safe to"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"UnsafeEmbeddedAtomic"},{"type":"text","text":" in situations where the atomic can be guaranteed to be cleaned up (via calling "},{"type":"codeVoice","code":"destroy"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"If you cannot make these guarantees, use "},{"type":"codeVoice","code":"Atomic"},{"type":"text","text":" instead, which manages this for you."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Atomic objects support a wide range of atomic operations:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compare and swap"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Subtract"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exchange"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Load current value","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Store current value","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Atomic primitives are useful when building constructs that need to","type":"text"},{"text":" ","type":"text"},{"text":"communicate or cooperate across multiple threads. In the case of","type":"text"},{"text":" ","type":"text"},{"text":"SwiftNIO this usually involves communicating across multiple event loops.","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"An atomic primitive object."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"symbolKind":"struct","externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV","title":"UnsafeEmbeddedAtomic","roleHeading":"Structure","modules":[{"name":"NIOConcurrencyHelpers"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"role":"symbol"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/compareAndExchange(expected:desired:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","role":"symbol","abstract":[{"type":"text","text":"Atomically compares the value against "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"text":"replaces the value with ","type":"text"},{"type":"codeVoice","code":"desired"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/compareandexchange(expected:desired:)","title":"compareAndExchange(expected:desired:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/sub(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)","role":"symbol","abstract":[{"type":"text","text":"Atomically subtracts "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" from this object."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sub","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/sub(_:)","title":"sub(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicPrimitive":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","role":"symbol","abstract":[{"type":"text","text":"The protocol that all types that can be made atomic must conform to."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicPrimitive","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"AtomicPrimitive","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicprimitive","title":"AtomicPrimitive"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/exchange(with:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","role":"symbol","abstract":[{"type":"text","text":"Atomically exchanges "},{"code":"value","type":"codeVoice"},{"type":"text","text":" for the current value of this object."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/exchange(with:)","title":"exchange(with:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","role":"collection","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","title":"NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/destroy()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","role":"symbol","abstract":[{"type":"text","text":"Destroy the atomic value."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/destroy()","title":"destroy()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","role":"symbol","abstract":[{"type":"text","text":"An atomic primitive object."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","title":"UnsafeEmbeddedAtomic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/add(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","role":"symbol","abstract":[{"type":"text","text":"Atomically adds "},{"code":"rhs","type":"codeVoice"},{"type":"text","text":" to this object."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/add(_:)","title":"add(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/store(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","role":"symbol","abstract":[{"type":"text","text":"Atomically replaces the value of this object with "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/store(_:)","title":"store(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/init(value:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)","role":"symbol","abstract":[{"type":"text","text":"Create an atomic object with "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/init(value:)","title":"init(value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","role":"symbol","abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()","title":"load()"}}}