{"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"type":"paragraph"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/compareandexchange(expected:desired:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/compareAndExchange(expected:desired:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"True"},{"type":"text","text":" if the exchange occurred, or "},{"type":"codeVoice","code":"False"},{"type":"text","text":" if "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" did not"},{"type":"text","text":" "},{"type":"text","text":"match the current value and so no exchange occurred."}],"type":"paragraph"}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"text":"The value that this object must currently hold for the","type":"text"},{"text":" ","type":"text"},{"text":"compare-and-swap to succeed.","type":"text"}],"type":"paragraph"}]},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This implementation conforms to C11’s ","type":"text"},{"code":"atomic_compare_exchange_strong","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"text":"means that the compare-and-swap will always succeed if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" is equal to","type":"text"},{"text":" ","type":"text"},{"text":"value. Additionally, it uses a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"sequentially consistent ordering","type":"text"}]},{"text":". For more","type":"text"},{"text":" ","type":"text"},{"text":"details on atomic memory models, check the documentation for C11’s","type":"text"},{"text":" ","type":"text"},{"code":"stdatomic.h","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"The implementation of ","type":"text"},{"type":"codeVoice","code":"exchange"},{"text":" contains a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Compare and Exchange loop","type":"text"}]},{"text":", ie. it may busy wait with","type":"text"},{"text":" ","type":"text"},{"text":"100% CPU load.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"warning"}]}],"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF","platforms":[],"role":"symbol","modules":[{"name":"NIOConcurrencyHelpers"}],"title":"compareAndExchange(expected:desired:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicBox"}],"role":"symbol","deprecated":true,"title":"AtomicBox","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox","abstract":[{"code":"AtomicBox","type":"codeVoice"},{"type":"text","text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class."}],"navigatorTitle":[{"kind":"identifier","text":"AtomicBox"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/compareAndExchange(expected:desired:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/compareAndExchange(expected:desired:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","deprecated":true,"title":"compareAndExchange(expected:desired:)","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/compareandexchange(expected:desired:)","abstract":[{"type":"text","text":"Atomically compares the value against "},{"code":"expected","type":"codeVoice"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"code":"desired","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","role":"collection","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","title":"NIOConcurrencyHelpers"}}}