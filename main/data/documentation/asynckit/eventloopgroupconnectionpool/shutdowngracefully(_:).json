{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Closes the connection pool."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All available connections will be closed immediately. Any connections still in use will be"},{"type":"text","text":" "},{"text":"closed as soon as they are returned to the pool. Once closed, the pool can not be used to","type":"text"},{"text":" ","type":"text"},{"text":"create new connections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Connection pools must be closed before they deinitialize.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This method shuts the pool down asynchronously. It may be invoked on any event loop. The","type":"text"},{"text":" ","type":"text"},{"text":"provided callback will be notified when shutdown is complete. It is invalid to allow a pool","type":"text"},{"text":" ","type":"text"},{"text":"to deinitialize before it has fully shut down.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method promises explicitly as API contract not to invoke the callback before returning"},{"type":"text","text":" "},{"type":"text","text":"to its caller. It further promises the callback will not be invoked on any event loop"},{"type":"text","text":" "},{"type":"text","text":"belonging to the pool."}]},{"style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Any invocation of the callback represents a signal that the pool has fully shut","type":"text"},{"text":" ","type":"text"},{"text":"down. This is true even if the error parameter is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":"; errors are purely advisory.","type":"text"}]}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool\/shutdownGracefully(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopgroupconnectionpool\/shutdowngracefully(_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"shutdownGracefully(_:)","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"AsyncKit"}],"externalID":"s:8AsyncKit28EventLoopGroupConnectionPoolC18shutdownGracefullyyyys5Error_pSgcF"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"role":"collection","abstract":[],"title":"AsyncKit","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","url":"\/documentation\/asynckit"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopGroupConnectionPool":{"kind":"symbol","type":"topic","url":"\/documentation\/asynckit\/eventloopgroupconnectionpool","role":"symbol","title":"EventLoopGroupConnectionPool","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupConnectionPool","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool","navigatorTitle":[{"text":"EventLoopGroupConnectionPool","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds a collection of connection pools for each "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" on an "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopGroupConnectionPool/shutdownGracefully(_:)":{"title":"shutdownGracefully(_:)","url":"\/documentation\/asynckit\/eventloopgroupconnectionpool\/shutdowngracefully(_:)","abstract":[{"text":"Closes the connection pool.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopGroupConnectionPool\/shutdownGracefully(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"}}}