{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"variants":[{"paths":["\/documentation\/asynckit\/eventloopfuturequeue"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]}],"abstract":[{"text":"Allows you to queue closures that produce an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":", so each future only gets run if the previous ones complete, succeed, or fail.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"},"metadata":{"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"externalID":"s:8AsyncKit20EventLoopFutureQueueC","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"symbolKind":"class","title":"EventLoopFutureQueue","modules":[{"name":"AsyncKit"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/eventLoop":{"kind":"symbol","title":"eventLoop","abstract":[{"type":"text","text":"The event loop that all the futures’s completions are handled on."}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/eventloop","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/eventLoop","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError","type":"topic","navigatorTitle":[{"text":"ContinueError","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","role":"symbol","abstract":[{"text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition.","type":"text"}],"title":"EventLoopFutureQueue.ContinueError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(onPrevious:generator:)":{"abstract":[{"text":"Adds another ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" producing closure to be run as soon as all previously queued future have completed, succeeded, or failed."}],"title":"append(onPrevious:generator:)","kind":"symbol","role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(onprevious:generator:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(onPrevious:generator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"onPrevious"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopFutureQueue","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ContinueCondition","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"generator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-3i4m4":{"abstract":[{"text":"Same as ","type":"text"},{"code":"append(each:_:)","type":"codeVoice"},{"text":" above, but assumes all futures return ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and returns a ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future instead of a result array.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-3i4m4","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"each"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-3i4m4","title":"append(each:_:)","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"role":"collection","abstract":[],"title":"AsyncKit","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","url":"\/documentation\/asynckit"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContinueCondition"}],"title":"EventLoopFutureQueue.ContinueCondition","kind":"symbol","type":"topic","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition","navigatorTitle":[{"kind":"identifier","text":"ContinueCondition"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","role":"symbol","abstract":[{"text":"Under what conditions an appended closure should be run.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","title":"EventLoopFutureQueue","type":"topic","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"url":"\/documentation\/asynckit\/eventloopfuturequeue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/init(eventLoop:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/init(eventLoop:)","kind":"symbol","title":"init(eventLoop:)","abstract":[{"text":"Create a new ","type":"text"},{"type":"codeVoice","code":"EventLoopFutureQueue"},{"text":" on a given event loop.","type":"text"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/init(eventloop:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(each:_:)-1fw85":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(each:_:)-1fw85","title":"append(each:_:)","type":"topic","abstract":[{"type":"text","text":"For each element of the provided collection, invoke the given generator"},{"type":"text","text":" "},{"type":"text","text":"and queue the returned future. Return a future whose value is an array"},{"type":"text","text":" "},{"text":"containing the result of each generated future in the same order as the","type":"text"},{"text":" ","type":"text"},{"text":"original sequence. The resulting array is intended to have semantics","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"substantially similar to those provided by "},{"code":"EventLoop.flatten(_:on:)","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(each:_:)-1fw85","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"each","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<[","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(_:runningOn:)":{"kind":"symbol","title":"append(_:runningOn:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() -> "},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC"},{"text":".","kind":"text"},{"text":"ContinueCondition","kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)","abstract":[{"type":"text","text":"An overload for "},{"type":"codeVoice","code":"append(generator:runningOn:)"},{"type":"text","text":" that takes in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" as an auto closure to provide a better 1-liner API."}]}}}