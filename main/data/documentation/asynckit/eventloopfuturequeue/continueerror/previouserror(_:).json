{"variants":[{"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previouserror(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousError(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"sections":[],"abstract":[{"type":"text","text":"A previous future failed with an error, which we don’t desire."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"roleHeading":"Case","externalID":"s:8AsyncKit20EventLoopFutureQueueC13ContinueErrorO08previousH0yAEs0H0_pcAEmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousError"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":")"}],"role":"symbol","title":"EventLoopFutureQueue.ContinueError.previousError(_:)","symbolKind":"case","modules":[{"name":"AsyncKit"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError","type":"topic","navigatorTitle":[{"text":"ContinueError","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","role":"symbol","abstract":[{"text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition.","type":"text"}],"title":"EventLoopFutureQueue.ContinueError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError/previousError(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousError(_:)","type":"topic","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previouserror(_:)","role":"symbol","abstract":[{"type":"text","text":"A previous future failed with an error, which we don’t desire."}],"title":"EventLoopFutureQueue.ContinueError.previousError(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"role":"collection","abstract":[],"title":"AsyncKit","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","url":"\/documentation\/asynckit"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","title":"EventLoopFutureQueue","type":"topic","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"url":"\/documentation\/asynckit\/eventloopfuturequeue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"kind":"symbol"}}}