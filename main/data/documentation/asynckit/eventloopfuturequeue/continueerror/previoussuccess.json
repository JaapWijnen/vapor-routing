{"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previoussuccess"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"previousSuccess","kind":"identifier"}],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousSuccess","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A previous future succeeded, which we don’t desire."}],"metadata":{"symbolKind":"case","modules":[{"name":"AsyncKit"}],"roleHeading":"Case","externalID":"s:8AsyncKit20EventLoopFutureQueueC13ContinueErrorO15previousSuccessyA2EmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"previousSuccess"}],"role":"symbol","title":"EventLoopFutureQueue.ContinueError.previousSuccess"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError","type":"topic","navigatorTitle":[{"text":"ContinueError","kind":"identifier"}],"url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror","role":"symbol","abstract":[{"text":"Errors that get propogated based on a future’s completion status and the next appended closure’s continuation condition.","type":"text"}],"title":"EventLoopFutureQueue.ContinueError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueError/previousSuccess":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueError\/previousSuccess","type":"topic","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continueerror\/previoussuccess","role":"symbol","abstract":[{"text":"A previous future succeeded, which we don’t desire.","type":"text"}],"title":"EventLoopFutureQueue.ContinueError.previousSuccess","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"previousSuccess"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"role":"symbol","navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","title":"EventLoopFutureQueue","type":"topic","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"url":"\/documentation\/asynckit\/eventloopfuturequeue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"role":"collection","abstract":[],"title":"AsyncKit","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","url":"\/documentation\/asynckit"}}}