{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeHeaders","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HPACKHeaders","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV"}],"symbolKind":"method","modules":[{"name":"NIOHPACK"}],"externalID":"s:8NIOHPACK12HPACKDecoderV13decodeHeaders4fromAA12HPACKHeadersV7NIOCore10ByteBufferVz_tKF","roleHeading":"Instance Method","role":"symbol","title":"decodeHeaders(from:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeHeaders"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","text":"HPACKHeaders"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of (name, value) pairs."}]}]},{"kind":"parameters","parameters":[{"name":"buffer","content":[{"inlineContent":[{"text":"A byte buffer containing the encoded header bytes.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is expected that the buffer cover only the bytes of the header list, i.e."},{"type":"text","text":" "},{"type":"text","text":"that this is in fact a slice containing only the payload bytes of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"HEADERS"},{"type":"text","text":" or "},{"type":"codeVoice","code":"CONTINUATION"},{"type":"text","text":" frame."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"HpackDecoder.Error in the event of a decode failure.","type":"text"}],"type":"paragraph"}],"name":"Throws"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/decodeHeaders(from:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Reads HPACK encoded header data from a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackdecoder\/decodeheaders(from:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","url":"\/documentation\/niohpack","role":"collection","abstract":[],"title":"NIOHPACK"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"kind":"symbol","url":"\/documentation\/niohpack\/hpackheaders","role":"symbol","abstract":[{"type":"text","text":"Very similar to "},{"type":"codeVoice","code":"NIOHTTP1.HTTPHeaders"},{"type":"text","text":", but with extra data for storing indexing"},{"type":"text","text":" "},{"type":"text","text":"information."}],"title":"HPACKHeaders","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKHeaders","kind":"identifier"}],"navigatorTitle":[{"text":"HPACKHeaders","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKDecoder","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"HPACKDecoder"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"text":"decode indexed HTTP headers, along with Huffman-encoded strings and","type":"text"},{"text":" ","type":"text"},{"text":"HPACK-encoded integers.","type":"text"}],"title":"HPACKDecoder","navigatorTitle":[{"text":"HPACKDecoder","kind":"identifier"}],"url":"\/documentation\/niohpack\/hpackdecoder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKDecoder/decodeHeaders(from:)":{"abstract":[{"text":"Reads HPACK encoded header data from a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohpack\/hpackdecoder\/decodeheaders(from:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKDecoder\/decodeHeaders(from:)","title":"decodeHeaders(from:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeHeaders","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HPACKHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"}}}