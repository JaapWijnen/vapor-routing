{"abstract":[{"type":"text","text":"A one-shot encoder that writes to a provided buffer."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"NIOHPACK"}],"externalID":"s:8NIOHPACK12HPACKEncoderV6encode7headers2toyAA12HPACKHeadersV_7NIOCore10ByteBufferVztKF","role":"symbol","roleHeading":"Instance Method","title":"encode(headers:to:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","text":"HPACKHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"buffer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In general this encoding mechanism is more efficient than the incremental one."}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackencoder\/encode(headers:to:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"kind":"symbol","url":"\/documentation\/niohpack\/hpackheaders","role":"symbol","abstract":[{"type":"text","text":"Very similar to "},{"type":"codeVoice","code":"NIOHTTP1.HTTPHeaders"},{"type":"text","text":", but with extra data for storing indexing"},{"type":"text","text":" "},{"type":"text","text":"information."}],"title":"HPACKHeaders","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKHeaders","kind":"identifier"}],"navigatorTitle":[{"text":"HPACKHeaders","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","url":"\/documentation\/niohpack","role":"collection","abstract":[],"title":"NIOHPACK"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"HPACKEncoder"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","title":"HPACKEncoder","role":"symbol","url":"\/documentation\/niohpack\/hpackencoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"HPACKEncoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/encode(headers:to:)":{"role":"symbol","abstract":[{"text":"A one-shot encoder that writes to a provided buffer.","type":"text"}],"title":"encode(headers:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/encode(headers:to:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","type":"topic"}}}