{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:6NIOSSL13NIOSSLHandlerC","title":"NIOSSLHandler","modules":[{"name":"NIOSSL"}],"roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"This class exists to deal with the reality that for almost the entirety of the lifetime","type":"text"},{"text":" ","type":"text"},{"text":"of a TLS connection there is no meaningful distinction between a server and a client.","type":"text"},{"text":" ","type":"text"},{"text":"For this reason almost the entirety of the implementation for the channel and server","type":"text"},{"text":" ","type":"text"},{"text":"handlers in NIOSSL is shared, in the form of this parent class.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/tlsVersion"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations"],"generated":true}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslhandler"]}],"relationshipsSections":[{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLServerHandler"],"kind":"relationships"},{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships"}],"abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/write(context:data:promise:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)","title":"write(context:data:promise:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/write(context:data:promise:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Channel.flush"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"text":" is called.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelInactive(context:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","title":"channelInactive(context:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/channelinactive(context:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInactive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"text":"Called when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" has become inactive and is no longer able to send and receive data`.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/flush(context:)":{"url":"\/documentation\/niossl\/niosslhandler\/flush(context:)","kind":"symbol","role":"symbol","title":"flush(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niossl","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/close(context:mode:promise:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","title":"close(context:mode:promise:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/close(context:mode:promise:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" close itself down`.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelActive(context:)":{"abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become active, and is able to send and receive data."}],"title":"channelActive(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelactive(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/ChannelOutboundHandler-Implementations":{"abstract":[],"title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLServerHandler":{"abstract":[{"text":"A channel handler that wraps a channel in TLS using NIOSSL. This","type":"text"},{"text":" ","type":"text"},{"text":"handler can be used in channels that are acting as the server in","type":"text"},{"text":" ","type":"text"},{"text":"the TLS dialog. For client connections, use the ","type":"text"},{"type":"codeVoice","code":"NIOSSLClientHandler"},{"text":".","type":"text"}],"url":"\/documentation\/niossl\/niosslserverhandler","kind":"symbol","title":"NIOSSLServerHandler","navigatorTitle":[{"kind":"identifier","text":"NIOSSLServerHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLServerHandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLServerHandler"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niossl\/niosslhandler\/channelinboundhandler-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","kind":"article","type":"topic","title":"ChannelInboundHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stopTLS"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)","abstract":[{"type":"text","text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"type":"topic","title":"stopTLS(promise:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/InboundIn":{"role":"symbol","title":"NIOSSLHandler.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn","kind":"symbol","url":"\/documentation\/niossl\/niosslhandler\/inboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/InboundOut":{"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"title":"NIOSSLHandler.InboundOut","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/inboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelRead(context:data:)":{"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"title":"channelRead(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelread(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/RemovableChannelHandler-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations","title":"RemovableChannelHandler Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/niossl\/niosslhandler\/removablechannelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/handlerRemoved(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","title":"handlerRemoved(context:)","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/handlerremoved(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/OutboundOut":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut","title":"NIOSSLHandler.OutboundOut","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/outboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/tlsVersion":{"type":"topic","url":"\/documentation\/niossl\/niosslhandler\/tlsversion","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/tlsVersion","abstract":[{"text":"Variable that can be queried during the connection lifecycle to grab the ","type":"text"},{"code":"TLSVersion","type":"codeVoice"},{"text":" used on the ","type":"text"},{"code":"SSLConnection","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"tlsVersion","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tlsVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TLSVersion","preciseIdentifier":"s:6NIOSSL10TLSVersionO","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/OutboundIn":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","title":"NIOSSLHandler.OutboundIn","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/outboundin"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelReadComplete(context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelReadComplete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","abstract":[{"text":"Called when the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" needs to yield to the event loop to process other I\/O events for other ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s.","type":"text"},{"text":" ","type":"text"},{"text":"If ","type":"text"},{"code":"ChannelOptions.autoRead","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" no further read attempt will be made until ","type":"text"},{"code":"ChannelHandlerContext.read","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Channel.read","type":"codeVoice"},{"text":" is explicitly called.","type":"text"}],"role":"symbol","title":"channelReadComplete(context:)","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/channelreadcomplete(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"title":"NIOSSLHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"role":"symbol","url":"\/documentation\/niossl\/niosslhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"type":"topic","abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/handlerAdded(context:)":{"role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/handleradded(context:)","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" is added to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"handlerAdded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLClientHandler","kind":"identifier"}],"navigatorTitle":[{"text":"NIOSSLClientHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A channel handler that wraps a channel in TLS using NIOSSL."},{"type":"text","text":" "},{"type":"text","text":"This handler can be used in channels that are acting as the client"},{"type":"text","text":" "},{"type":"text","text":"in the TLS dialog. For server connections, use the "},{"type":"codeVoice","code":"NIOSSLServerHandler"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/niossl\/niosslclienthandler","kind":"symbol","role":"symbol","title":"NIOSSLClientHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"}}}