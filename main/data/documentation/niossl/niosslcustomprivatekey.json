{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"variants":[{"paths":["\/documentation\/niossl\/niosslcustomprivatekey"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"NIOSSLCustomPrivateKey"},{"type":"text","text":" defines the interface of a custom, non-BoringSSL private key."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"In a number of circumstances it is advantageous to store a TLS private key in some form of high-security storage,"},{"type":"text","text":" "},{"type":"text","text":"such as a smart card. In these cases it is not possible to represent the TLS private key directly as a sequence"},{"type":"text","text":" "},{"type":"text","text":"of bytes that BoringSSL will understand."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This protocol allows a type to implement callbacks that perform the specific operation required by the TLS handshake."},{"type":"text","text":" "},{"type":"text","text":"Implementers are required to specify what signature algorithms they support, and then must implement "},{"type":"strong","inlineContent":[{"type":"text","text":"only one"}]},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"sign"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"decrypt"},{"type":"text","text":" functions. For elliptic curve keys, implementers should implement "},{"type":"codeVoice","code":"sign"},{"type":"text","text":". For RSA keys,"},{"type":"text","text":" "},{"type":"text","text":"implementers should implement "},{"type":"codeVoice","code":"sign"},{"type":"text","text":" and, if supporting RSA key exchange in TLS versions before 1.3, you should"},{"type":"text","text":" "},{"type":"text","text":"also implement "},{"type":"codeVoice","code":"decrypt"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the same "},{"type":"codeVoice","code":"NIOSSLCustomPrivateKey"},{"type":"text","text":" implementation is used by multiple channels at once, then no synchronization"},{"type":"text","text":" "},{"type":"text","text":"is imposed by SwiftNIO. The calls to the protocol requirements will be made on event loop threads, so if further"},{"type":"text","text":" "},{"type":"text","text":"synchronization is required it is up to the implementer to provide it. Note that it is unacceptable to block in"},{"type":"text","text":" "},{"type":"text","text":"these functions, and so potentially blocking operations must delegate to another thread."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:6NIOSSL22NIOSSLCustomPrivateKeyP","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"title":"NIOSSLCustomPrivateKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"modules":[{"name":"NIOSSL"}],"role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"],"title":"Instance Methods"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/sign(channel:algorithm:data:)":{"required":true,"abstract":[{"type":"text","text":"Called to perform a signing operation."}],"url":"\/documentation\/niossl\/niosslcustomprivatekey\/sign(channel:algorithm:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sign","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"algorithm"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV","kind":"typeIdentifier","text":"SignatureAlgorithm"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)","kind":"symbol","title":"sign(channel:algorithm:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/signatureAlgorithms":{"url":"\/documentation\/niossl\/niosslcustomprivatekey\/signaturealgorithms","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms","kind":"symbol","abstract":[{"type":"text","text":"The signature algorithms supported by this key."}],"required":true,"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signatureAlgorithms","kind":"identifier"},{"text":": [","kind":"text"},{"text":"SignatureAlgorithm","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV"},{"text":"]","kind":"text"}],"title":"signatureAlgorithms"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niossl","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey":{"abstract":[{"code":"NIOSSLCustomPrivateKey","type":"codeVoice"},{"type":"text","text":" defines the interface of a custom, non-BoringSSL private key."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"title":"NIOSSLCustomPrivateKey","url":"\/documentation\/niossl\/niosslcustomprivatekey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/decrypt(channel:data:)":{"required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","abstract":[{"type":"text","text":"Called to perform a decryption operation."}],"type":"topic","title":"decrypt(channel:data:)","url":"\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)","role":"symbol"}}}