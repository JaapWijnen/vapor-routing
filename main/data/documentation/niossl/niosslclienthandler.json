{"abstract":[{"text":"A channel handler that wraps a channel in TLS using NIOSSL.","type":"text"},{"text":" ","type":"text"},{"text":"This handler can be used in channels that are acting as the client","type":"text"},{"text":" ","type":"text"},{"text":"in the TLS dialog. For server connections, use the ","type":"text"},{"code":"NIOSSLServerHandler","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslclienthandler"]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLClientHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:customVerificationCallback:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:verificationCallback:)"],"title":"Initializers"}],"metadata":{"navigatorTitle":[{"text":"NIOSSLClientHandler","kind":"identifier"}],"symbolKind":"class","modules":[{"name":"NIOSSL"}],"externalID":"s:6NIOSSL19NIOSSLClientHandlerC","roleHeading":"Class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLClientHandler","kind":"identifier"}],"title":"NIOSSLClientHandler"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"title":"NIOSSLHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"role":"symbol","url":"\/documentation\/niossl\/niosslhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"type":"topic","abstract":[{"type":"text","text":"The base class for all NIOSSL handlers. This class cannot actually be instantiated by"},{"type":"text","text":" "},{"type":"text","text":"users directly: instead, users must select which mode they would like their handler to"},{"type":"text","text":" "},{"type":"text","text":"operate in, client or server."}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLClientHandler","kind":"identifier"}],"navigatorTitle":[{"text":"NIOSSLClientHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A channel handler that wraps a channel in TLS using NIOSSL."},{"type":"text","text":" "},{"type":"text","text":"This handler can be used in channels that are acting as the client"},{"type":"text","text":" "},{"type":"text","text":"in the TLS dialog. For server connections, use the "},{"type":"codeVoice","code":"NIOSSLServerHandler"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/niossl\/niosslclienthandler","kind":"symbol","role":"symbol","title":"NIOSSLClientHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler/init(context:serverHostname:verificationCallback:)":{"role":"symbol","abstract":[],"url":"\/documentation\/niossl\/niosslclienthandler\/init(context:serverhostname:verificationcallback:)","title":"init(context:serverHostname:verificationCallback:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOSSLContext","preciseIdentifier":"s:6NIOSSL13NIOSSLContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serverHostname"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"verificationCallback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOSSLVerificationCallback","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL26NIOSSLVerificationCallbacka"},{"text":"?) ","kind":"text"},{"text":"throws","kind":"keyword"}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:verificationCallback:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler/init(context:serverHostname:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:)","url":"\/documentation\/niossl\/niosslclienthandler\/init(context:serverhostname:)","kind":"symbol","abstract":[],"title":"init(context:serverHostname:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6NIOSSL13NIOSSLContextC","kind":"typeIdentifier","text":"NIOSSLContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serverHostname"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler/init(context:serverHostname:customVerificationCallback:)":{"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOSSLContext","preciseIdentifier":"s:6NIOSSL13NIOSSLContextC"},{"kind":"text","text":", "},{"text":"serverHostname","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?, ","kind":"text"},{"text":"customVerificationCallback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOSSLCustomVerificationCallback","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL32NIOSSLCustomVerificationCallbacka"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler\/init(context:serverHostname:customVerificationCallback:)","title":"init(context:serverHostname:customVerificationCallback:)","type":"topic","url":"\/documentation\/niossl\/niosslclienthandler\/init(context:serverhostname:customverificationcallback:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","type":"topic","abstract":[],"role":"collection","url":"\/documentation\/niossl","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"}}}