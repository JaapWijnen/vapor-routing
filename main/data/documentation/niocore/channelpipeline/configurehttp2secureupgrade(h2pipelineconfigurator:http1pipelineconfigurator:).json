{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1PipelineConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"An "},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"type":"text","text":" that completes when the pipeline is ready to negotiate."}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"h2PipelineConfigurator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that"},{"type":"text","text":" "},{"type":"text","text":"should configure the pipeline for HTTP\/2 use. Must return a future that completes when the"},{"type":"text","text":" "},{"type":"text","text":"pipeline has been fully mutated."}]}]},{"name":"http1PipelineConfigurator","content":[{"inlineContent":[{"type":"text","text":"A callback that will be invoked if HTTP\/1.1 has been explicitly"},{"type":"text","text":" "},{"type":"text","text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the"},{"type":"text","text":" "},{"type":"text","text":"pipeline has been fully mutated."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to","type":"text"},{"text":" ","type":"text"},{"text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS","type":"text"},{"text":" ","type":"text"},{"text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function configures the pipeline with a pair of callbacks that will handle the result"},{"type":"text","text":" "},{"type":"text","text":"of the negotiation. It explicitly "},{"inlineContent":[{"text":"does not","type":"text"}],"type":"strong"},{"type":"text","text":" configure a TLS handler to actually attempt"},{"type":"text","text":" "},{"type":"text","text":"to negotiate ALPN. The supported ALPN protocols are provided in"},{"type":"text","text":" "},{"code":"NIOHTTP2SupportedALPNProtocols","type":"codeVoice"},{"type":"text","text":": please ensure that the TLS handler you are using for your"},{"type":"text","text":" "},{"type":"text","text":"pipeline is appropriately configured to perform this protocol negotiation."}],"type":"paragraph"},{"inlineContent":[{"text":"If negotiation results in an unexpected protocol, the pipeline will close the connection","type":"text"},{"text":" ","type":"text"},{"text":"and no callback will fire.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This configuration is acceptable for use on both client and server channel pipelines."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","extendedModule":"NIOCore","roleHeading":"Instance Method","externalID":"s:7NIOCore15ChannelPipelineC8NIOHTTP2E27configureHTTP2SecureUpgrade02h2C12Configurator05http1cJ0AA15EventLoopFutureCyytGAjCc_AjCctF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol","platforms":[],"modules":[{"name":"NIOCore"}]},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","url":"\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}],"deprecated":true,"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}