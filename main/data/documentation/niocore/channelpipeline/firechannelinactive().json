{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Called once a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" becomes inactive.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"What inactive means depends on the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation and semantics.","type":"text"},{"text":" ","type":"text"},{"text":"For example for TCP it means the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was disconnected from the remote peer and closed.","type":"text"}]}]}],"metadata":{"externalID":"s:7NIOCore15ChannelPipelineC04fireB8InactiveyyF","title":"fireChannelInactive()","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","symbolKind":"method"},"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelinactive()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelInactive()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes inactive."}],"title":"fireChannelInactive()","url":"\/documentation\/niocore\/channelpipeline\/firechannelinactive()","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"role":"symbol","type":"topic"}}}