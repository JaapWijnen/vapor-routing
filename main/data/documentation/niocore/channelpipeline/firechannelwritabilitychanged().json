{"metadata":{"modules":[{"name":"NIOCore"}],"role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC04fireB18WritabilityChangedyyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelWritabilityChanged"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method","title":"fireChannelWritabilityChanged()","symbolKind":"method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The writability state of a Channel depends on watermarks that can be set via ","type":"text"},{"code":"Channel.setOption","type":"codeVoice"},{"text":" and how much data","type":"text"},{"text":" ","type":"text"},{"text":"is still waiting to be transferred to the remote peer.","type":"text"},{"text":" ","type":"text"},{"text":"You should take care to enforce some kind of backpressure if the channel becomes unwritable which means ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" to ensure you do not consume too much memory due to queued writes. What exactly you should do here depends on the","type":"text"},{"text":" ","type":"text"},{"text":"protocol and other semantics. But for example you may want to stop writing to the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" until ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" becomes","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again or stop reading at all.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Called when a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","title":"fireChannelWritabilityChanged()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Called when a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","type":"topic","role":"symbol"}}}