{"abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"text":" that completes when the channel is ready to negotiate.","type":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that","type":"text"},{"text":" ","type":"text"},{"text":"should configure the channel for HTTP\/2 use. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"channel has been fully mutated.","type":"text"}]}],"name":"h2ChannelConfigurator"},{"content":[{"inlineContent":[{"text":"A callback that will be invoked if HTTP\/1.1 has been explicitly","type":"text"},{"text":" ","type":"text"},{"text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"channel has been fully mutated.","type":"text"}],"type":"paragraph"}],"name":"http1ChannelConfigurator"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to","type":"text"},{"text":" ","type":"text"},{"text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS","type":"text"},{"text":" ","type":"text"},{"text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function configures the channel with a pair of callbacks that will handle the result"},{"type":"text","text":" "},{"type":"text","text":"of the negotiation. It explicitly "},{"inlineContent":[{"text":"does not","type":"text"}],"type":"strong"},{"type":"text","text":" configure a TLS handler to actually attempt"},{"type":"text","text":" "},{"type":"text","text":"to negotiate ALPN. The supported ALPN protocols are provided in"},{"type":"text","text":" "},{"code":"NIOHTTP2SupportedALPNProtocols","type":"codeVoice"},{"type":"text","text":": please ensure that the TLS handler you are using for your"},{"type":"text","text":" "},{"type":"text","text":"pipeline is appropriately configured to perform this protocol negotiation."}],"type":"paragraph"},{"inlineContent":[{"text":"If negotiation results in an unexpected protocol, the pipeline will close the connection","type":"text"},{"text":" ","type":"text"},{"text":"and no callback will fire.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This configuration is acceptable for use on both client and server channel pipelines."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"variants":[{"paths":["\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"NIOCore","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">, ","kind":"text"},{"text":"http1ChannelConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","role":"symbol","externalID":"s:7NIOCore7ChannelP8NIOHTTP2E27configureHTTP2SecureUpgrade02h2B12Configurator05http1bI0AA15EventLoopFutureCyytGAjaB_pc_AjaB_pctF"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"type":"topic","abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}