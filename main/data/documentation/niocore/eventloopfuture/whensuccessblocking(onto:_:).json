{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"queue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callbackMayBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"onto","content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":"DispatchQueue","type":"codeVoice"},{"text":" on which the blocking IO \/ task specified by ","type":"text"},{"code":"callbackMayBlock","type":"codeVoice"},{"text":" is scheduled.","type":"text"}],"type":"paragraph"}]},{"name":"callbackMayBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The callback that is called with the successful result of the "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}]}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"An observer callback cannot return a value, meaning that this function cannot be chained","type":"text"},{"text":" ","type":"text"},{"text":"from. If you are attempting to create a computation pipeline, consider ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you find yourself passing the results from this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" to a new ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in the body of this function, consider using ","type":"text"},{"code":"cascade","type":"codeVoice"},{"text":" instead.","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore15EventLoopFutureC19whenSuccessBlocking4onto_y8Dispatch0I5QueueC_yxctF","extendedModule":"NIOCore","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"whenSuccessBlocking(onto:_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" has a success result. The observer callback is permitted to block.","type":"text"}],"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenSuccessBlocking(onto:_:)":{"abstract":[{"text":"Adds an observer callback to this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is called when the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" has a success result. The observer callback is permitted to block.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"whenSuccessBlocking(onto:_:)","type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}