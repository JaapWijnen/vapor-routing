{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapThrowing(_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"performs a synchronous computation and returns a new value of type ","type":"text"},{"code":"NewValue","type":"codeVoice"},{"text":". The provided","type":"text"},{"text":" ","type":"text"},{"text":"callback may optionally ","type":"text"},{"code":"throw","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:7NIOCore15EventLoopFutureC15flatMapThrowingyACyqd__Gqd__xKclF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapThrowing","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"flatMapThrowing(_:)"},"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/flatmapthrowing(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapThrowing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A future that will receive the eventual value."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Function that will receive the value of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and return","type":"text"},{"text":" ","type":"text"},{"text":"a new value lifted into a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations performed in "},{"type":"codeVoice","code":"flatMapThrowing"},{"type":"text","text":" should not block, or they will block the entire"},{"type":"text","text":" "},{"type":"text","text":"event loop. "},{"type":"codeVoice","code":"flatMapThrowing"},{"type":"text","text":" is intended for use when you have a data-driven function that"},{"type":"text","text":" "},{"type":"text","text":"performs a simple data transformation that can potentially error."}]},{"type":"paragraph","inlineContent":[{"text":"If your callback function throws, the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will error.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/flatMapThrowing(_:)":{"title":"flatMapThrowing(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapThrowing(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapThrowing","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"When the current "},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns a new value of type "},{"code":"NewValue","type":"codeVoice"},{"type":"text","text":". The provided"},{"type":"text","text":" "},{"type":"text","text":"callback may optionally "},{"code":"throw","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/eventloopfuture\/flatmapthrowing(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"}}}