{"metadata":{"externalID":"s:7NIOCore15EventLoopFutureC3hop2toACyxGAA0bC0_p_tF","symbolKind":"method","title":"hop(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/hop(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/hop(to:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires when this future completes, but executes its callbacks on the"},{"type":"text","text":" "},{"type":"text","text":"target event loop instead of the original one."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"target","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" whose callbacks run on "},{"type":"codeVoice","code":"target"},{"type":"text","text":" instead of the original loop."}]}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"to","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" that the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will run on.","type":"text"}]}]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"It is common to want to “hop” event loops when you arrange some work: for example, you’re closing one channel","type":"text"},{"text":" ","type":"text"},{"text":"from another, and want to hop back when the close completes. This method lets you spell that requirement","type":"text"},{"text":" ","type":"text"},{"text":"succinctly. It also contains an optimisation for the case when the loop you’re hopping ","type":"text"},{"inlineContent":[{"type":"text","text":"from"}],"type":"emphasis"},{"text":" is the same as","type":"text"},{"text":" ","type":"text"},{"text":"the one you’re hopping ","type":"text"},{"inlineContent":[{"type":"text","text":"to"}],"type":"emphasis"},{"text":", allowing you to avoid doing allocations in that case.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/hop(to:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/hop(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/hop(to:)","abstract":[{"type":"text","text":"Returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that fires when this future completes, but executes its callbacks on the"},{"type":"text","text":" "},{"type":"text","text":"target event loop instead of the original one."}],"title":"hop(to:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"title":"EventLoop","url":"\/documentation\/niocore\/eventloop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"kind":"symbol"}}}