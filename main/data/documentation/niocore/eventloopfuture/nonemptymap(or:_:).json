{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/nonemptymap(or:_:)"]}],"sections":[],"abstract":[{"text":"Checks that the future’s value (if any) returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" for ","type":"text"},{"code":".isEmpty","type":"codeVoice"},{"text":". If the check fails, a new future with","type":"text"},{"text":" ","type":"text"},{"text":"the provided alternate value is returned. Otherwise, the provided normal ","type":"text"},{"code":"map()","type":"codeVoice"},{"text":" callback is invoked.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonemptyMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"or","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"alternate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyMap(or:_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore15EventLoopFutureC8AsyncKitE11nonemptyMap2or_ACyqd__Gqd__yXA_qd__xctSlRzlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"nonemptyMap(or:_:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/nonemptyMap(or:_:)":{"role":"symbol","title":"nonemptyMap(or:_:)","abstract":[{"type":"text","text":"Checks that the future’s value (if any) returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" for "},{"type":"codeVoice","code":".isEmpty"},{"type":"text","text":". If the check fails, a new future with"},{"type":"text","text":" "},{"type":"text","text":"the provided alternate value is returned. Otherwise, the provided normal "},{"type":"codeVoice","code":"map()"},{"type":"text","text":" callback is invoked."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyMap(or:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/nonemptymap(or:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}