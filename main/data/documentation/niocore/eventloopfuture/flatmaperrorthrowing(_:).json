{"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/flatmaperrorthrowing(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"may recover from the error and returns a new value of type ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":". The provided callback may optionally ","type":"text"},{"code":"throw","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"in which case the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will be in a failed state with the new thrown error.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC20flatMapErrorThrowingyACyxGxs0G0_pKcF","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapErrorThrowing"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"flatMapErrorThrowing(_:)","modules":[{"name":"NIOCore"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapErrorThrowing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A future that will receive the eventual value or a rethrown error.","type":"text"}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Function that will receive the error value of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and return","type":"text"},{"text":" ","type":"text"},{"text":"a new value lifted into a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"callback"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations performed in "},{"type":"codeVoice","code":"flatMapErrorThrowing"},{"type":"text","text":" should not block, or they will block the entire"},{"type":"text","text":" "},{"type":"text","text":"event loop. "},{"type":"codeVoice","code":"flatMapErrorThrowing"},{"type":"text","text":" is intended for use when you have the ability to synchronously"},{"type":"text","text":" "},{"type":"text","text":"recover from errors."}]},{"type":"paragraph","inlineContent":[{"text":"If your callback function throws, the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will error.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapErrorThrowing(_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/flatMapErrorThrowing(_:)":{"role":"symbol","url":"\/documentation\/niocore\/eventloopfuture\/flatmaperrorthrowing(_:)","kind":"symbol","abstract":[{"text":"When the current ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"may recover from the error and returns a new value of type "},{"code":"Value","type":"codeVoice"},{"type":"text","text":". The provided callback may optionally "},{"code":"throw","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"in which case the "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" will be in a failed state with the new thrown error."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/flatMapErrorThrowing(_:)","title":"flatMapErrorThrowing(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapErrorThrowing"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}