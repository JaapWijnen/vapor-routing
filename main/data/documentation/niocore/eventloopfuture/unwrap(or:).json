{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"or","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"error","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"WrappedType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"error","content":[{"inlineContent":[{"type":"text","text":""},{"code":"Error","type":"codeVoice"},{"type":"text","text":" to throw if the value is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". This is captured with "},{"code":"@autoclosure","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to avoid initialize the "},{"code":"Error","type":"codeVoice"},{"type":"text","text":" unless needed."}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"code":["print(futureString) \/\/ Future<String?>","futureString.unwrap(or: MyError()) \/\/ Future<String>"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","interfaceLanguage":"swift"},"abstract":[{"text":"Unwraps an ","type":"text"},{"code":"Optional","type":"codeVoice"},{"text":" value contained inside a Future’s expectation.","type":"text"},{"text":" ","type":"text"},{"text":"If the optional resolves to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" (","type":"text"},{"code":".none","type":"codeVoice"},{"text":"), the supplied error will be thrown instead.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/unwrap(or:)"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:7NIOCore15EventLoopFutureC5VaporAD12OptionalTypeRzlE6unwrap2orACy07WrappedG0QzGs5Error_pyXA_tF","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"OptionalType"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","title":"unwrap(or:)","modules":[{"name":"NIOCore"}],"symbolKind":"method","extendedModule":"NIOCore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WrappedType"},{"kind":"text","text":">"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/unwrap(or:)":{"title":"unwrap(or:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"OptionalType","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/niocore\/eventloopfuture\/unwrap(or:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","abstract":[{"type":"text","text":"Unwraps an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" value contained inside a Future’s expectation."},{"type":"text","text":" "},{"type":"text","text":"If the optional resolves to "},{"type":"codeVoice","code":"nil"},{"text":" (","type":"text"},{"type":"codeVoice","code":".none"},{"text":"), the supplied error will be thrown instead.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrap","kind":"identifier"},{"text":"(","kind":"text"},{"text":"or","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"WrappedType","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}