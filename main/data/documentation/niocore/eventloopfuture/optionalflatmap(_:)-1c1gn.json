{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/optionalflatmap(_:)-1c1gn"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"optionalFlatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"closure","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result of the closure if the optional was unwrapped, or nil if it wasn’t, wrapped in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}]}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The closure to call on the unwrapped optional value."}],"type":"paragraph"}],"name":"closure"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The optional’s value, unwrapped.","type":"text"}]}],"name":"unwrapped"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"code":["let optional = eventLoop.future(Optiona<Int>.some(42))","let some = optional.optionalFlatMap { int -> EventLoopFuture<Float?> in","    return int * Optional<Float>.some(3.14)","}","\/\/ some: EventLoopFuture(Optional(131.88))"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/optionalFlatMap(_:)-1c1gn"},"abstract":[{"type":"text","text":"Calls a closure that returns an optional future on an optional value in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" if it exists."}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"optionalFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"role":"symbol","title":"optionalFlatMap(_:)","externalID":"s:7NIOCore15EventLoopFutureC8AsyncKitE15optionalFlatMapyACyqd_0_SgGAGqd__cqd__SgRszr0_lF","extendedModule":"NIOCore","symbolKind":"method","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/optionalFlatMap(_:)-1c1gn":{"type":"topic","url":"\/documentation\/niocore\/eventloopfuture\/optionalflatmap(_:)-1c1gn","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/optionalFlatMap(_:)-1c1gn","title":"optionalFlatMap(_:)","abstract":[{"type":"text","text":"Calls a closure that returns an optional future on an optional value in an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" if it exists."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"optionalFlatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"}}}