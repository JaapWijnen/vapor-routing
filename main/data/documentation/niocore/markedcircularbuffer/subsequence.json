{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Collection.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/SubSequence"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"typealias","title":"MarkedCircularBuffer.SubSequence","roleHeading":"Type Alias","extendedModule":"NIOCore","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubSequence"}],"navigatorTitle":[{"kind":"identifier","text":"SubSequence"}],"externalID":"s:7NIOCore20MarkedCircularBufferV11SubSequencea"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubSequence"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","text":"CircularBuffer","preciseIdentifier":"s:7NIOCore14CircularBufferV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/markedcircularbuffer\/subsequence"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer/SubSequence":{"url":"\/documentation\/niocore\/markedcircularbuffer\/subsequence","title":"MarkedCircularBuffer.SubSequence","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubSequence","kind":"identifier"}],"kind":"symbol","abstract":[],"navigatorTitle":[{"text":"SubSequence","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/SubSequence"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer/Collection-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer\/Collection-Implementations","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/niocore\/markedcircularbuffer\/collection-implementations","role":"collectionGroup","title":"Collection Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MarkedCircularBuffer":{"title":"MarkedCircularBuffer","abstract":[{"type":"text","text":"A circular buffer that allows one object at a time to be “marked” and easily identified and retrieved later."}],"navigatorTitle":[{"kind":"identifier","text":"MarkedCircularBuffer"}],"url":"\/documentation\/niocore\/markedcircularbuffer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MarkedCircularBuffer","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkedCircularBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, it’s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer"}}}