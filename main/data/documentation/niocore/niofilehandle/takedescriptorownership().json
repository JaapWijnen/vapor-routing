{"sections":[],"metadata":{"title":"takeDescriptorOwnership()","role":"symbol","externalID":"s:7NIOCore13NIOFileHandleC23takeDescriptorOwnerships5Int32VyKF","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"}],"symbolKind":"method"},"abstract":[{"text":"Take the ownership of the underlying file descriptor. This is similar to ","type":"text"},{"code":"close()","type":"codeVoice"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/niofilehandle\/takedescriptorownership()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The underlying file descriptor, now owned by the caller."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After calling this, the "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" cannot be used for anything else and all the operations will throw."}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"abstract":[{"text":"Take the ownership of the underlying file descriptor. This is similar to ","type":"text"},{"type":"codeVoice","code":"close()"},{"text":" but the underlying file","type":"text"},{"text":" ","type":"text"},{"text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","type":"topic","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"}],"title":"takeDescriptorOwnership()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"title":"NIOFileHandle","url":"\/documentation\/niocore\/niofilehandle","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","role":"symbol","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"}}}