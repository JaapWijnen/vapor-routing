{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"},"abstract":[{"type":"text","text":"Allows users to invoke an “outbound” operation related to a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that will flow through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"it will finally be executed by the the "},{"code":"ChannelCore","type":"codeVoice"},{"type":"text","text":" implementation."}],"metadata":{"modules":[{"name":"NIOCore"}],"role":"symbol","externalID":"s:7NIOCore22ChannelOutboundInvokerP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"title":"ChannelOutboundInvoker","roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}]},"relationshipsSections":[{"title":"Inherited By","type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"]},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/channeloutboundinvoker"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/eventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-1vmdv","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-8dzuj","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-7hlgf","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-db80","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7fcj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7wcds","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/flush()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/read()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-2ekw5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-4tkmi","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-13y21","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-5c6ri","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-4o0d3","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-90bdy","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:promise:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:file:line:)-1vmdv":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-1vmdv","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:file:line:)-1vmdv","abstract":[{"type":"text","text":"Bind to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"bind(to:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:promise:)":{"defaultImplementations":1,"url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:promise:)","kind":"symbol","type":"topic","required":true,"abstract":[{"text":"Bind to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"bind(to:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:file:line:)-4o0d3":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:file:line:)-4o0d3","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-4o0d3","role":"symbol","title":"writeAndFlush(_:file:line:)","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"type":"text","text":" and "},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:promise:)":{"role":"symbol","title":"writeAndFlush(_:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:promise:)","required":true,"defaultImplementations":2,"url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:promise:)","type":"topic","kind":"symbol","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:promise:)":{"abstract":[{"text":"Connect to a ","type":"text"},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:promise:)","title":"connect(to:promise:)","defaultImplementations":1,"url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:promise:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/write(_:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/write(_:promise:)","title":"write(_:promise:)","abstract":[{"text":"Write data to the remote peer.","type":"text"}],"kind":"symbol","defaultImplementations":2,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:promise:)","required":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:promise:)":{"defaultImplementations":1,"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:promise:)","type":"topic","title":"close(mode:promise:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:promise:)","kind":"symbol","role":"symbol","abstract":[{"text":"Close the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CloseMode","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"kind":"text","text":", "},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(file:line:)-2ekw5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/register(file:line:)-2ekw5","title":"register(file:line:)","abstract":[{"text":"Register on an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" and so have all its IO handled."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-2ekw5","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"role":"symbol","title":"ChannelInvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","url":"\/documentation\/niocore\/channelinvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandlerContext","kind":"identifier"}],"title":"ChannelHandlerContext","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"navigatorTitle":[{"text":"ChannelHandlerContext","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"type":"codeVoice","code":"ChannelCore"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"title":"ChannelOutboundInvoker","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:file:line:)-7wcds":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"connect(to:file:line:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:file:line:)-7wcds","abstract":[{"text":"Connect to a ","type":"text"},{"type":"codeVoice","code":"SocketAddress"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7wcds"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:file:line:)-db80":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:file:line:)-db80","title":"close(mode:file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-db80","abstract":[{"type":"text","text":"Close the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:file:line:)-5c6ri":{"title":"triggerUserOutboundEvent(_:file:line:)","abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-5c6ri","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:file:line:)-5c6ri","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/bind(to:file:line:)-8dzuj":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/bind(to:file:line:)-8dzuj","type":"topic","role":"symbol","title":"bind(to:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/bind(to:file:line:)-8dzuj","abstract":[{"type":"text","text":"Bind to a "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/read()":{"role":"symbol","abstract":[{"type":"text","text":"Signal that we want to read from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" once there is data ready."}],"required":true,"type":"topic","kind":"symbol","defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/read()","url":"\/documentation\/niocore\/channeloutboundinvoker\/read()","title":"read()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:promise:)":{"url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:promise:)","kind":"symbol","required":true,"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:promise:)","defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"triggerUserOutboundEvent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"title":"triggerUserOutboundEvent(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/eventLoop":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which is used by this "},{"code":"ChannelOutboundInvoker","type":"codeVoice"},{"type":"text","text":" for execution."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/eventLoop","title":"eventLoop","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/eventloop","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(file:line:)-4tkmi":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(file:line:)-4tkmi","abstract":[{"type":"text","text":"Register on an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" and so have all its IO handled."}],"role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/register(file:line:)-4tkmi","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","title":"register(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/writeAndFlush(_:file:line:)-90bdy":{"abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"code":"flush","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/writeAndFlush(_:file:line:)-90bdy","title":"writeAndFlush(_:file:line:)","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/writeandflush(_:file:line:)-90bdy"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/close(mode:file:line:)-7hlgf":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"text":"Close the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" and so the connection if one exists."}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/close(mode:file:line:)-7hlgf","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/close(mode:file:line:)-7hlgf","title":"close(mode:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/connect(to:file:line:)-7fcj0":{"abstract":[{"text":"Connect to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/connect(to:file:line:)-7fcj0","url":"\/documentation\/niocore\/channeloutboundinvoker\/connect(to:file:line:)-7fcj0","role":"symbol","type":"topic","title":"connect(to:file:line:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/flush()":{"title":"flush()","abstract":[{"text":"Flush data that was previously written via ","type":"text"},{"code":"write","type":"codeVoice"},{"type":"text","text":" to the remote peer."}],"type":"topic","defaultImplementations":1,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/flush()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"()"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/flush()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/register(promise:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/register(promise:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"defaultImplementations":1,"title":"register(promise:)","url":"\/documentation\/niocore\/channeloutboundinvoker\/register(promise:)","abstract":[{"text":"Register on an ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" and so have all its IO handled.","type":"text"}],"type":"topic","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/triggerUserOutboundEvent(_:file:line:)-13y21":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker\/triggeruseroutboundevent(_:file:line:)-13y21","title":"triggerUserOutboundEvent(_:file:line:)","abstract":[{"text":"Trigger a custom user outbound event which will flow through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/triggerUserOutboundEvent(_:file:line:)-13y21"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"url":"\/documentation\/niocore\/multicastchannel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MulticastChannel"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","navigatorTitle":[{"kind":"identifier","text":"MulticastChannel"}],"title":"MulticastChannel","abstract":[{"type":"text","text":"A "},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"type":"text","text":"groups."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker/write(_:file:line:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Write data to the remote peer."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channeloutboundinvoker\/write(_:file:line:)","kind":"symbol","title":"write(_:file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker\/write(_:file:line:)"}}}