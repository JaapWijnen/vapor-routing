{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"byte","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will allocate a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" with at least "},{"type":"codeVoice","code":"count"},{"type":"text","text":" bytes."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"info: If you have access to a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":", "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":", or "},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":" we"},{"type":"text","text":" "},{"type":"text","text":"recommend using "},{"code":"channel.allocator.buffer(repeating:count:)","type":"codeVoice"},{"type":"text","text":". Or if you want to write multiple items"},{"type":"text","text":" "},{"type":"text","text":"into the buffer use "},{"code":"channel.allocator.buffer(capacity: ...)","type":"codeVoice"},{"type":"text","text":" to allocate a "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" of the right"},{"type":"text","text":" "},{"type":"text","text":"size followed by a "},{"code":"writeRepeatingByte","type":"codeVoice"},{"type":"text","text":" instead of using this method. This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" in the future."}]}]}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing "},{"type":"codeVoice","code":"count"},{"type":"text","text":" repetitions of "},{"type":"codeVoice","code":"byte"},{"type":"text","text":"."}],"metadata":{"title":"init(repeating:count:)","symbolKind":"init","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore10ByteBufferV9repeating5countACs5UInt8V_Sitcfc","role":"symbol","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":", ","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(repeating:count:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(repeating:count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(repeating:count:)":{"type":"topic","title":"init(repeating:count:)","abstract":[{"type":"text","text":"Create a fresh "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" containing "},{"type":"codeVoice","code":"count"},{"type":"text","text":" repetitions of "},{"code":"byte","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(repeating:count:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"repeating","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niocore\/bytebuffer\/init(repeating:count:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"}}}