{"metadata":{"title":"readData(length:)","role":"symbol","extendedModule":"NIOCore","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readData","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?"}],"externalID":"s:7NIOCore10ByteBufferV19NIOFoundationCompatE8readData6length10Foundation0G0VSgSi_tF"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/readData(length:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Read "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes off this "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":", move the reader index forward by "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes and return the result"},{"type":"text","text":" "},{"type":"text","text":"as "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/readdata(length:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":"?"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" value containing "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there aren’t at least "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes readable."}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of bytes to be read from this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"length"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" will use a heuristic to decide whether to copy the bytes or whether to reference "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"text","text":"underlying storage from the returned "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" value. If you want manual control over the byte transferring"},{"type":"text","text":" "},{"type":"text","text":"behaviour, please use "},{"code":"readData(length:byteTransferStrategy:)","type":"codeVoice"},{"type":"text","text":"."}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/readData(length:)":{"role":"symbol","url":"\/documentation\/niocore\/bytebuffer\/readdata(length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/readData(length:)","title":"readData(length:)","abstract":[{"text":"Read ","type":"text"},{"type":"codeVoice","code":"length"},{"text":" bytes off this ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", move the reader index forward by ","type":"text"},{"type":"codeVoice","code":"length"},{"text":" bytes and return the result","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"}}}