{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This will allocate a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" with enough space to fit "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":" and potentially some extra space using"},{"type":"text","text":" "},{"type":"text","text":"the default allocator."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(bytes:)"},{"text":". Or if you want to write multiple items into the","type":"text"},{"text":" ","type":"text"},{"text":"buffer use ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"text":" to allocate a ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"type":"codeVoice","code":"writeBytes"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore10ByteBufferV5bytesACx_tcSTRzs5UInt8V7ElementRtzlufc","title":"init(bytes:)","symbolKind":"init","roleHeading":"Initializer","extendedModule":"NIOCore"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" containing the "},{"code":"bytes","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/init(bytes:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(bytes:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(bytes:)":{"url":"\/documentation\/niocore\/bytebuffer\/init(bytes:)","kind":"symbol","abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" containing the "},{"type":"codeVoice","code":"bytes"},{"text":".","type":"text"}],"title":"init(bytes:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(bytes:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"}}}