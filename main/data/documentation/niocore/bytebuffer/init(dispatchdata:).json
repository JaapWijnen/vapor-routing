{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)"},"sections":[],"abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the bytes contained in the given ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A4DataV","text":"DispatchData","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will allocate a new "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" with enough space to fit the bytes of the "},{"type":"codeVoice","code":"DispatchData"},{"type":"text","text":" and potentially"},{"type":"text","text":" "},{"type":"text","text":"some extra space using the default allocator."}]},{"items":[{"content":[{"inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":" we","type":"text"},{"text":" ","type":"text"},{"text":"recommend using ","type":"text"},{"code":"channel.allocator.buffer(dispatchData:)","type":"codeVoice"},{"text":". Or if you want to write multiple items into","type":"text"},{"text":" ","type":"text"},{"text":"the buffer use ","type":"text"},{"code":"channel.allocator.buffer(capacity: ...)","type":"codeVoice"},{"text":" to allocate a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of the right","type":"text"},{"text":" ","type":"text"},{"text":"size followed by a ","type":"text"},{"code":"writeDispatchData","type":"codeVoice"},{"text":" instead of using this method. This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"metadata":{"modules":[{"name":"NIOCore"}],"symbolKind":"init","title":"init(dispatchData:)","extendedModule":"NIOCore","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A4DataV","text":"DispatchData","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7NIOCore10ByteBufferV12dispatchDataAC8Dispatch0fE0V_tcfc","role":"symbol","roleHeading":"Initializer"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(dispatchData:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV","text":"DispatchData"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","url":"\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)","role":"symbol","title":"init(dispatchData:)","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the bytes contained in the given ","type":"text"},{"type":"codeVoice","code":"DispatchData"},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"}}}