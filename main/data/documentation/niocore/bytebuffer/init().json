{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Calling this constructor will not allocate because it will return a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" that wraps a shared storage","type":"text"},{"text":" ","type":"text"},{"text":"object. As soon as you write to the constructed buffer however, you will incur an allocation because a","type":"text"},{"text":" ","type":"text"},{"text":"copy-on-write will happen.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"info: If you have access to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":" it is","type":"text"},{"text":" ","type":"text"},{"text":"recommended using ","type":"text"},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: 0)"},{"text":". This allows SwiftNIO to do","type":"text"},{"text":" ","type":"text"},{"text":"accounting and optimisations of resources acquired for operations on a given ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" in the future.","type":"text"}]}]}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Return an empty "},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocated with ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"text":".","type":"text"}],"metadata":{"role":"symbol","externalID":"s:7NIOCore10ByteBufferVACycfc","title":"init()","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"init","roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init()":{"type":"topic","url":"\/documentation\/niocore\/bytebuffer\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init()","title":"init()","abstract":[{"type":"text","text":"Return an empty "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" allocated with "},{"type":"codeVoice","code":"ByteBufferAllocator()"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"}}}