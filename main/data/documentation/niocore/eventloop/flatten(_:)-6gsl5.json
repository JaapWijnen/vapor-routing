{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"futures","kind":"internalParam"},{"kind":"text","text":": ["},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]>"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" with all the resolved values of the input collection."}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An array of futures to flatten into a single ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":".","type":"text"}]}],"name":"futures"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" will fail if any of the provided futures fails. All remaining","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" objects will be ignored.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"]]},"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"flatten(_:)","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore9EventLoopP8AsyncKitE7flattenyAA0bC6FutureCySayqd__GGSayAGyqd__GGlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]>"}]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"text":"Returns a new ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that succeeds only when all the provided futures succeed.","type":"text"},{"text":" ","type":"text"},{"text":"The new ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" contains an array of results, maintaining same ordering as the futures.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"title":"EventLoop","url":"\/documentation\/niocore\/eventloop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]>"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","title":"flatten(_:)","abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains an array of results, maintaining same ordering as the futures."}]}}}