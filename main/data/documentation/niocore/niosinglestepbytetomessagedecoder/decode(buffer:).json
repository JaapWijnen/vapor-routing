{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSingleStepByteToMessageDecoder\/decode(buffer:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:7NIOCore33NIOSingleStepByteToMessageDecoderP6decode6buffer10InboundOutQzSgAA0D6BufferVz_tKF","required":true,"role":"symbol","modules":[{"name":"NIOCore"}],"symbolKind":"method","title":"decode(buffer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A message if one can be decoded or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it should be called again once more data is present in the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" from which we decode.","type":"text"}]}],"name":"buffer"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method will be called in a loop until either the input ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" has nothing to read left or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is returned. If non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is","type":"text"},{"text":" ","type":"text"},{"text":"returned and the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" contains more readable bytes, this method will immediately be invoked again, unless ","type":"text"},{"type":"codeVoice","code":"decodeLast"},{"text":" needs","type":"text"},{"text":" ","type":"text"},{"text":"to be invoked instead.","type":"text"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/niocore\/niosinglestepbytetomessagedecoder\/decode(buffer:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Decode from a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSingleStepByteToMessageDecoder"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSingleStepByteToMessageDecoder":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSingleStepByteToMessageDecoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSingleStepByteToMessageDecoder"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOSingleStepByteToMessageDecoder"}],"url":"\/documentation\/niocore\/niosinglestepbytetomessagedecoder","abstract":[{"type":"text","text":"A simplified version of "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" that can generate zero or one messages for each invocation of "},{"code":"decode","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"decodeLast","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Having ","type":"text"},{"code":"decode","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"decodeLast","type":"codeVoice"},{"text":" return an optional message avoids re-entrancy problems, since the functions relinquish exclusive access","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" when returning. This allows for greatly simplified processing.","type":"text"}],"title":"NIOSingleStepByteToMessageDecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSingleStepByteToMessageDecoder/decode(buffer:)":{"url":"\/documentation\/niocore\/niosinglestepbytetomessagedecoder\/decode(buffer:)","kind":"symbol","required":true,"type":"topic","abstract":[{"text":"Decode from a ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut"},{"kind":"text","text":"?"}],"title":"decode(buffer:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSingleStepByteToMessageDecoder\/decode(buffer:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"}}}