{"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"joinGroup(_:interface:promise:)","role":"symbol","externalID":"s:7NIOCore16MulticastChannelP9joinGroup_9interface7promiseyAA13SocketAddressO_AA19NIONetworkInterfaceCSgAA16EventLoopPromiseVyytGSgtF","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinGroup"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interface"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19NIONetworkInterfaceC","kind":"typeIdentifier","text":"NIONetworkInterface"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"platforms":[],"required":true},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinGroup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"group"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interface"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIONetworkInterface","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19NIONetworkInterfaceC","text":"NIONetworkInterface"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The IP address corresponding to the relevant multicast group.","type":"text"}],"type":"paragraph"}],"name":"group"},{"content":[{"inlineContent":[{"text":"The interface on which to join the given group, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" to allow the kernel to choose.","type":"text"}],"type":"paragraph"}],"name":"interface"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be notified once the operation is complete, or","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if you are not interested in the result of the operation.","type":"text"}]}],"name":"promise"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel\/joinGroup(_:interface:promise:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Request that the "},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" join the multicast group given by "},{"code":"group","type":"codeVoice"},{"type":"text","text":" on the interface"},{"type":"text","text":" "},{"type":"text","text":"given by "},{"code":"interface","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/multicastchannel\/joingroup(_:interface:promise:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel/joinGroup(_:interface:promise:)":{"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"joinGroup"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"interface","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19NIONetworkInterfaceC","text":"NIONetworkInterface","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel\/joinGroup(_:interface:promise:)","title":"joinGroup(_:interface:promise:)","abstract":[{"type":"text","text":"Request that the "},{"type":"codeVoice","code":"MulticastChannel"},{"type":"text","text":" join the multicast group given by "},{"code":"group","type":"codeVoice"},{"type":"text","text":" on the interface"},{"type":"text","text":" "},{"text":"given by ","type":"text"},{"code":"interface","type":"codeVoice"},{"text":".","type":"text"}],"deprecated":true,"type":"topic","url":"\/documentation\/niocore\/multicastchannel\/joingroup(_:interface:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SocketAddress","kind":"identifier"}],"url":"\/documentation\/niocore\/socketaddress","type":"topic","title":"SocketAddress","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIONetworkInterface":{"title":"NIONetworkInterface","url":"\/documentation\/niocore\/nionetworkinterface","role":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIONetworkInterface"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIONetworkInterface","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A representation of a single network interface on a system."}],"navigatorTitle":[{"kind":"identifier","text":"NIONetworkInterface"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"abstract":[{"type":"text","text":"A promise to provide a result later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"title":"EventLoopPromise","type":"topic","url":"\/documentation\/niocore\/eventlooppromise","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EventLoopPromise","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"url":"\/documentation\/niocore\/multicastchannel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MulticastChannel"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","navigatorTitle":[{"kind":"identifier","text":"MulticastChannel"}],"title":"MulticastChannel","abstract":[{"type":"text","text":"A "},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"type":"text","text":"groups."}],"kind":"symbol"}}}