{"abstract":[{"text":"Sets the socket option IP_MULTICAST_TTL to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIPMulticastTTL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s13CUnsignedChara","kind":"typeIdentifier","text":"CUnsignedChar"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that fires when the option has been set,","type":"text"},{"text":" ","type":"text"},{"text":"or if an error has occurred.","type":"text"}]}]},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set IP_MULTICAST_TTL to."}]}]}],"kind":"parameters"}],"metadata":{"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore20SocketOptionProviderPAAE17setIPMulticastTTLyAA15EventLoopFutureCyytGs5UInt8VF","roleHeading":"Instance Method","role":"symbol","extendedModule":"NIOCore","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastTTL","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s13CUnsignedChara","text":"CUnsignedChar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"setIPMulticastTTL(_:)","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/niocore\/socketoptionprovider\/setipmulticastttl(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastTTL(_:)":{"title":"setIPMulticastTTL(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Sets the socket option IP_MULTICAST_TTL to ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastttl(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastTTL","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13CUnsignedChara","text":"CUnsignedChar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider":{"url":"\/documentation\/niocore\/socketoptionprovider","title":"SocketOptionProvider","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocketOptionProvider","kind":"identifier"}],"navigatorTitle":[{"text":"SocketOptionProvider","kind":"identifier"}],"type":"topic","abstract":[{"text":"This protocol defines an object, most commonly a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":", that supports","type":"text"},{"text":" ","type":"text"},{"text":"setting and getting socket options (via ","type":"text"},{"code":"setsockopt","type":"codeVoice"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"getsockopt"},{"text":" or similar).","type":"text"},{"text":" ","type":"text"},{"text":"It provides a strongly typed API that makes working with larger, less-common","type":"text"},{"text":" ","type":"text"},{"text":"socket options easier than the ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" API allows."}],"role":"symbol"}}}