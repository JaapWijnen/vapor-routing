{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/init(readTimeout:writeTimeout:allTimeout:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/allTimeout","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/readTimeout","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/writeTimeout"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundOut"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/IdleStateEvent"]},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/RemovableChannelHandler-Implementations"],"generated":true,"title":"Default Implementations"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdleStateHandler"}],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while."}],"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdleStateHandler"}],"title":"IdleStateHandler","symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IdleStateHandler"}],"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore16IdleStateHandlerC"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/idlestatehandler"]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/init(readTimeout:writeTimeout:allTimeout:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/init(readTimeout:writeTimeout:allTimeout:)","url":"\/documentation\/niocore\/idlestatehandler\/init(readtimeout:writetimeout:alltimeout:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"readTimeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":"?, ","kind":"text"},{"text":"writeTimeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":"?, ","kind":"text"},{"text":"allTimeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":"?)","kind":"text"}],"abstract":[],"title":"init(readTimeout:writeTimeout:allTimeout:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/RemovableChannelHandler-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/RemovableChannelHandler-Implementations","title":"RemovableChannelHandler Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/niocore\/idlestatehandler\/removablechannelhandler-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/readTimeout":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/readTimeout","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readTimeout","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"readTimeout","role":"symbol","abstract":[],"url":"\/documentation\/niocore\/idlestatehandler\/readtimeout","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/allTimeout":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/allTimeout","role":"symbol","type":"topic","title":"allTimeout","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"allTimeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":"?"}],"abstract":[],"url":"\/documentation\/niocore\/idlestatehandler\/alltimeout","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/ChannelInboundHandler-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/niocore\/idlestatehandler\/channelinboundhandler-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/OutboundOut":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundOut","role":"symbol","type":"topic","title":"IdleStateHandler.OutboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/idlestatehandler\/outboundout","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelReadComplete(context:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelReadComplete(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelReadComplete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"channelReadComplete(context:)","role":"symbol","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"ChannelOptions.autoRead"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" no further read attempt will be made until "},{"type":"codeVoice","code":"ChannelHandlerContext.read"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Channel.read"},{"type":"text","text":" is explicitly called."}],"url":"\/documentation\/niocore\/idlestatehandler\/channelreadcomplete(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/write(context:data:promise:)":{"title":"write(context:data:promise:)","role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/write(context:data:promise:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelActive(context:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelActive(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"text":")","kind":"text"}],"title":"channelActive(context:)","role":"symbol","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become active, and is able to send and receive data."}],"url":"\/documentation\/niocore\/idlestatehandler\/channelactive(context:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/writeTimeout":{"title":"writeTimeout","role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/writetimeout","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/writeTimeout","abstract":[],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeTimeout","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/handlerRemoved(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerRemoved(context:)","role":"symbol","type":"topic","title":"handlerRemoved(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/idlestatehandler\/handlerremoved(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/handlerAdded(context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"role":"symbol","title":"handlerAdded(context:)","kind":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/handleradded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/handlerAdded(context:)","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is added to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/IdleStateEvent":{"title":"IdleStateHandler.IdleStateEvent","role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/idlestateevent","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/IdleStateEvent","navigatorTitle":[{"kind":"identifier","text":"IdleStateEvent"}],"abstract":[{"type":"text","text":"A user event triggered by IdleStateHandler when a Channel is idle."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdleStateEvent"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IdleStateHandler"}],"type":"topic","kind":"symbol","abstract":[{"text":"Triggers an IdleStateEvent when a Channel has not performed read, write, or both operation for a while.","type":"text"}],"role":"symbol","title":"IdleStateHandler","url":"\/documentation\/niocore\/idlestatehandler","navigatorTitle":[{"kind":"identifier","text":"IdleStateHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/InboundIn":{"url":"\/documentation\/niocore\/idlestatehandler\/inboundin","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"kind":"symbol","title":"IdleStateHandler.InboundIn","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/channelRead(context:data:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/channelRead(context:data:)","role":"symbol","type":"topic","title":"channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"url":"\/documentation\/niocore\/idlestatehandler\/channelread(context:data:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/ChannelOutboundHandler-Implementations":{"type":"topic","kind":"article","abstract":[],"role":"collectionGroup","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niocore\/idlestatehandler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/InboundOut":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/InboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"title":"IdleStateHandler.InboundOut","role":"symbol","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/idlestatehandler\/inboundout","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/IdleStateHandler/OutboundIn":{"title":"IdleStateHandler.OutboundIn","role":"symbol","url":"\/documentation\/niocore\/idlestatehandler\/outboundin","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/IdleStateHandler\/OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]}}}