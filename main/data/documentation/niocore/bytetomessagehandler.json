{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Decoder","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7NIOCore20ByteToMessageDecoderP","text":"ByteToMessageDecoder","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"Most importantly, ","type":"text"},{"code":"ByteToMessageHandler","type":"codeVoice"},{"text":" handles the tricky buffer management for you and flattens out all","type":"text"},{"text":" ","type":"text"},{"text":"re-entrancy on ","type":"text"},{"code":"channelRead","type":"codeVoice"},{"text":" that may happen in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/niocore\/bytetomessagehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A handler which turns a given "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that can then be added to a"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Class","title":"ByteToMessageHandler","role":"symbol","externalID":"s:7NIOCore20ByteToMessageHandlerC","navigatorTitle":[{"kind":"identifier","text":"ByteToMessageHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteToMessageHandler"}],"symbolKind":"class"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageDecoder":{"kind":"symbol","title":"ByteToMessageDecoder","role":"symbol","url":"\/documentation\/niocore\/bytetomessagedecoder","type":"topic","navigatorTitle":[{"text":"ByteToMessageDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageDecoder","abstract":[{"code":"ByteToMessageDecoder","type":"codeVoice"},{"text":"s decode bytes in a stream-like fashion from ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" to another message type.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageDecoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundOut":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundOut","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundout","type":"topic","title":"ByteToMessageHandler.InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Decoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","title":"RemovableChannelHandler","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that can be dynamically removed from a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" whilst","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is operating normally.","type":"text"},{"text":" ","type":"text"},{"text":"A ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" is required to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" (using","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":") as soon as possible.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"WriteObservingByteToMessageDecoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/RemovableChannelHandler-Implementations":{"type":"topic","abstract":[],"kind":"article","url":"\/documentation\/niocore\/bytetomessagehandler\/removablechannelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/RemovableChannelHandler-Implementations","title":"RemovableChannelHandler Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelInboundHandler-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelInboundHandler-Implementations","kind":"article","type":"topic","title":"_ChannelInboundHandler Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/_channelinboundhandler-implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:)":{"url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:)","kind":"symbol","title":"init(_:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:)","type":"topic","abstract":[],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelHandler-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelHandler-Implementations","url":"\/documentation\/niocore\/bytetomessagehandler\/channelhandler-implementations","role":"collectionGroup","title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niocore\/bytetomessagehandler\/channelinboundhandler-implementations","abstract":[],"title":"ChannelInboundHandler Implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler":{"type":"topic","abstract":[{"text":"A handler which turns a given ","type":"text"},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that can then be added to a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/bytetomessagehandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler","title":"ByteToMessageHandler","navigatorTitle":[{"text":"ByteToMessageHandler","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteToMessageHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundHandler","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"ChannelInboundHandler","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"text":"ChannelInboundHandler","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/InboundIn":{"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"title":"ByteToMessageHandler.InboundIn","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler\/inboundin","kind":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ByteToMessageDecoder"},{"type":"text","text":"."}]},"title":"ChannelHandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}],"role":"symbol","url":"\/documentation\/niocore\/channelhandler","type":"topic","abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"type":"text","text":"never"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/_ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/_ChannelOutboundHandler-Implementations","role":"collectionGroup","url":"\/documentation\/niocore\/bytetomessagehandler\/_channeloutboundhandler-implementations","kind":"article","title":"_ChannelOutboundHandler Implementations","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/ChannelOutboundHandler-Implementations":{"type":"topic","url":"\/documentation\/niocore\/bytetomessagehandler\/channeloutboundhandler-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/ChannelOutboundHandler-Implementations","kind":"article","title":"ChannelOutboundHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteToMessageHandler/init(_:maximumBufferSize:)":{"title":"init(_:maximumBufferSize:)","url":"\/documentation\/niocore\/bytetomessagehandler\/init(_:maximumbuffersize:)","abstract":[{"text":"Initialize a ","type":"text"},{"code":"ByteToMessageHandler","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximumBufferSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteToMessageHandler\/init(_:maximumBufferSize:)","type":"topic"}}}