{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"preciseIdentifier":"s:7NIOCore22ChannelOutboundInvokerP","text":"ChannelOutboundInvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"All operations on ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" are thread-safe.","type":"text"}]}],"type":"aside"},{"inlineContent":[{"text":"In SwiftNIO, all I\/O operations are asynchronous and hence all operations on ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" are asynchronous too. This means","type":"text"},{"text":" ","type":"text"},{"text":"that all I\/O operations will return immediately, usually before the work has been completed. The ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"passed to or returned by the operations are used to retrieve the result of an operation after it has completed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" owns its ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" which handles all I\/O events and requests associated with the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/niocore\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm"],"title":"Instance Methods"}],"abstract":[{"text":"A ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such","type":"text"},{"text":" ","type":"text"},{"text":"as read, write, connect, and bind.","type":"text"}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"Channel","kind":"identifier"}],"externalID":"s:7NIOCore7ChannelP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"title":"Channel","roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"NIOCore"}],"role":"symbol"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"type":"codeVoice","code":"ChannelCore"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"title":"ChannelOutboundInvoker","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/syncOptions-17fda":{"url":"\/documentation\/niocore\/channel\/syncoptions-17fda","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOSynchronousChannelOptions","preciseIdentifier":"s:7NIOCore28NIOSynchronousChannelOptionsP"},{"kind":"text","text":"?"}],"type":"topic","required":true,"title":"syncOptions","abstract":[{"type":"text","text":"Returns a view of the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" exposing synchronous versions of "},{"type":"codeVoice","code":"setOption"},{"type":"text","text":" and "},{"type":"codeVoice","code":"getOption"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The default implementation returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations must opt in to"},{"type":"text","text":" "},{"type":"text","text":"support this behavior."}],"role":"symbol","defaultImplementations":1,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/syncOptions-17fda"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/allocator":{"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" allocator. This is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"the only"}]},{"text":" supported way of allocating ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":"s to be used with this ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"title":"allocator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/allocator","url":"\/documentation\/niocore\/channel\/allocator","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/getOption(_:)-5gug6":{"url":"\/documentation\/niocore\/channel\/getoption(_:)-5gug6","role":"symbol","abstract":[{"text":"Get the value of ","type":"text"},{"code":"option","type":"codeVoice"},{"text":" for this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/getOption(_:)-5gug6","type":"topic","title":"getOption(_:)","kind":"symbol","required":true,"defaultImplementations":1},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)","role":"symbol","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureCommonHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ConnectionChannelConfigurator","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)?, (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client.","type":"text"}],"kind":"symbol","title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MulticastChannel":{"url":"\/documentation\/niocore\/multicastchannel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MulticastChannel"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MulticastChannel","navigatorTitle":[{"kind":"identifier","text":"MulticastChannel"}],"title":"MulticastChannel","abstract":[{"type":"text","text":"A "},{"code":"MulticastChannel","type":"codeVoice"},{"type":"text","text":" is a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" that supports IP multicast operations: that is, a channel that can join multicast"},{"type":"text","text":" "},{"type":"text","text":"groups."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isWritable":{"required":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isWritable","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"isWritable","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isWritable","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently writable."}],"url":"\/documentation\/niocore\/channel\/iswritable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-9jslm":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-9jslm","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-9jslm","abstract":[{"text":"Shortcut for calling ","type":"text"},{"type":"codeVoice","code":"write"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"flush"},{"text":".","type":"text"}],"kind":"symbol","title":"writeAndFlush(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/write(_:)":{"url":"\/documentation\/niocore\/channel\/write(_:)","role":"symbol","abstract":[{"text":"Write data into the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":", automatically wrapping with ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"title":"write(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/write(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/registerAlreadyConfigured0(promise:)":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/registerAlreadyConfigured0(promise:)","title":"registerAlreadyConfigured0(promise:)","url":"\/documentation\/niocore\/channel\/registeralreadyconfigured0(promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAlreadyConfigured0"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)":{"title":"configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureCommonHTTPServerPipeline(h2ConnectionChannelConfigurator:targetWindowSize:_:)","url":"\/documentation\/niocore\/channel\/configurecommonhttpserverpipeline(h2connectionchannelconfigurator:targetwindowsize:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureCommonHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ConnectionChannelConfigurator"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?, "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to speak either HTTP or HTTP\/2 according to what can be negotiated with the client."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/pipeline":{"role":"symbol","title":"pipeline","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipeline","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"}],"url":"\/documentation\/niocore\/channel\/pipeline","type":"topic","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" which handles all I\/O events and requests associated with this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/pipeline"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/remoteAddress":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel\/remoteaddress","abstract":[{"text":"The remote peer’s ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/remoteAddress","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"remoteAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)":{"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreamstateinitializer:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","text":"ParserMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialLocalSettings"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","text":"HTTP2Setting"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":", "},{"kind":"externalParam","text":"targetWindowSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inboundStreamStateInitializer"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","text":"HTTP2StreamID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">)?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","text":"HTTP2StreamMultiplexer"},{"kind":"text","text":">"}],"deprecated":true,"kind":"symbol","title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamStateInitializer:)","abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak HTTP\/2.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/localAddress":{"kind":"symbol","url":"\/documentation\/niocore\/channel\/localaddress","abstract":[{"type":"text","text":"The local "},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/localAddress","type":"topic","title":"localAddress","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"localAddress","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"?"}],"required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/nioSSL_tlsVersion()":{"title":"nioSSL_tlsVersion()","url":"\/documentation\/niocore\/channel\/niossl_tlsversion()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/nioSSL_tlsVersion()","abstract":[{"type":"text","text":"API to extract the "},{"code":"TLSVersion","type":"codeVoice"},{"type":"text","text":" from an EventLoopFuture."}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nioSSL_tlsVersion"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6NIOSSL10TLSVersionO","text":"TLSVersion","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/parent":{"url":"\/documentation\/niocore\/channel\/parent","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/parent","title":"parent","required":true,"abstract":[{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s are hierarchical and might have a parent "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" hierarchies are in use for certain"},{"type":"text","text":" "},{"type":"text","text":"protocols such as HTTP\/2."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parent"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":"?"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"type":"topic","abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/closeFuture":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeFuture"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/closeFuture","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"closeFuture"},{"type":"text","text":" will fire when the "},{"code":"Channel","type":"codeVoice"},{"text":" has been closed.","type":"text"}],"kind":"symbol","role":"symbol","required":true,"type":"topic","url":"\/documentation\/niocore\/channel\/closefuture","title":"closeFuture"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/isActive":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/isActive","role":"symbol","title":"isActive","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/niocore\/channel\/isactive","type":"topic","abstract":[{"type":"text","text":"Returns if this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is currently active. Active is defined as the period of time after the"},{"type":"text","text":" "},{"type":"codeVoice","code":"channelActive"},{"type":"text","text":" and before "},{"code":"channelInactive","type":"codeVoice"},{"text":" has fired. The main use for this is to know if ","type":"text"},{"code":"channelActive","type":"codeVoice"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"channelInactive","type":"codeVoice"},{"text":" can be expected next when ","type":"text"},{"code":"handlerAdded","type":"codeVoice"},{"text":" was received.","type":"text"}],"required":true,"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/setOption(_:value:)-2fzo9":{"defaultImplementations":1,"abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"option"},{"type":"text","text":" to "},{"type":"codeVoice","code":"value"},{"type":"text","text":" on this "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/setOption(_:value:)-2fzo9","title":"setOption(_:value:)","role":"symbol","url":"\/documentation\/niocore\/channel\/setoption(_:value:)-2fzo9","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"setOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC","text":"NIOHTTP2Handler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO","text":"ParserMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV","text":"HTTP2Setting","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"targetWindowSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inboundStreamInitializer","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">)?) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC","text":"HTTP2StreamMultiplexer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","abstract":[{"text":"Configures a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" to speak HTTP\/2.","type":"text"}],"title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:targetWindowSize:inboundStreamInitializer:)","url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:targetwindowsize:inboundstreaminitializer:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)":{"url":"\/documentation\/niocore\/channel\/configurehttp2pipeline(mode:initiallocalsettings:position:inboundstreamstateinitializer:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","deprecated":true,"abstract":[{"type":"text","text":"Configures a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" to speak HTTP\/2."}],"title":"configureHTTP2Pipeline(mode:initialLocalSettings:position:inboundStreamStateInitializer:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2Pipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTP2Handler","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC"},{"text":".","kind":"text"},{"text":"ParserMode","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP20A7HandlerC10ParserModeO"},{"text":", ","kind":"text"},{"text":"initialLocalSettings","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTP2Setting","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP212HTTP2SettingV"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"text":".","kind":"text"},{"text":"Position","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"text":", ","kind":"text"},{"text":"inboundStreamStateInitializer","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"HTTP2StreamID","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)?) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"HTTP2StreamMultiplexer","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP222HTTP2StreamMultiplexerC"},{"text":">","kind":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/writeAndFlush(_:)-6zx58":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/writeAndFlush(_:)-6zx58","url":"\/documentation\/niocore\/channel\/writeandflush(_:)-6zx58","title":"writeAndFlush(_:)","abstract":[{"type":"text","text":"Write and flush data into the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":", automatically wrapping with "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]}}}