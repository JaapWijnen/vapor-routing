{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/channelWritabilityChanged(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/read(context:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/RemovableChannelHandler-Implementations"],"title":"Default Implementations"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackPressureHandler","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/niocore\/backpressurehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"NIOCore"}],"roleHeading":"Class","title":"BackPressureHandler","navigatorTitle":[{"text":"BackPressureHandler","kind":"identifier"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackPressureHandler","kind":"identifier"}],"externalID":"s:7NIOCore19BackPressureHandlerC","role":"symbol"},"abstract":[{"type":"text","text":"ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough."},{"type":"text","text":" "},{"type":"text","text":"It will start reading again once pending data was written."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/RemovableChannelHandler-Implementations":{"abstract":[],"url":"\/documentation\/niocore\/backpressurehandler\/removablechannelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/RemovableChannelHandler-Implementations","kind":"article","title":"RemovableChannelHandler Implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelOutboundHandler-Implementations":{"abstract":[],"url":"\/documentation\/niocore\/backpressurehandler\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelOutboundHandler-Implementations","kind":"article","title":"ChannelOutboundHandler Implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/OutboundIn":{"abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"url":"\/documentation\/niocore\/backpressurehandler\/outboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundIn","kind":"symbol","title":"BackPressureHandler.OutboundIn","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelHandler-Implementations":{"url":"\/documentation\/niocore\/backpressurehandler\/channelhandler-implementations","type":"topic","role":"collectionGroup","title":"ChannelHandler Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niocore\/backpressurehandler\/channelinboundhandler-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/ChannelInboundHandler-Implementations","kind":"article","role":"collectionGroup","title":"ChannelInboundHandler Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"navigatorTitle":[{"text":"ChannelOutboundHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol","title":"ChannelOutboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","url":"\/documentation\/niocore\/channeloutboundhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/InboundOut":{"kind":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"title":"BackPressureHandler.InboundOut","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"url":"\/documentation\/niocore\/backpressurehandler\/inboundout","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BackPressureHandler","kind":"identifier"}],"navigatorTitle":[{"text":"BackPressureHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"ChannelHandler implementation which enforces back-pressure by stopping to read from the remote peer when it cannot write back fast enough."},{"type":"text","text":" "},{"type":"text","text":"It will start reading again once pending data was written."}],"type":"topic","url":"\/documentation\/niocore\/backpressurehandler","kind":"symbol","role":"symbol","title":"BackPressureHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"url":"\/documentation\/niocore\/channelhandler","role":"symbol","title":"ChannelHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","abstract":[{"text":"You should ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" implement this protocol directly. Please implement one of its sub-protocols.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/channelWritabilityChanged(context:)":{"url":"\/documentation\/niocore\/backpressurehandler\/channelwritabilitychanged(context:)","type":"topic","role":"symbol","title":"channelWritabilityChanged(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelWritabilityChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The writability state of the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has changed, either because it has buffered more data than the writability high water mark, or because the amount of buffered data has dropped below the writability low water mark."},{"type":"text","text":" "},{"type":"text","text":"You can check the state with "},{"type":"codeVoice","code":"Channel.isWritable"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/channelWritabilityChanged(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"url":"\/documentation\/niocore\/channelinboundhandler","role":"symbol","title":"ChannelInboundHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","abstract":[{"code":"ChannelHandler","type":"codeVoice"},{"text":" which handles inbound I\/O events for a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/read(context:)":{"url":"\/documentation\/niocore\/backpressurehandler\/read(context:)","type":"topic","role":"symbol","title":"read(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" perform a read when data is ready. The read operation will signal that we are ready to read more data."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/read(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/init()":{"abstract":[],"url":"\/documentation\/niocore\/backpressurehandler\/init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/init()","kind":"symbol","title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemovableChannelHandler"}],"url":"\/documentation\/niocore\/removablechannelhandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemovableChannelHandler"}],"title":"RemovableChannelHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/handlerRemoved(context:)":{"abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is removed from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/backpressurehandler\/handlerremoved(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/handlerRemoved(context:)","kind":"symbol","title":"handlerRemoved(context:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/InboundIn":{"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niocore\/backpressurehandler\/inboundin","type":"topic","role":"symbol","title":"BackPressureHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/BackPressureHandler/OutboundOut":{"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"url":"\/documentation\/niocore\/backpressurehandler\/outboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/BackPressureHandler\/OutboundOut","kind":"symbol","title":"BackPressureHandler.OutboundOut","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"type":"topic"}}}