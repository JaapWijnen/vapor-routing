{"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/acceptbackoffhandler\/inboundin"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AcceptBackoffHandler\/InboundIn"},"metadata":{"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"roleHeading":"Type Alias","title":"AcceptBackoffHandler.InboundIn","externalID":"s:7NIOCore20AcceptBackoffHandlerC9InboundIna","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol","modules":[{"name":"NIOCore"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AcceptBackoffHandler"]]},"sections":[],"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/AcceptBackoffHandler":{"kind":"symbol","navigatorTitle":[{"text":"AcceptBackoffHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AcceptBackoffHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AcceptBackoffHandler","kind":"identifier"}],"url":"\/documentation\/niocore\/acceptbackoffhandler","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" that implements a backoff for a ","type":"text"},{"code":"ServerChannel","type":"codeVoice"},{"text":" when accept produces an ","type":"text"},{"code":"IOError","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"These errors are often recoverable by reducing the rate at which we call accept.","type":"text"}],"title":"AcceptBackoffHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/AcceptBackoffHandler/InboundIn":{"role":"symbol","url":"\/documentation\/niocore\/acceptbackoffhandler\/inboundin","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/AcceptBackoffHandler\/InboundIn","type":"topic","title":"AcceptBackoffHandler.InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"}}}