{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Channel","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"NIOClientTCPBootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that initializes the provided "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The connected "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" will operate on "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" as inbound and "},{"type":"codeVoice","code":"IOData"},{"type":"text","text":" as outbound messages."}],"type":"paragraph"},{"style":"warning","type":"aside","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" closure may be invoked ","type":"text"},{"inlineContent":[{"type":"text","text":"multiple times"}],"type":"emphasis"},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s within ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":". The reason ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","type":"reference"},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"might be called multiple times and it’s important not to share stateful ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in more","type":"text"},{"text":" ","type":"text"},{"text":"than one ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap","kind":"typeIdentifier"}],"role":"symbol","symbolKind":"method","externalID":"s:7NIOCore21NIOClientTCPBootstrapV18channelInitializeryAcA15EventLoopFutureCyytGAA7Channel_pcF","modules":[{"name":"NIOCore"}],"title":"channelInitializer(_:)"},"abstract":[{"text":"Initialize the connected ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"initializer"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap":{"abstract":[{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"type":"text","text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","kind":"symbol","title":"NIOClientTCPBootstrap","url":"\/documentation\/niocore\/nioclienttcpbootstrap","role":"symbol","navigatorTitle":[{"text":"NIOClientTCPBootstrap","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","titleInlineContent":[{"type":"emphasis","inlineContent":[{"text":"Happy Eyeballs","type":"text"}]}],"title":"Happy Eyeballs","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap/channelInitializer(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","url":"\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">) -> ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV"}],"kind":"symbol","abstract":[{"text":"Initialize the connected ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"type":"text","text":" with "},{"code":"initializer","type":"codeVoice"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","title":"channelInitializer(_:)","role":"symbol"}}}