{"metadata":{"roleHeading":"Instance Method","role":"symbol","title":"buffer(capacity:)","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore19ByteBufferAllocatorV6buffer8capacityAA0bC0VSi_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"symbolKind":"method"},"abstract":[{"type":"text","text":"Request a freshly allocated "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" of size "},{"code":"capacity","type":"codeVoice"},{"type":"text","text":" or larger."}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","text":"ByteBuffer","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The initial capacity of the returned ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":".","type":"text"}]}],"name":"capacity"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"The passed "},{"type":"codeVoice","code":"capacity"},{"text":" is the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":"’s initial capacity, it will grow automatically if necessary.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"type":"text","text":", this function will not allocate. If you want to trigger an allocation immediately,"},{"type":"text","text":" "},{"type":"text","text":"also call "},{"type":"codeVoice","code":".clear()"},{"type":"text","text":"."}]}],"type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebufferallocator\/buffer(capacity:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(capacity:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"title":"ByteBufferAllocator","url":"\/documentation\/niocore\/bytebufferallocator","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","role":"symbol","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"title":"ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","role":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator/buffer(capacity:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"abstract":[{"text":"Request a freshly allocated ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" of size ","type":"text"},{"type":"codeVoice","code":"capacity"},{"text":" or larger.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/buffer(capacity:)","title":"buffer(capacity:)","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator\/buffer(capacity:)"}}}