{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead0"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The data that was read, wrapped in a ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}]}],"name":"data"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore\/channelRead0(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelcore\/channelread0(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"required":true,"externalID":"s:7NIOCore11ChannelCoreP12channelRead0yyAA6NIOAnyVF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"channelRead0"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"role":"symbol","modules":[{"name":"NIOCore"}],"symbolKind":"method","title":"channelRead0(_:)","roleHeading":"Instance Method"},"abstract":[{"text":"Called when data was read from the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" but it was not consumed by any ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelCore/channelRead0(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore\/channelRead0(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead0"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":")"}],"role":"symbol","title":"channelRead0(_:)","abstract":[{"text":"Called when data was read from the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" but it was not consumed by any ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"required":true,"url":"\/documentation\/niocore\/channelcore\/channelread0(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelCore":{"type":"topic","title":"ChannelCore","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelCore"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelCore","kind":"symbol","abstract":[{"type":"text","text":"The core "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" methods that are for internal use of the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementation only."}],"url":"\/documentation\/niocore\/channelcore","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelCore"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"title":"NIOAny","type":"topic","url":"\/documentation\/niocore\/nioany","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"kind":"symbol"}}}