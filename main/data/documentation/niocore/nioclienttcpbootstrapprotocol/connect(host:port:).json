{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"code":"EventLoopFuture<Channel>","type":"codeVoice"},{"type":"text","text":" to deliver the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" when connected."}]}],"kind":"content"},{"parameters":[{"name":"host","content":[{"type":"paragraph","inlineContent":[{"text":"The host to connect to.","type":"text"}]}]},{"name":"port","content":[{"type":"paragraph","inlineContent":[{"text":"The port to connect to.","type":"text"}]}]}],"kind":"parameters"}],"kind":"symbol","abstract":[{"type":"text","text":"Specify the "},{"type":"codeVoice","code":"host"},{"type":"text","text":" and "},{"type":"codeVoice","code":"port"},{"type":"text","text":" to connect to for the TCP "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will be established."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":">"}],"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore29NIOClientTCPBootstrapProtocolP7connect4host4portAA15EventLoopFutureCyAA7Channel_pGSS_SitF","symbolKind":"method","roleHeading":"Instance Method","title":"connect(host:port:)","required":true,"role":"symbol"},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/connect(host:port:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/connect(host:port:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol":{"navigatorTitle":[{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"title":"NIOClientTCPBootstrapProtocol","abstract":[{"code":"NIOClientTCPBootstrapProtocol","type":"codeVoice"},{"type":"text","text":" is implemented by various underlying transport mechanisms. Typically,"},{"type":"text","text":" "},{"type":"text","text":"this will be the BSD Sockets API implemented by "},{"code":"ClientBootstrap","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol","type":"topic","role":"symbol","url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOClientTCPBootstrapProtocol"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrapProtocol/connect(host:port:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrapProtocol\/connect(host:port:)","role":"symbol","abstract":[{"text":"Specify the ","type":"text"},{"code":"host","type":"codeVoice"},{"type":"text","text":" and "},{"code":"port","type":"codeVoice"},{"type":"text","text":" to connect to for the TCP "},{"type":"codeVoice","code":"Channel"},{"text":" that will be established.","type":"text"}],"title":"connect(host:port:)","url":"\/documentation\/niocore\/nioclienttcpbootstrapprotocol\/connect(host:port:)","kind":"symbol","type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"}}}