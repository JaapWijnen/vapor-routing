{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"Creation-of-a-pipeline","level":1,"type":"heading","text":"Creation of a pipeline"},{"type":"paragraph","inlineContent":[{"text":"Each ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" has its own ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" and it is created automatically when a new ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is created.","type":"text"}]},{"anchor":"How-an-event-flows-in-a-pipeline","level":1,"type":"heading","text":"How an event flows in a pipeline"},{"type":"paragraph","inlineContent":[{"text":"The following diagram describes how I\/O events are typically processed by ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"An I\/O event is handled by either a ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" ","type":"text"},{"text":"and is forwarded to the next handler in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" by calling the event propagation methods defined in","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":", such as ","type":"text"},{"code":"ChannelHandlerContext.fireChannelRead","type":"codeVoice"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext.write","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":null,"code":["                                                   I\/O Request","                                                   via `Channel` or","                                                   `ChannelHandlerContext`","                                                     |"," +---------------------------------------------------+---------------+"," |                           ChannelPipeline         |               |"," |                                TAIL              \\|\/              |"," |    +---------------------+            +-----------+----------+    |"," |    | Inbound Handler  N  |            | Outbound Handler  1  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler N-1 |            | Outbound Handler  2  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  .               |"," |               .                                   .               |"," | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()|"," |        [ method call]                       [method call]         |"," |               .                                   .               |"," |               .                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  2  |            | Outbound Handler M-1 |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\                                  |               |"," |               |                                  \\|\/              |"," |    +----------+----------+            +-----------+----------+    |"," |    | Inbound Handler  1  |            | Outbound Handler  M  |    |"," |    +----------+----------+            +-----------+----------+    |"," |              \/|\\             HEAD                 |               |"," +---------------+-----------------------------------+---------------+","                 |                                  \\|\/"," +---------------+-----------------------------------+---------------+"," |               |                                   |               |"," |       [ Socket.read ]                    [ Socket.write ]         |"," |                                                                   |"," |  SwiftNIO Internal I\/O Threads (Transport Implementation)         |"," +-------------------------------------------------------------------+"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An inbound event is handled by the inbound handlers in the head-to-tail direction as shown on the left side of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. An inbound handler usually handles the inbound data generated by the I\/O thread on the bottom of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. The inbound data is often read from a remote peer via the actual input operation such as"},{"type":"text","text":" "},{"type":"codeVoice","code":"Socket.read"},{"type":"text","text":". If an inbound event goes beyond the tail inbound handler, it is discarded"},{"type":"text","text":" "},{"type":"text","text":"silently, or logged if it needs your attention."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An outbound event is handled by the outbound handlers in the tail-to-head direction as shown on the right side of the"},{"type":"text","text":" "},{"type":"text","text":"diagram. An outbound handler usually generates or transforms the outbound traffic such as write requests."},{"type":"text","text":" "},{"type":"text","text":"If an outbound event goes beyond the head outbound handler, it is handled by an I\/O thread associated with the"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". The I\/O thread often performs the actual output operation such as "},{"code":"Socket.write","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"For example, let us assume that we created the following pipeline:","type":"text"}]},{"syntax":null,"code":["ChannelPipeline p = ...","let future = p.add(name: \"1\", handler: InboundHandlerA()).flatMap {","  p.add(name: \"2\", handler: InboundHandlerB())","}.flatMap {","  p.add(name: \"3\", handler: OutboundHandlerA())","}.flatMap {","  p.add(name: \"4\", handler: OutboundHandlerB())","}.flatMap {","  p.add(name: \"5\", handler: InboundOutboundHandlerX())","}","\/\/ Handle the future as well ...."],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example above, a class whose name starts with "},{"type":"codeVoice","code":"Inbound"},{"type":"text","text":" is an inbound handler."},{"type":"text","text":" "},{"type":"text","text":"A class whose name starts with "},{"type":"codeVoice","code":"Outbound"},{"type":"text","text":" is an outbound handler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the given example configuration, the handler evaluation order is 1, 2, 3, 4, 5 when an event goes inbound."},{"type":"text","text":" "},{"type":"text","text":"When an event goes outbound, the order is 5, 4, 3, 2, 1.  On top of this principle, "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" skips"},{"type":"text","text":" "},{"type":"text","text":"the evaluation of certain handlers to shorten the stack depth:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"3 and 4 don’t implement "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":", and therefore the actual evaluation order of an inbound event will be: 1, 2, and 5."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"1 and 2 don’t implement "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":", and therefore the actual evaluation order of a outbound event will be: 5, 4, and 3."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If 5 implements both "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":", the evaluation order of an inbound and a outbound event could be 125 and 543 respectively."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Note:   Handlers may choose not to propagate messages down the pipeline immediately.  For example a handler may need to wait","type":"text"},{"text":" ","type":"text"},{"text":"for additional data before sending a protocol event to the next handler in the pipeline.  Due to this you can’t assume that later handlers","type":"text"},{"text":" ","type":"text"},{"text":"in the pipeline will receive the same number of events as were sent, or that events of different types will arrive in the same order.","type":"text"},{"text":" ","type":"text"},{"text":"For example - a user event could overtake a data event if a handler is aggregating data events before propagating but immediately","type":"text"},{"text":" ","type":"text"},{"text":"propagating user events.","type":"text"}]},{"anchor":"Forwarding-an-event-to-the-next-handler","level":1,"type":"heading","text":"Forwarding an event to the next handler"},{"type":"paragraph","inlineContent":[{"text":"As you might noticed in the diagram above, a handler has to invoke the event propagation methods in","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" to forward an event to its next handler.","type":"text"},{"text":" ","type":"text"},{"text":"Those methods include:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inbound event propagation methods defined in "},{"type":"codeVoice","code":"ChannelInboundInvoker"}]}]},{"content":[{"inlineContent":[{"text":"Outbound event propagation methods defined in ","type":"text"},{"code":"ChannelOutboundInvoker","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Building-a-pipeline","level":1,"type":"heading","text":"Building a pipeline"},{"type":"paragraph","inlineContent":[{"text":"A user is supposed to have one or more ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s in a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" to receive I\/O events (e.g. read) and","type":"text"},{"text":" ","type":"text"},{"text":"to request I\/O operations (e.g. write and close).  For example, a typical server will have the following handlers","type":"text"},{"text":" ","type":"text"},{"text":"in each channel’s pipeline, but your mileage may vary depending on the complexity and characteristics of the","type":"text"},{"text":" ","type":"text"},{"text":"protocol and business logic:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Protocol Decoder - translates binary data (e.g. ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":") into a struct \/ class","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Protocol Encoder - translates a struct \/ class into binary data (e.g. "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Business Logic Handler - performs the actual business logic (e.g. database access)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Thread-safety","level":1,"type":"heading","text":"Thread safety"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" can be added or removed at any time because a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" is thread safe.","type":"text"}]}]}],"sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP"]}],"metadata":{"roleHeading":"Class","symbolKind":"class","title":"ChannelPipeline","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"modules":[{"name":"NIOCore"}],"role":"symbol","externalID":"s:7NIOCore15ChannelPipelineC","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/channelpipeline"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/syncOperations"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-352i2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-7wa0e","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2fmmt","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2s3d9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-6qm2j","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-9cxep","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/close(mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-2u7u9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-9ow8y","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-2zwp1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-7xmo","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-3lr76","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-5v7xj","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelActive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRead(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/flush()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/handler(type:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/read()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/register(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-4alhd","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-8mrfs","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-2dhfw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-9c4qg","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-1v5di","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-3n54r","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/write(_:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/writeAndFlush(_:promise:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/CustomDebugStringConvertible-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/flush()":{"url":"\/documentation\/niocore\/channelpipeline\/flush()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/flush()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"()"}],"abstract":[{"text":"Flush data that was previously written via ","type":"text"},{"code":"write","type":"codeVoice"},{"type":"text","text":" to the remote peer."}],"role":"symbol","type":"topic","title":"flush()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelInactive()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelInactive","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes inactive."}],"title":"fireChannelInactive()","url":"\/documentation\/niocore\/channelpipeline\/firechannelinactive()","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelInactive()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/eventLoop":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is used by the underlying "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"title":"eventLoop","url":"\/documentation\/niocore\/channelpipeline\/eventloop","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/eventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandler(_:name:position:)-7wa0e":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-7wa0e","url":"\/documentation\/niocore\/channelpipeline\/addhandler(_:name:position:)-7wa0e","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"addHandler(_:name:position:)","abstract":[],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/write(_:promise:)":{"abstract":[{"type":"text","text":"Write data to the remote peer."}],"title":"write(_:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/write(_:promise:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/niocore\/channelpipeline\/write(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:)-2dhfw":{"title":"removeHandler(context:)","abstract":[{"type":"text","text":"Remove a "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:)-2dhfw","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-2dhfw"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withPipeliningAssistance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withServerUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"withErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","abstract":[{"text":"Configure a ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" for use as a HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/configurehttpserverpipeline(position:withpipeliningassistance:withserverupgrade:witherrorhandling:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-6qm2j":{"title":"addHandlers(_:position:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-6qm2j","role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-6qm2j","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier","text":"ChannelPipeline"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier","text":"Position"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(name:)-5v7xj":{"url":"\/documentation\/niocore\/channelpipeline\/context(name:)-5v7xj","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-5v7xj","title":"context(name:)","type":"topic","abstract":[{"text":"Returns the ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" that belongs to a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handlerType:)-2zwp1":{"role":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/context(handlertype:)-2zwp1","abstract":[],"title":"context(handlerType:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-2zwp1","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"handlerType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelActive()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelActive()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelActive","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/niocore\/channelpipeline\/firechannelactive()","kind":"symbol","abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" becomes active.","type":"text"}],"title":"fireChannelActive()","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:)":{"kind":"symbol","role":"symbol","abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP client.","type":"text"}],"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHTTPClientHandlers"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"leftOverBytesStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-2fmmt":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandlers","kind":"identifier"},{"text":"([","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"type":"codeVoice","code":"ChannelHandler.add(first:)"},{"type":"text","text":"."}],"title":"addHandlers(_:position:)","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-2fmmt","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2fmmt"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handler:)-2u7u9":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-2u7u9","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/context(handler:)-2u7u9","title":"context(handler:)","role":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRead(_:)":{"abstract":[{"type":"text","text":"Called once there is some data read for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that needs processing."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"fireChannelRead(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRead(_:)","url":"\/documentation\/niocore\/channelpipeline\/firechannelread(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/ChannelOutboundInvoker-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/ChannelOutboundInvoker-Implementations","title":"ChannelOutboundInvoker Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/channeloutboundinvoker-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelUnregistered()":{"url":"\/documentation\/niocore\/channelpipeline\/firechannelunregistered()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelUnregistered()","title":"fireChannelUnregistered()","abstract":[{"type":"text","text":"Called once a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" was unregistered from its "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" which means no IO will be handled for a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" anymore."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelUnregistered"},{"kind":"text","text":"()"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelReadComplete()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelReadComplete()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fireChannelReadComplete"},{"kind":"text","text":"()"}],"role":"symbol","title":"fireChannelReadComplete()","url":"\/documentation\/niocore\/channelpipeline\/firechannelreadcomplete()","kind":"symbol","abstract":[{"text":"Called once there is no more data to read immediately on a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":". Any new data received will be handled later.","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handler:)-9ow8y":{"kind":"symbol","title":"context(handler:)","abstract":[{"text":"Returns the ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" that belongs to a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","text":"ChannelHandler"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handler:)-9ow8y","url":"\/documentation\/niocore\/channelpipeline\/context(handler:)-9ow8y","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:)-8mrfs":{"title":"removeHandler(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:)-8mrfs","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-8mrfs","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:)-4alhd":{"title":"removeHandler(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"text":"Remove a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" from the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:)-4alhd","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:)-4alhd"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/Position":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Position"}],"title":"ChannelPipeline.Position","kind":"symbol","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"Position","type":"codeVoice"},{"text":" within the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" used to insert handlers into the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/position","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Position"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireErrorCaught(_:)":{"url":"\/documentation\/niocore\/channelpipeline\/fireerrorcaught(_:)","abstract":[{"type":"text","text":"Called when an inbound operation "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" was caught."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireErrorCaught"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireErrorCaught(_:)","type":"topic","title":"fireErrorCaught(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"type":"codeVoice","code":"ChannelCore"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"title":"ChannelOutboundInvoker","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelWritabilityChanged()":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelWritabilityChanged()","title":"fireChannelWritabilityChanged()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelWritabilityChanged","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Called when a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"’s writable state changes.","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelwritabilitychanged()","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/handler(type:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/handler(type:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns the first "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" of the given type."}],"url":"\/documentation\/niocore\/channelpipeline\/handler(type:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"handler(type:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:)-9c4qg":{"title":"removeHandler(context:)","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:)-9c4qg","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:)-9c4qg","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/CustomDebugStringConvertible-Implementations":{"title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/CustomDebugStringConvertible-Implementations","kind":"article","abstract":[],"url":"\/documentation\/niocore\/channelpipeline\/customdebugstringconvertible-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(handlerType:)-7xmo":{"abstract":[{"text":"Returns the ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" that belongs to a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" of the given type.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(handlerType:)-7xmo","url":"\/documentation\/niocore\/channelpipeline\/context(handlertype:)-7xmo","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":">("},{"kind":"externalParam","text":"handlerType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":">"}],"title":"context(handlerType:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/writeAndFlush(_:promise:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Shortcut for calling "},{"type":"codeVoice","code":"write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}],"title":"writeAndFlush(_:promise:)","url":"\/documentation\/niocore\/channelpipeline\/writeandflush(_:promise:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/writeAndFlush(_:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireUserInboundEventTriggered(_:)":{"abstract":[{"text":"Trigger a custom user inbound event which will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/fireuserinboundeventtriggered(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireUserInboundEventTriggered(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireUserInboundEventTriggered"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"type":"topic","title":"fireUserInboundEventTriggered(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/close(mode:promise:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/close(mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"title":"close(mode:promise:)","abstract":[{"type":"text","text":"Close the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" and so the connection if one exists."}],"url":"\/documentation\/niocore\/channelpipeline\/close(mode:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/connect(to:promise:)":{"abstract":[{"text":"Connect to a ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/connect(to:promise:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"type":"topic","title":"connect(to:promise:)","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:promise:)","url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:promise:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"kind":"symbol","title":"removeHandler(name:promise:)","role":"symbol","abstract":[{"text":"Remove a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" from the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"role":"symbol","title":"ChannelInvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","url":"\/documentation\/niocore\/channelinvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(context:promise:)":{"title":"removeHandler(context:promise:)","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/removehandler(context:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(context:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Remove a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"type":"topic"},"doc://co.pointfree.VaporRouting/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s28CustomDebugStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:)-1v5di":{"abstract":[{"text":"Remove a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:)-1v5di","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-1v5di","title":"removeHandler(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/triggerUserOutboundEvent(_:promise:)":{"url":"\/documentation\/niocore\/channelpipeline\/triggeruseroutboundevent(_:promise:)","abstract":[{"type":"text","text":"Trigger a custom user outbound event which will flow through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/triggerUserOutboundEvent(_:promise:)","title":"triggerUserOutboundEvent(_:promise:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"abstract":[{"type":"text","text":"A list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"type":"text","text":"interact with each other."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelPipeline"}],"title":"ChannelPipeline","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelPipeline"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-2s3d9":{"kind":"symbol","abstract":[],"url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-2s3d9","title":"addHandlers(_:position:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandlers"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-2s3d9"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/context(name:)-3lr76":{"abstract":[],"role":"symbol","title":"context(name:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/context(name:)-3lr76","url":"\/documentation\/niocore\/channelpipeline\/context(name:)-3lr76"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/bind(to:promise:)":{"abstract":[{"type":"text","text":"Bind to a "},{"code":"SocketAddress","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/channelpipeline\/bind(to:promise:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"type":"topic","title":"bind(to:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","url":"\/documentation\/niocore\/channelpipeline\/configurehttp2secureupgrade(h2pipelineconfigurator:http1pipelineconfigurator:)","title":"configureHTTP2SecureUpgrade(h2PipelineConfigurator:http1PipelineConfigurator:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2PipelineConfigurator","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1PipelineConfigurator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"text":"Configures a channel pipeline to perform a HTTP\/2 secure upgrade.","type":"text"}],"deprecated":true,"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRegistered()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","abstract":[{"text":"Called once a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" was registered to its ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so IO will be processed."}],"type":"topic","title":"fireChannelRegistered()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"url":"\/documentation\/niocore\/channelpipeline\/firechannelregistered()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/init(channel:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":". This method should never be called by the end-user"},{"type":"text","text":" "},{"type":"text","text":"directly: it is only intended for use with custom "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" implementations. Users should always use"},{"type":"text","text":" "},{"type":"codeVoice","code":"channel.pipeline"},{"type":"text","text":" to access the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"title":"init(channel:)","url":"\/documentation\/niocore\/channelpipeline\/init(channel:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/init(channel:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(name:)-3n54r":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(name:)-3n54r","abstract":[],"type":"topic","title":"removeHandler(name:)","url":"\/documentation\/niocore\/channelpipeline\/removehandler(name:)-3n54r","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandlers(_:position:)-9cxep":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandlers(_:position:)-9cxep","abstract":[{"type":"text","text":"Adds the provided channel handlers to the pipeline in the order given, taking account"},{"type":"text","text":" "},{"type":"text","text":"of the behaviour of "},{"type":"codeVoice","code":"ChannelHandler.add(first:)"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addHandlers","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"addHandlers(_:position:)","url":"\/documentation\/niocore\/channelpipeline\/addhandlers(_:position:)-9cxep","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"title":"ChannelInboundInvoker","abstract":[{"type":"text","text":"Fire inbound events related to a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" until its end is reached or it’s consumed by a "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundInvoker"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundInvoker"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","type":"topic","url":"\/documentation\/niocore\/channelinboundinvoker"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/removeHandler(_:promise:)":{"kind":"symbol","type":"topic","role":"symbol","title":"removeHandler(_:promise:)","url":"\/documentation\/niocore\/channelpipeline\/removehandler(_:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/removeHandler(_:promise:)","abstract":[{"text":"Remove a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" from the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/syncOperations":{"abstract":[{"type":"text","text":"Returns a view of operations which can be performed synchronously on this pipeline. All"},{"type":"text","text":" "},{"type":"text","text":"operations "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be called on the event loop."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/syncOperations","url":"\/documentation\/niocore\/channelpipeline\/syncoperations","kind":"symbol","title":"syncOperations","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncOperations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SynchronousOperations","preciseIdentifier":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)":{"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","type":"topic","abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP client with a client upgrader configuration.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addHTTPClientHandlers","kind":"identifier"},{"text":"(","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"text":".","kind":"text"},{"text":"Position","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"text":", ","kind":"text"},{"text":"leftOverBytesStrategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RemoveAfterUpgradeStrategy","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"text":", ","kind":"text"},{"text":"withClientUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTPClientUpgradeConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"text":"?) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/addhttpclienthandlers(position:leftoverbytesstrategy:withclientupgrade:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/read()":{"url":"\/documentation\/niocore\/channelpipeline\/read()","abstract":[{"type":"text","text":"Signal that we want to read from the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" once there is data ready."}],"type":"topic","title":"read()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/read()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"abstract":[{"type":"text","text":"A view of a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" which may be used to invoke synchronous operations."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SynchronousOperations"}],"title":"ChannelPipeline.SynchronousOperations","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOperations"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/register(promise:)":{"title":"register(promise:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"url":"\/documentation\/niocore\/channelpipeline\/register(promise:)","abstract":[{"type":"text","text":"Register on an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so have all its IO handled."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/register(promise:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/addHandler(_:name:position:)-352i2":{"role":"symbol","title":"addHandler(_:name:position:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/addHandler(_:name:position:)-352i2","url":"\/documentation\/niocore\/channelpipeline\/addhandler(_:name:position:)-352i2","type":"topic","abstract":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addHandler"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}