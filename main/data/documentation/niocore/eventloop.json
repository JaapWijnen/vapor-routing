{"metadata":{"title":"EventLoop","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"role":"symbol","symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore9EventLoopP"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Usually multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s share the same ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" for processing IO \/ tasks and so share the same processing ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"For a better understanding of how such an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" works internally the following pseudo code may be helpful:","type":"text"}]},{"syntax":null,"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Because an ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" may be shared between multiple ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s it’s important to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"NOT","type":"text"}]},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop"]}],"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu"]}],"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop"],"type":"conformingTypes","kind":"relationships"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatSubmit(_:)":{"role":"symbol","abstract":[{"text":"Submit ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" to be run on this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"flatSubmit(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/flatsubmit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatSubmit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","title":"EmbeddedEventLoop","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is embedded in the current running context with no external"},{"type":"text","text":" "},{"type":"text","text":"control."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"url":"\/documentation\/nioembedded\/embeddedeventloop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(deadline:file:line:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatScheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" at the given time.","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/flatscheduletask(deadline:file:line:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","role":"symbol","title":"flatScheduleTask(deadline:file:line:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is already marked as success. Notifications will be done using this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" as execution ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","role":"symbol","title":"makeSucceededFuture(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-4okco":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","defaultImplementations":1,"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-4okco","title":"makeSucceededVoidFuture()","abstract":[{"type":"text","text":"Return a succeeded "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" future."}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makePromise(of:file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makePromise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makepromise(of:file:line:)","title":"makePromise(of:file:line:)","abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be notified using this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" as execution ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:file:line:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:file:line:)","title":"makeSucceededFuture(_:file:line:)","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","deprecated":true,"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","type":"topic","title":"EventLoopGroup","role":"symbol","url":"\/documentation\/niocore\/eventloopgroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/performWithTask(_:)":{"abstract":[{"text":"Run the ","type":"text"},{"code":"async","type":"codeVoice"},{"text":" function ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" on this event loop and return its result as","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","title":"performWithTask(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performWithTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","url":"\/documentation\/niocore\/eventloop\/performwithtask(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(_:)":{"abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is marked as succeeded or failed with the value held by ","type":"text"},{"code":"result","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","title":"makeCompletedFuture(_:)","url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeCompletedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:)":{"type":"topic","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is already marked as failed. Notifications will be done using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeFailedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"makeFailedFuture(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"title":"EventLoop","url":"\/documentation\/niocore\/eventloop","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/submit(_:)-44luu":{"type":"topic","title":"submit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"text":". Once the execution is complete the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" is notified.","type":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/submit(_:)-44luu","defaultImplementations":1,"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/inEventLoop":{"type":"topic","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the current "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":" is the same as the "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":" that is tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"url":"\/documentation\/niocore\/eventloop\/ineventloop","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"inEventLoop","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Schedule a repeated asynchronous task to be executed by the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" with a fixed delay between the end and"},{"text":" ","type":"text"},{"text":"start of each task.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedAsyncTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"notifying","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?, (","kind":"text"},{"text":"RepeatedTask","preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"RepeatedTask","preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier"}],"title":"scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/schedulerepeatedasynctask(initialdelay:delay:notifying:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(in:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","url":"\/documentation\/niocore\/eventloop\/scheduletask(in:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Scheduled","preciseIdentifier":"s:7NIOCore9ScheduledV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"required":true,"kind":"symbol","type":"topic","title":"scheduleTask(in:_:)","abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" after the given amount of time.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionNotInEventLoop(file:line:)-4nrf2":{"type":"topic","abstract":[{"type":"text","text":"Asserts that the current thread is "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":"."}],"defaultImplementations":1,"url":"\/documentation\/niocore\/eventloop\/preconditionnotineventloop(file:line:)-4nrf2","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"kind":"symbol","title":"preconditionNotInEventLoop(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]>"}],"role":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","title":"flatten(_:)","abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains an array of results, maintaining same ordering as the futures."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(in:file:line:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatScheduleTask","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"text":" that is executed by this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" after the given amount of time.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(in:file:line:_:)","title":"flatScheduleTask(in:file:line:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-7tski":{"type":"topic","role":"symbol","abstract":[{"text":"Returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that succeeds only when all the provided futures succeed,","type":"text"},{"text":" ","type":"text"},{"text":"ignoring the resolved values.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-7tski","title":"flatten(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedTask(initialDelay:delay:notifying:_:)":{"abstract":[{"type":"text","text":"Schedule a repeated task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" with a fixed delay between the end and start of each"},{"type":"text","text":" "},{"type":"text","text":"task."}],"url":"\/documentation\/niocore\/eventloop\/schedulerepeatedtask(initialdelay:delay:notifying:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"text":"delay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"text":"notifying","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?, (","kind":"text"},{"text":"RepeatedTask","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12RepeatedTaskC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"RepeatedTask","preciseIdentifier":"s:7NIOCore12RepeatedTaskC"}],"type":"topic","title":"scheduleRepeatedTask(initialDelay:delay:notifying:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertInEventLoop(file:line:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"text":". Never has any effect in release mode.","type":"text"}],"kind":"symbol","title":"assertInEventLoop(file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionInEventLoop(file:line:)-7ukrq":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","kind":"symbol","type":"topic","url":"\/documentation\/niocore\/eventloop\/preconditionineventloop(file:line:)-7ukrq","required":true,"title":"preconditionInEventLoop(file:line:)","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(deadline:_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","title":"scheduleTask(deadline:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIODeadline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore11NIODeadlineV"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Scheduled","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloop\/scheduletask(deadline:_:)","type":"topic","abstract":[{"text":"Schedule a ","type":"text"},{"type":"codeVoice","code":"task"},{"text":" that is executed by this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" at the given time.","type":"text"}],"role":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:file:line:)":{"deprecated":true,"abstract":[],"title":"makeFailedFuture(_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeFailedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:file:line:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertNotInEventLoop(file:line:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","title":"assertNotInEventLoop(file:line:)","abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/execute(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"execute(_:)","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"code":"EventLoop","type":"codeVoice"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","type":"topic","url":"\/documentation\/niocore\/eventloop\/execute(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/close()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"title":"close()","kind":"symbol","abstract":[{"type":"text","text":"Close this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","type":"topic","url":"\/documentation\/niocore\/eventloop\/close()","role":"symbol"}}}