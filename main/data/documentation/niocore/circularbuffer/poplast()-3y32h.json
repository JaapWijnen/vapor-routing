{"metadata":{"symbolKind":"method","roleHeading":"Instance Method","title":"popLast()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:7NIOCore14CircularBufferV7popLastxSgyF","role":"symbol","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popLast()-3y32h"},"abstract":[{"type":"text","text":"Removes and returns the last element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/circularbuffer\/poplast()-3y32h"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The last element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"empty; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Calling this method may invalidate all saved indices of this","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":". Do not rely on a previously stored index value after","type":"text"},{"text":" ","type":"text"},{"text":"altering a ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":" with any operation that can change its length.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"O(1)","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Complexity","style":"note"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/popLast()-3y32h":{"role":"symbol","url":"\/documentation\/niocore\/circularbuffer\/poplast()-3y32h","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popLast"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Removes and returns the last element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"title":"popLast()","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popLast()-3y32h"}}}