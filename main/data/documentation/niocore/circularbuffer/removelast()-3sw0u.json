{"abstract":[{"type":"text","text":"Inherited from "},{"code":"RangeReplaceableCollection.removeLast()","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/removelast()-3sw0u"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast()-3sw0u"},"metadata":{"title":"removeLast()","modules":[{"name":"NIOCore"}],"symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeLast"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"externalID":"s:SmsSKRz11SubSequenceSlQzRszrlE10removeLast7ElementSTQzyF::SYNTHESIZED::s:7NIOCore14CircularBufferV","extendedModule":"Swift","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/removeLast()-3sw0u":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast()-3sw0u","url":"\/documentation\/niocore\/circularbuffer\/removelast()-3sw0u","type":"topic","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BidirectionalCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"title":"removeLast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeLast"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/RangeReplaceableCollection-Implementations":{"abstract":[],"kind":"article","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/RangeReplaceableCollection-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/circularbuffer","abstract":[{"text":"An automatically expanding ring buffer implementation backed by a ","type":"text"},{"type":"codeVoice","code":"ContiguousArray"},{"text":". Even though this implementation","type":"text"},{"text":" ","type":"text"},{"text":"will automatically expand if more elements than ","type":"text"},{"type":"codeVoice","code":"initialCapacity"},{"text":" are stored, itâ€™s advantageous to prevent","type":"text"},{"text":" ","type":"text"},{"text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","title":"CircularBuffer"}}}