{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)"},"metadata":{"roleHeading":"Instance Method","role":"symbol","extendedModule":"NIOCore","externalID":"s:7NIOCore14EventLoopGroupP8AsyncKitE9tryFutureyAA0bcH0Cyqd__Gqd__yKclF","symbolKind":"method","title":"tryFuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"NIOCore"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"An alternate name for this would be ","type":"text"},{"code":"future(catching:)","type":"codeVoice"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"code":"el.future { ... }","type":"codeVoice"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"work","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The potentially throwing closure to execute as a"},{"type":"text","text":" "},{"type":"text","text":"future. If the closure throws, a failed future is returned."}]}],"name":"work"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"This method replaces this code:","type":"text"}],"type":"paragraph"},{"code":["return something.eventLoop.future().flatMapThrowing {"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"With this code:"}],"type":"paragraph"},{"code":["return something.eventLoop.tryFuture {"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"That’s pretty much it. It’s sugar.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)"]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","type":"topic","title":"EventLoopGroup","role":"symbol","url":"\/documentation\/niocore\/eventloopgroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"title":"NIOCore","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","type":"topic","role":"collection","url":"\/documentation\/niocore","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup/tryFuture(_:)":{"type":"topic","abstract":[{"text":"An alternate name for this would be ","type":"text"},{"code":"future(catching:)","type":"codeVoice"},{"text":", but with that","type":"text"},{"text":" ","type":"text"},{"text":"name, trailing closure syntax just looks like ","type":"text"},{"type":"codeVoice","code":"el.future { ... }"},{"text":", which","type":"text"},{"text":" ","type":"text"},{"text":"does not indicate to readers of the code that it is the error-capturing","type":"text"},{"text":" ","type":"text"},{"text":"version. Since such an indication is highly desirable, a slightly less","type":"text"},{"text":" ","type":"text"},{"text":"idiomatic name is used instead.","type":"text"}],"role":"symbol","title":"tryFuture(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup\/tryFuture(_:)","url":"\/documentation\/niocore\/eventloopgroup\/tryfuture(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","type":"topic","role":"symbol","url":"\/documentation\/niocore\/eventloopfuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol"}}}