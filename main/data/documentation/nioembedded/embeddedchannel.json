{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedChannel","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please remember to call "},{"type":"codeVoice","code":"finish()"},{"type":"text","text":" when you are no longer using this"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To feed events through an "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" use"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel.writeInbound"},{"type":"text","text":" which accepts data of any type. It will then"},{"type":"text","text":" "},{"type":"text","text":"forward that data through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" and the subsequent"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" will receive it through the usual "},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":" "},{"type":"text","text":"event. The user is responsible for making sure the first"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" expects data of that type."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" automatically collects arriving outbound data and makes it","type":"text"},{"text":" ","type":"text"},{"text":"available one-by-one through ","type":"text"},{"type":"codeVoice","code":"readOutbound"},{"text":".","type":"text"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is currently only compatible with"},{"type":"text","text":" "},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"type":"text","text":"s and cannot be used with "},{"code":"SelectableEventLoop","type":"codeVoice"},{"type":"text","text":"s from"},{"type":"text","text":" "},{"type":"text","text":"for example "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"style":"warning","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s, "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"is not thread-safe"}]},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"is because it is intended to be run in the thread that instantiated it. Users are"},{"type":"text","text":" "},{"type":"text","text":"responsible for ensuring they never call into an "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" in an"},{"type":"text","text":" "},{"type":"text","text":"unsynchronized fashion. "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":"s notes also apply as"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" uses an "},{"type":"codeVoice","code":"EmbeddedEventLoop"},{"type":"text","text":" as its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}]}]}]}],"kind":"symbol","metadata":{"role":"symbol","externalID":"s:11NIOEmbedded15EmbeddedChannelC","modules":[{"name":"NIOEmbedded"}],"title":"EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"roleHeading":"Class","symbolKind":"class"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"],"title":"Enumerations"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/setOption(_:value:)-5j5cw":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/setOption(_:value:)-5j5cw","kind":"symbol","type":"topic","title":"setOption(_:value:)","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/setoption(_:value:)-5j5cw"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readInbound(as:)":{"url":"\/documentation\/nioembedded\/embeddedchannel\/readinbound(as:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readInbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"code":"T","type":"codeVoice"},{"type":"text","text":" out of the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":"’s inbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" will be returned."}],"kind":"symbol","title":"readInbound(as:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readInbound(as:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish(acceptAlreadyClosed:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"text":"acceptAlreadyClosed","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","text":"EmbeddedChannel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO","text":"LeftOverState","kind":"typeIdentifier"}],"title":"finish(acceptAlreadyClosed:)","abstract":[{"text":"Synchronously closes the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":".","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/finish(acceptalreadyclosed:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish(acceptAlreadyClosed:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/eventLoop":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/eventLoop","url":"\/documentation\/nioembedded\/embeddedchannel\/eventloop","role":"symbol","title":"eventLoop","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/ChannelOutboundInvoker-Implementations":{"type":"topic","title":"ChannelOutboundInvoker Implementations","url":"\/documentation\/nioembedded\/embeddedchannel\/channeloutboundinvoker-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/ChannelOutboundInvoker-Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState":{"url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate","title":"EmbeddedChannel.BufferState","role":"symbol","navigatorTitle":[{"text":"BufferState","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BufferState","kind":"identifier"}],"abstract":[{"code":"BufferState","type":"codeVoice"},{"text":" represents the state of either the inbound, or the outbound ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" buffer. These","type":"text"},{"text":" ","type":"text"},{"text":"buffers contain data that travelled the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/localAddress":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/localAddress","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"localAddress"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/localaddress","title":"localAddress"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/getOption(_:)-6dgj0":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/getOption(_:)-6dgj0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/getoption(_:)-6dgj0","kind":"symbol","role":"symbol","title":"getOption(_:)","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"text":" ","type":"text"},{"text":"are no elements in the outbound buffer, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" will be returned.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","title":"readOutbound(as:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeInbound(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeInbound(_:)","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/writeinbound(_:)","title":"writeInbound(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeInbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EmbeddedChannel","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"text":".","kind":"text"},{"text":"BufferState","kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/finish()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"EmbeddedChannel","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"LeftOverState","preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO"}],"abstract":[{"type":"text","text":"Synchronously closes the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","title":"finish()","url":"\/documentation\/nioembedded\/embeddedchannel\/finish()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/finish()"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"title":"EmbeddedChannel.LeftOverState","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"type":"topic","abstract":[{"type":"codeVoice","code":"LeftOverState"},{"type":"text","text":" represents any left-over inbound, outbound, and pending outbound events that hit the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" and were not consumed when "},{"type":"codeVoice","code":"finish"},{"type":"text","text":" was called on the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/parent":{"title":"parent","type":"topic","role":"symbol","abstract":[{"code":"nil","type":"codeVoice"},{"text":" because ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"s don’t have parents.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/parent","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/parent","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WrongTypeError"}],"title":"EmbeddedChannel.WrongTypeError","type":"topic","kind":"symbol","abstract":[{"code":"WrongTypeError","type":"codeVoice"},{"text":" is throws if you use ","type":"text"},{"code":"readInbound","type":"codeVoice"},{"type":"text","text":" or "},{"code":"readOutbound","type":"codeVoice"},{"type":"text","text":" and request a certain type but the first"},{"type":"text","text":" "},{"type":"text","text":"item in the respective buffer is of a different type."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror","navigatorTitle":[{"text":"WrongTypeError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeOutbound(_:)":{"url":"\/documentation\/nioembedded\/embeddedchannel\/writeoutbound(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeOutbound(_:)","kind":"symbol","title":"writeOutbound(_:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC","kind":"typeIdentifier","text":"EmbeddedChannel"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO","kind":"typeIdentifier","text":"BufferState"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/embeddedEventLoop":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embeddedEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EmbeddedEventLoop","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","kind":"typeIdentifier"}],"title":"embeddedEventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/embeddedEventLoop","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/embeddedeventloop","abstract":[{"text":"Returns the ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" that this ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" uses. This will return the same instance as","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel.eventLoop","type":"codeVoice"},{"text":" but as the concrete ","type":"text"},{"code":"EmbeddedEventLoop","type":"codeVoice"},{"text":" rather than as ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" existential.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"role":"symbol","kind":"symbol","abstract":[{"text":"Allows users to invoke an “outbound” operation related to a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" that will flow through the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" until","type":"text"},{"text":" ","type":"text"},{"text":"it will finally be executed by the the ","type":"text"},{"type":"codeVoice","code":"ChannelCore"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"ChannelOutboundInvoker","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloutboundinvoker","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOutboundInvoker","kind":"identifier"}],"title":"ChannelOutboundInvoker","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"type":"text","text":"A "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","type":"topic","role":"symbol","url":"\/documentation\/niocore\/channel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SynchronousOptions"}],"title":"EmbeddedChannel.SynchronousOptions","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOptions"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isWritable":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isWritable","url":"\/documentation\/nioembedded\/embeddedchannel\/iswritable","type":"topic","role":"symbol","title":"isWritable","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isWritable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","role":"collectionGroup","title":"Channel Implementations","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/remoteAddress":{"kind":"symbol","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/remoteaddress","title":"remoteAddress","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/remoteAddress","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/closeFuture":{"title":"closeFuture","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeFuture"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/closeFuture","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/closefuture"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/pipeline":{"title":"pipeline","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/pipeline","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipeline","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/pipeline","type":"topic","kind":"symbol","abstract":[],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handlers:loop:)":{"abstract":[{"text":"Create a new instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handlers:loop:)","url":"\/documentation\/nioembedded\/embeddedchannel\/init(handlers:loop:)","type":"topic","role":"symbol","title":"init(handlers:loop:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"handlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"loop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/connect(to:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"connect","type":"codeVoice"},{"text":" event through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which happens when it travels the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"remoteAddress"},{"type":"text","text":"."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)","title":"connect(to:promise:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","title":"bind(to:promise:)","role":"symbol","abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"bind","type":"codeVoice"},{"type":"text","text":" event through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":". If the event hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" which"},{"type":"text","text":" "},{"type":"text","text":"happens when it travels the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"localAddress","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/init(handler:loop:)":{"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Create a new instance.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/init(handler:loop:)","url":"\/documentation\/nioembedded\/embeddedchannel\/init(handler:loop:)","title":"init(handler:loop:)","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"loop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11NIOEmbedded17EmbeddedEventLoopC","text":"EmbeddedEventLoop","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/isActive":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/isActive","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is ‘active’."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isActive","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isActive","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/isactive"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/throwIfErrorCaught()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/throwIfErrorCaught()","abstract":[{"text":"This method will throw the error that is stored in the ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":" if any.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/throwiferrorcaught()","type":"topic","title":"throwIfErrorCaught()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throwIfErrorCaught","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/allocator":{"title":"allocator","kind":"symbol","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/allocator","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/allocator","type":"topic"}}}