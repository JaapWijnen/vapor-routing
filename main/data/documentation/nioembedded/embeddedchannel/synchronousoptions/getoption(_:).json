{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"option","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ChannelOption","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","preciseIdentifier":"s:7NIOCore13ChannelOptionP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","content":[{"inlineContent":[{"text":"Must be called on the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" is running on.","type":"text"}],"type":"paragraph"}],"style":"important"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)"},"kind":"symbol","abstract":[{"text":"Get the value of ","type":"text"},{"code":"option","type":"codeVoice"},{"text":" for this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/getoption(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"title":"getOption(_:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"NIOEmbedded"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC18SynchronousOptionsV9getOptiony5ValueQzxK7NIOCore0cG0RzlF"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelOption","kind":"identifier"}],"type":"topic","url":"\/documentation\/niocore\/channeloption","abstract":[{"text":"A configuration option that can be set on a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" to configure different behaviour.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","title":"ChannelOption","kind":"symbol","navigatorTitle":[{"text":"ChannelOption","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SynchronousOptions"}],"title":"EmbeddedChannel.SynchronousOptions","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOptions"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions/getOption(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Option"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Option"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)","type":"topic","title":"getOption(_:)","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/getoption(_:)","abstract":[{"type":"text","text":"Get the value of "},{"type":"codeVoice","code":"option"},{"text":" for this ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]}}}