{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"platforms":["Linux"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The address to fake-bind to."}],"type":"paragraph"}],"name":"address"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" which will be fulfilled when the fake-bind operation has been done."}]}],"name":"promise"}],"kind":"parameters"}],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"connect","type":"codeVoice"},{"text":" event through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which happens when it travels the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way to the front, this will also set the","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"remoteAddress","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"connect(to:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"modules":[{"name":"NIOEmbedded"}],"role":"symbol","externalID":"s:11NIOEmbedded15EmbeddedChannelC7connect2to7promisey7NIOCore13SocketAddressO_AG16EventLoopPromiseVyytGSgtF"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"abstract":[{"type":"text","text":"A promise to provide a result later."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","navigatorTitle":[{"text":"EventLoopPromise","kind":"identifier"}],"title":"EventLoopPromise","type":"topic","url":"\/documentation\/niocore\/eventlooppromise","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EventLoopPromise","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/connect(to:promise:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"connect","type":"codeVoice"},{"text":" event through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" ","type":"text"},{"text":"which happens when it travels the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"remoteAddress"},{"type":"text","text":"."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/connect(to:promise:)","title":"connect(to:promise:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/connect(to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"SocketAddress","kind":"identifier"}],"url":"\/documentation\/niocore\/socketaddress","type":"topic","title":"SocketAddress","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}]}}}