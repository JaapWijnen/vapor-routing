{"abstract":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" if there was unconsumed inbound, outbound, or pending outbound data left"},{"type":"text","text":" "},{"type":"text","text":"on the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" when it was "},{"type":"codeVoice","code":"finish"},{"type":"text","text":"ed."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/hasleftovers"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"NIOEmbedded"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC13LeftOverStateO03hasD5OversSbvp","title":"hasLeftOvers","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasLeftOvers","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasLeftOvers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState/hasLeftOvers":{"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate\/hasleftovers","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasLeftOvers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"hasLeftOvers","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState\/hasLeftOvers","abstract":[{"code":"true","type":"codeVoice"},{"text":" if the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" if there was unconsumed inbound, outbound, or pending outbound data left","type":"text"},{"text":" ","type":"text"},{"text":"on the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when it was ","type":"text"},{"code":"finish","type":"codeVoice"},{"text":"ed.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/LeftOverState":{"title":"EmbeddedChannel.LeftOverState","url":"\/documentation\/nioembedded\/embeddedchannel\/leftoverstate","navigatorTitle":[{"text":"LeftOverState","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeftOverState","kind":"identifier"}],"type":"topic","abstract":[{"type":"codeVoice","code":"LeftOverState"},{"type":"text","text":" represents any left-over inbound, outbound, and pending outbound events that hit the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" and were not consumed when "},{"type":"codeVoice","code":"finish"},{"type":"text","text":" was called on the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/LeftOverState","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]}}}