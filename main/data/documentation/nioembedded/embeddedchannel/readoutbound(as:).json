{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readOutbound","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type = T.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Data hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer when data was written using ","type":"text"},{"code":"write","type":"codeVoice"},{"text":", then ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":"ed, and","type":"text"},{"text":" ","type":"text"},{"text":"then travelled the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way too the front. For data to hit the outbound buffer, the very","type":"text"},{"text":" ","type":"text"},{"text":"first ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" must have written and flushed it either explicitly (by calling","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"flush"},{"text":") or implicitly by not implementing ","type":"text"},{"type":"codeVoice","code":"write"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"flush"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"Outbound events travel the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" ","type":"text"},{"inlineContent":[{"type":"text","text":"back to front"}],"type":"emphasis"},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EmbeddedChannel.writeOutbound"},{"type":"text","text":" will "},{"type":"codeVoice","code":"write"},{"type":"text","text":" data through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":", starting with last"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"content"}],"abstract":[{"text":"If available, this method reads one element of type ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"text":" ","type":"text"},{"text":"are no elements in the outbound buffer, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" will be returned.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"metadata":{"externalID":"s:11NIOEmbedded15EmbeddedChannelC12readOutbound2asxSgxm_tKlF","role":"symbol","symbolKind":"method","modules":[{"name":"NIOEmbedded"}],"roleHeading":"Instance Method","title":"readOutbound(as:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readOutbound","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"code":"T","type":"codeVoice"},{"text":" out of the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":"’s outbound buffer. If the","type":"text"},{"text":" ","type":"text"},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"text":" ","type":"text"},{"text":"are no elements in the outbound buffer, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" will be returned.","type":"text"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","title":"readOutbound(as:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]}}}