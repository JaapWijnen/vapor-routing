{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/bufferstate\/full(_:)"]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState\/full(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"NIOEmbedded"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"full"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":"])"}],"externalID":"s:11NIOEmbedded15EmbeddedChannelC11BufferStateO4fullyAESay7NIOCore6NIOAnyVGcAEmF","role":"symbol","title":"EmbeddedChannel.BufferState.full(_:)","roleHeading":"Case","symbolKind":"case"},"abstract":[{"type":"text","text":"The buffer is non-empty."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"full","kind":"identifier"},{"text":"([","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny"},{"text":"])","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState/full(_:)":{"abstract":[{"type":"text","text":"The buffer is non-empty."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"full"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":"])"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState\/full(_:)","kind":"symbol","title":"EmbeddedChannel.BufferState.full(_:)","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate\/full(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/BufferState":{"url":"\/documentation\/nioembedded\/embeddedchannel\/bufferstate","title":"EmbeddedChannel.BufferState","role":"symbol","navigatorTitle":[{"text":"BufferState","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/BufferState","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BufferState","kind":"identifier"}],"abstract":[{"code":"BufferState","type":"codeVoice"},{"text":" represents the state of either the inbound, or the outbound ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" buffer. These","type":"text"},{"text":" ","type":"text"},{"text":"buffers contain data that travelled the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" all the way.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type. Contrary to"},{"type":"text","text":" "},{"code":"Any","type":"codeVoice"},{"text":" the overhead of ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":", ","type":"text"},{"code":"FileRegion","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"AddressEnvelope<ByteBuffer>","type":"codeVoice"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":" just like ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" will contain them within an existential container.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"title":"NIOAny","type":"topic","url":"\/documentation\/niocore\/nioany","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}],"kind":"symbol"}}}