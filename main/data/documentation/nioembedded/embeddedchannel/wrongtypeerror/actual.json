{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError\/actual","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror\/actual"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"symbolKind":"property","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"actual"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}],"roleHeading":"Instance Property","title":"actual","externalID":"s:11NIOEmbedded15EmbeddedChannelC14WrongTypeErrorV6actualypXpvp","modules":[{"name":"NIOEmbedded"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"actual"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"]]},"abstract":[{"text":"The type of the actual first element.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","role":"collection","title":"NIOEmbedded","type":"topic","url":"\/documentation\/nioembedded","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WrongTypeError"}],"title":"EmbeddedChannel.WrongTypeError","type":"topic","kind":"symbol","abstract":[{"code":"WrongTypeError","type":"codeVoice"},{"text":" is throws if you use ","type":"text"},{"code":"readInbound","type":"codeVoice"},{"type":"text","text":" or "},{"code":"readOutbound","type":"codeVoice"},{"type":"text","text":" and request a certain type but the first"},{"type":"text","text":" "},{"type":"text","text":"item in the respective buffer is of a different type."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror","navigatorTitle":[{"text":"WrongTypeError","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError/actual":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"actual"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}],"title":"actual","url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror\/actual","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError\/actual","role":"symbol","abstract":[{"type":"text","text":"The type of the actual first element."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}],"role":"symbol","title":"EmbeddedChannel","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"abstract":[{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" is in unit tests when you want to feed the inbound events"},{"type":"text","text":" "},{"type":"text","text":"and check the outbound events manually."}]}}}