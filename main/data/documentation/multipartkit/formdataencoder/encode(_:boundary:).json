{"abstract":[{"text":"Encodes an ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" item to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" using the supplied boundary.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"encodable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"","type":"text"},{"code":"multipart\/form-data","type":"codeVoice"},{"text":"-encoded ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generic "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" item."}]}],"name":"encodable"},{"content":[{"inlineContent":[{"type":"text","text":"Multipart boundary to use for encoding. This must not appear anywhere in the encoded data."}],"type":"paragraph"}],"name":"boundary"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"codeListing","syntax":null,"code":["let a = Foo(string: \"a\", int: 42, double: 3.14, array: [1, 2, 3])","let data = try FormDataEncoder().encode(a, boundary: \"123\")"]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"Any errors encoding the model with ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" or serializing the data.","type":"text"}]}]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataEncoder\/encode(_:boundary:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataEncoder"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/multipartkit\/formdataencoder\/encode(_:boundary:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"encode(_:boundary:)","modules":[{"name":"MultipartKit"}],"roleHeading":"Instance Method","externalID":"s:12MultipartKit15FormDataEncoderV6encode_8boundarySSx_SStKSERzlF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/MultipartKit":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit","url":"\/documentation\/multipartkit","kind":"symbol","role":"collection","title":"MultipartKit","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/MultipartKit/FormDataEncoder/encode(_:boundary:)":{"url":"\/documentation\/multipartkit\/formdataencoder\/encode(_:boundary:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundary"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataEncoder\/encode(_:boundary:)","abstract":[{"type":"text","text":"Encodes an "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" item to "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the supplied boundary."}],"role":"symbol","kind":"symbol","title":"encode(_:boundary:)"},"doc://co.pointfree.VaporRouting/documentation/MultipartKit/FormDataEncoder":{"url":"\/documentation\/multipartkit\/formdataencoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FormDataEncoder"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/MultipartKit\/FormDataEncoder","abstract":[{"type":"text","text":"Encodes "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" items to "},{"type":"codeVoice","code":"multipart\/form-data"},{"type":"text","text":" encoded "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FormDataEncoder"}],"title":"FormDataEncoder"}}}